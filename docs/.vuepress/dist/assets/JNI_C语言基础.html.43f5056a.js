import{_ as n,o as s,c as a,e as t}from"./app.89e8a229.js";const p={},e=t(`<h1 id="jni-c\u8BED\u8A00\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#jni-c\u8BED\u8A00\u57FA\u7840" aria-hidden="true">#</a> JNI_C\u8BED\u8A00\u57FA\u7840</h1><ol><li><p>JNI(java native interface)<br><code>Java</code>\u672C\u5730\u5F00\u53D1\u63A5\u53E3\uFF0C<code>JNI</code>\u662F\u4E00\u4E2A\u534F\u8BAE\uFF0C\u8FD9\u4E2A\u534F\u8BAE\u7528\u6765\u6C9F\u901A<code>Java</code>\u4EE3\u7801\u548C\u5916\u90E8\u7684\u672C\u5730\u4EE3\u7801(<code>c/c++</code>). \u901A\u8FC7\u8FD9\u4E2A\u534F\u8BAE<code>Java</code>\u4EE3\u7801\u5C31\u53EF\u4EE5\u8C03\u7528\u5916\u90E8\u7684<code>c/c++</code>\u4EE3\u7801\uFF0C\u5916\u90E8\u7684<code>c/c++</code>\u4EE3\u7801\u4E5F\u53EF\u4EE5\u8C03\u7528java\u4EE3\u7801\uFF0C \u4F7F\u7528JNI\u6280\u672F\uFF0C\u5176\u5B9E\u5C31\u662F\u5728Java\u7A0B\u5E8F\u4E2D\uFF0C\u8C03\u7528C\u8BED\u8A00\u7684\u51FD\u6570\u5E93\u4E2D\u63D0\u4F9B\u7684\u51FD\u6570\uFF0C\u6765\u5B8C\u6210\u4E00\u4E9BJava\u8BED\u8A00\u65E0\u6CD5\u5B8C\u6210\u7684\u4EFB\u52A1\u3002\u7531\u4E8EJava\u8BED\u8A00\u548CC\u8BED\u8A00\u7ED3\u6784\u5B8C\u5168\u4E0D\u76F8\u540C\uFF0C\u56E0\u6B64\u82E5\u60F3\u8BA9\u5B83\u4EEC\u4E8C\u8005\u4EA4\u4E92\uFF0C\u5219\u9700\u8981\u5236\u5B9A\u4E00\u7CFB\u5217\u7684\u89C4\u8303\u3002 JNI\u5C31\u662F\u8FD9\u7EC4\u89C4\u8303\uFF0C\u6B64\u65F6 Java\u53EA\u548CJNI\u4EA4\u4E92\uFF0C\u800C\u7531JNI\u53BB\u548CC\u8BED\u8A00\u4EA4\u4E92\u3002</p><p>JNI\u6280\u672F\u5206\u4E3A\u4E24\u90E8\u5206\uFF1AJava\u7AEF\u548CC\u8BED\u8A00\u7AEF\u3002\u4E14\u4EE5Java\u7AEF\u4E3A\u4E3B\u5BFC\u3002</p><ul><li>\u9996\u5148\uFF0CJava\u7A0B\u5E8F\u5458\u5728Java\u7AEF\u5B9A\u4E49\u4E00\u4E9Bnative\u65B9\u6CD5\uFF0C\u5E76\u5C06\u8FD9\u4E9B\u65B9\u6CD5\u4EE5C\u8BED\u8A00\u5934\u6587\u4EF6\u7684\u65B9\u5F0F\u63D0\u4F9B\u7ED9C\u7A0B\u5E8F\u5458\u3002</li><li>\u7136\u540E\uFF0CC\u7A0B\u5E8F\u5458\u4F7F\u7528C\u8BED\u8A00\uFF0C\u6765\u5B9E\u73B0Java\u7A0B\u5E8F\u5458\u63D0\u4F9B\u7684\u5934\u6587\u4EF6\u4E2D\u5B9A\u4E49\u7684\u51FD\u6570\u3002</li><li>\u63A5\u7740\uFF0CC\u7A0B\u5E8F\u5458\u5C06\u51FD\u6570\u6253\u5305\u6210\u4E00\u4E2A\u5E93\u6587\u4EF6\uFF0C\u5E76\u5C06\u5E93\u6587\u4EF6\u4EA4\u7ED9Java\u7A0B\u5E8F\u5458\u3002</li><li>\u6700\u540E\uFF0CJava\u7A0B\u5E8F\u5458\u5728Java\u7A0B\u5E8F\u4E2D\u5BFC\u5165\u5E93\u6587\u4EF6\uFF0C\u7136\u540E\u8C03\u7528native\u65B9\u6CD5\u3002 \u5728Java\u7A0B\u5E8F\u6267\u884C\u7684\u65F6\u5019\uFF0C\u82E5\u5728\u67D0\u4E2A\u7C7B\u4E2D\u8C03\u7528\u4E86native\u65B9\u6CD5\uFF0C\u5219\u865A\u62DF\u673A\u4F1A\u901A\u8FC7JNI\u6765\u8F6C\u8C03\u7528\u5E93\u6587\u4EF6\u4E2D\u7684C\u8BED\u8A00\u4EE3\u7801\u3002\u63D0\u793A\uFF1AC\u4EE3\u7801\u6700\u7EC8\u662F\u5728Linux\u8FDB\u7A0B\u4E2D\u6267\u884C\u7684\uFF0C\u800C\u4E0D\u662F\u5728\u865A\u62DF\u673A\u4E2D\u3002</li></ul></li><li><p>\u4E3A\u4EC0\u4E48\u8981\u7528JNI</p><ul><li>\u9996\u5148\uFF0CJava\u8BED\u8A00\u63D0\u4F9B\u7684\u7C7B\u5E93\u65E0\u6CD5\u6EE1\u8DB3\u8981\u6C42(\u9A71\u52A8\u5F00\u53D1 wifi\u7B49),\u4E14\u5728\u6570\u5B66\u8FD0\u7B97,\u5B9E\u65F6\u6E32\u67D3\u7684\u6E38\u620F\u4E0A,\u97F3\u89C6\u9891\u5904\u7406\u7B49\u65B9\u9762\u4E0A\u4E0EC/C++\u76F8\u6BD4\u6548\u7387\u7A0D\u4F4E\u3002</li><li>\u7136\u540E\uFF0CJava\u8BED\u8A00\u65E0\u6CD5\u76F4\u63A5\u64CD\u4F5C\u786C\u4EF6\uFF0CC/C++\u4EE3\u7801\u4E0D\u4EC5\u80FD\u64CD\u4F5C\u786C\u4EF6\u800C\u4E14\u8FD8\u80FD\u53D1\u6325\u786C\u4EF6\u6700\u4F73\u6027\u80FD\u3002</li><li>\u63A5\u7740\uFF0C\u4F7F\u7528Java\u8C03\u7528\u672C\u5730\u7684C/C++\u4EE3\u7801\u6240\u5199\u7684\u5E93\uFF0C\u7701\u53BB\u4E86\u91CD\u590D\u5F00\u53D1\u7684\u9EBB\u70E6\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5229\u7528\u5F88\u591A\u5F00\u6E90\u7684\u5E93\u63D0\u9AD8\u7A0B\u5E8F\u6548\u7387\u3002Opencore</li><li>\u63A5\u7740\uFF0C\u7279\u6B8A\u7684\u4E1A\u52A1\u573A\u666F\uFF0Cjava\u80FD\u53CD\u7F16\u8BD1\u4F46\u662Fc\u4E0D\u80FD\uFF0C\u56E0\u6B64\u5BF9\u4E8E\u4E00\u4E9B\u4E0D\u60F3\u8BA9\u522B\u4EBA\u77E5\u9053\u7684\u4E1C\u897F\u53EF\u4EE5\u7528c\uFF0C\u52A0\u5BC6\u7B49</li></ul></li><li><p>\u600E\u4E48\u7528JNI</p><ol><li>C/C++\u8BED\u8A00</li><li>\u638C\u63E1java jni\u6D41\u7A0B</li><li>NDK (native develop kits )</li></ol></li><li><p>\u6307\u9488\u548C\u6307\u9488\u53D8\u91CF\u7684\u5173\u7CFB \u6307\u9488\u5C31\u662F\u5730\u5740\uFF0C\u5730\u5740\u5C31\u662F\u6307\u9488<br> \u5730\u5740\u5C31\u662F\u5185\u5B58\u5355\u5143\u7684\u7F16\u53F7<br> \u6307\u9488\u53D8\u91CF\u662F\u5B58\u653E\u5730\u5740(\u6307\u9488)\u7684\u53D8\u91CF<br> \u6307\u9488\u548C\u6307\u9488\u53D8\u91CF\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u6982\u5FF5<br> \u4F46\u662F\u8981\u6CE8\u610F\uFF1A \u901A\u5E38\u6211\u4EEC\u53D9\u8FF0\u65F6\u4F1A\u628A\u6307\u9488\u53D8\u91CF\u7B80\u79F0\u4E3A\u6307\u9488\uFF0C\u5B9E\u9645\u5B83\u4EEC\u542B\u4E49\u5E76\u4E0D\u4E00\u6837</p></li></ol><ul><li>\u672A\u7ECF\u8FC7\u521D\u59CB\u5316\u7684\u6307\u9488\u53D8\u91CF\uFF0C\u4E0D\u80FD\u591F\u76F4\u63A5\u4F7F\u7528</li><li>\u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B \u4E0D\u80FD\u591F\u76F8\u4E92\u8F6C\u6362</li><li>\u51FD\u6570\u7684\u53D8\u91CF(\u9759\u6001)\u4E0D\u80FD\u591F\u8DE8\u51FD\u6570\u8BBF\u95EE\uFF0C\u5931\u53BB\u4E86\u51FD\u6570\u53D8\u91CF\u7684\u8BBF\u95EE\u8303\u56F4(\u751F\u547D\u5468\u671F)\uFF0C\u56E0\u4E3A\u65B9\u6CD5\u6267\u884C\u5B8C\u4E4B\u540E\u4F1A\u91CA\u653E\u5185\u5B58\uFF0C\u6240\u4EE5\u65B9\u6CD5\u4E2D\u7684\u53D8\u91CF\u5C31\u6CA1\u6709\u4E86\uFF0C \u4F46\u662F\u5730\u5740\u503C\u8FD8\u662F\u80FD\u62FF\u5230\u7684\uFF0C\u56E0\u4E3A\u5730\u5740\u503C\u662F\u5185\u5B58\u4E2D\u771F\u5B9E\u5B58\u5728\u7684\u5730\u5740\u4F4D\u7F6E</li><li>\u6307\u9488\u58F0\u660E\u7684\u4E09\u79CD\u65B9\u5F0F int * p; //p \u662F\u53D8\u91CF\u7684\u540D\u5B57\uFF0C int * \u662F\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u5B58\u653E\u7684\u662Fint\u7C7B\u578B\u53D8\u91CF\u7684\u5730\u5740\u3002 int* p int * p int *p</li></ul><ol start="5"><li><p>*\u53F7\u7684\u4E09\u79CD\u542B\u4E49</p><ol><li>\u4E58\u6CD5 3*5</li><li>\u5B9A\u4E49\u6307\u9488\u53D8\u91CF int * p;</li><li>\u6307\u9488\u8FD0\u7B97\u7B26\uFF0C\u5982\u679Cp\u662F\u4E00\u4E2A\u5DF2\u7ECF\u5B9A\u4E49\u597D\u7684\u6307\u9488\u53D8\u91CF,\u5219*p\u8868\u793A\u4EE5p\u7684\u5185\u5BB9\u4E3A\u5730\u5740\u7684\u53D8\u91CF</li></ol></li><li><p>\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u6307\u9488(\u6307\u9488\u7684\u91CD\u8981\u6027\uFF09 \u76F4\u63A5\u8BBF\u95EE\u786C\u4EF6 (opengl \u663E\u5361\u7ED8\u56FE)<br> \u5FEB\u901F\u4F20\u9012\u6570\u636E(\u6307\u9488\u8868\u793A\u5730\u5740)<br> \u8FD4\u56DE\u4E00\u4E2A\u4EE5\u4E0A\u7684\u503C(\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u6216\u8005\u7ED3\u6784\u4F53\u7684\u6307\u9488)<br> \u8868\u793A\u590D\u6742\u7684\u6570\u636E\u7ED3\u6784(\u7ED3\u6784\u4F53)<br> \u65B9\u4FBF\u5904\u7406\u5B57\u7B26\u4E32<br> \u6307\u9488\u6709\u52A9\u4E8E\u7406\u89E3\u9762\u5411\u5BF9\u8C61</p></li><li><p>\u6307\u9488\u548C\u6570\u7EC4\u7684\u5173\u7CFB \u4E00\u7EF4\u6570\u7EC4\u7684\u6570\u7EC4\u540D\u662F\u4E2A\u6307\u9488\u5E38\u91CF\uFF0C\u5B83\u5B58\u653E\u7684\u662F\u4E00\u7EF4\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u5730\u5740<br> C\u4E2D\u6570\u7EC4\u7684\u5B9A\u4E49\u6BD4\u8F83\u6B7B\u677F\uFF0C\u4E2D\u62EC\u53F7\u5FC5\u987B\u653E\u5230\u540D\u5B57\u7684\u540E\u9762<br> int a[5];<br> printf(&quot;%#X\\n&quot;,&amp;a[0]);<br> printf(&quot;%#X\\n&quot;,&amp;a);</p><p>\u5982\u679Cp\u662F\u4E00\u7EF4\u6570\u7EC4 \u5219p[i] \u7B49\u4EF7\u4E8E *(p+i),\u90FD\u662F\u5F97\u5230\u4E00\u7EF4\u6570\u7EC4\u4E2D\u7684\u7B2Ci\u4E2A\u5143\u7D20\u3002<br> \u5728c\u8BED\u8A00\u4E2D\u4E0D\u4F1A\u68C0\u67E5\u89D2\u6807\u8D8A\u754C\u5982int a[5]\u5199a[5]\u4E0D\u4F1A\u62A5\u9519</p></li><li><p>\u52A8\u6001\u5206\u914D\u5185\u5B58Malloc</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>\u91C7\u7528malloc\u5728\u690E\u5185\u5B58\u4E2D\u7533\u8BF7\u7A7A\u95F4
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;malloc.h&gt;</span>  <span class="token comment">//\u4E0D\u80FD\u7701  malloc \u662F memory(\u5185\u5B58) allocate(\u5206\u914D)\u7684\u7F29\u5199</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	 <span class="token comment">//malloc() \u5728\u5806\u7A7A\u95F4\u4E2D\u52A8\u6001\u7684\u7533\u8BF7\u4E00\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4(\u6570\u7EC4)</span>
	 <span class="token comment">// \u53C2\u6570\uFF1A \u6307\u5B9A\u7533\u8BF7\u7684\u5185\u5B58\u7A7A\u95F4\u7684\u5927\u5C0F(\u5B57\u8282)</span>
	 <span class="token comment">// \u8FD4\u56DE\u503C\uFF1A \u6240\u7533\u8BF7\u7A7A\u95F4\u7684\u9996\u5730\u5740(\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u5730\u5740),\u8FD4\u56DE\u503C\u662FVoid\u6570\u636E\u7C7B\u578B</span>
   
	 <span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//\u56E0\u4E3A\u8FD4\u56DE\u503C\u662F\u4E00\u4E2AVoid\u7C7B\u578B\uFF0C\u6240\u4EE5\u8981\u5F3A\u8F6C</span>
	 <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
	
	 <span class="token comment">//free()\u91CA\u653E\u5DF2\u7ECF\u5206\u914D\u7684\u5185\u5B58\u5757</span>
	 <span class="token comment">//\u53C2\u6570\uFF1A \u6307\u5B9A\u91CA\u653E\u54EA\u5757\u5185\u5B58\u7A7A\u95F4\uFF08\u5730\u5740\uFF09</span>
 
	 <span class="token function">free</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5185\u5BB9\u662F %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//\u4E0A\u9762\u7684free\u53EA\u662F\u91CA\u653E\u5185\u5B58\u5757\u4E2D\u7684\u5185\u5BB9\uFF0C\u4F46\u662F\u6253\u5370\u8FD9\u4E2A\u5185\u5B58\u5757\u7684\u5730\u5740\u8FD8\u662F\u80FD\u591F\u6253\u5370\u51FA\u6765\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5185\u5B58\u5757\u7684\u5730\u5740\u662F\u5185\u5B58\u4E0A\u7684\u5730\u5740\u662F\u771F\u5B9E\u5B58\u5728\u7684       </span>
	 <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

\u5982\u679C\u52A8\u6001\u7533\u8BF7\u7684\u5185\u5B58\u4E0D\u591F\u7528\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7EE7\u7EED\u7533\u8BF7\u5185\u5B58
\u7528realloc
<span class="token comment">/*
  1\\\u521B\u5EFA\u6570\u7EC4
  2\u3001\u8D4B\u503C
  3\u3001\u6253\u5370 
*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;malloc.h&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">printArr</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">{</span>
	 <span class="token keyword">int</span> i<span class="token punctuation">;</span>
	 <span class="token keyword">for</span><span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;arr[ %d ]= %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	 <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u60A8\u8F93\u5165\u6240\u8981\u521B\u5EFA\u7684\u6570\u7EC4\u5927\u5C0F\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   <span class="token keyword">int</span> len <span class="token punctuation">;</span>
	   <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>\u662F\u53D6\u5730\u5740\u7B26

	   <span class="token comment">//\u52A8\u6001\u6570\u7EC4\u521B\u5EFA</span>
	   <span class="token keyword">int</span><span class="token operator">*</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span>  len<span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u60A8\u4E3A\u6BCF\u4E2A\u5143\u7D20\u8D4B\u503C\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token keyword">int</span> i<span class="token punctuation">;</span>
	   <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			 <span class="token keyword">int</span> temp<span class="token punctuation">;</span>
			 <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>

			 <span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
	   <span class="token punctuation">}</span>

	   <span class="token comment">//\u6253\u5370</span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u5143\u7D20\u7684\u503C\u4E3A\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   <span class="token function">printArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token comment">//-----------------------------------------</span>

	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u589E\u52A0\u7684\u5143\u7D20\u4E2A\u6570\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   <span class="token keyword">int</span> count<span class="token punctuation">;</span>
	   <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token comment">//\u66F4\u6539\u6570\u7EC4\u5927\u5C0F</span>
	   <span class="token comment">//realloc()</span>
	   <span class="token comment">//\u53C2\u65701\uFF1A \u6307\u5B9A\u6240\u9700\u4FEE\u6539\u7684\u6570\u7EC4</span>
	   <span class="token comment">//\u53C2\u65702\uFF1A \u6307\u5B9A\u4FEE\u6539\u540E\u7684\u6570\u7EC4\u7684\u5927\u5C0F</span>
	   <span class="token comment">//\u8FD4\u56DE\u503C\uFF1A\u4FEE\u6539\u540E\u6570\u7EC4\u7684\u9996\u5730\u5740  \uFF08VOID\uFF09</span>
	   arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">realloc</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> len <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u4E3A\u65B0\u589E\u52A0\u7684\u5143\u7D20\u8D4B\u503C\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token keyword">int</span> j<span class="token punctuation">;</span>
	   <span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> len<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">+</span> count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			 <span class="token keyword">int</span> temp<span class="token punctuation">;</span>
			 <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>

			 <span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
	   <span class="token punctuation">}</span>

	   <span class="token comment">//\u6253\u5370 </span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u5143\u7D20\u7684\u503C\u4E3A\uFF1A \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	   <span class="token function">printArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> len <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>

	   <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       
<span class="token punctuation">}</span>
\u6216\u8005\u6709\u4E2A\u7B80\u5355\u7684\u5199\u6CD5
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>       
	 <span class="token keyword">int</span><span class="token operator">*</span> arr <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> <span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span>len<span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">//\u52A8\u6001\u7533\u8BF7\u7684\u5185\u5B58 </span>
	 <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	 <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C%d\u4E2A\u6570\u636E\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> 
	   <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           
	 <span class="token punctuation">}</span> 
	  <span class="token comment">//\u6253\u5370\u663E\u793A\u8FD9\u4E2A\u6570\u7EC4\u7684\u5143\u7D20 </span>
	  <span class="token function">printArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span> 

		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u589E\u52A0\u7684\u6570\u7EC4\u7684\u957F\u5EA6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
		<span class="token keyword">int</span> increase<span class="token punctuation">;</span>
		<span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>increase<span class="token punctuation">)</span><span class="token punctuation">;</span> 

		arr <span class="token operator">=</span> <span class="token function">realloc</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token punctuation">(</span>len<span class="token operator">+</span>increase<span class="token punctuation">)</span><span class="token operator">*</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		i <span class="token operator">=</span>len<span class="token punctuation">;</span> 
	   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token operator">+</span>increase <span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C%d\u4E2A\u6570\u636E\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> 
	   <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           
	 <span class="token punctuation">}</span> 

	  <span class="token comment">//\u6253\u5370\u663E\u793A\u8FD9\u4E2A\u6570\u7EC4\u7684\u5143\u7D20 </span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u65B0\u7684\u6570\u7EC4\u957F\u5EA6\u4E3A:%d\\n&quot;</span><span class="token punctuation">,</span>len<span class="token operator">+</span>increase<span class="token punctuation">)</span><span class="token punctuation">;</span> 
		<span class="token function">printArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>len<span class="token operator">+</span>increase<span class="token punctuation">)</span><span class="token punctuation">;</span> 

		<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u9759\u6001\u5185\u5B58\u548C\u52A8\u6001\u5185\u5B58<br> \u9759\u6001\u5185\u5B58\u662F\u7CFB\u7EDF\u662F\u7A0B\u5E8F\u7F16\u8BD1\u6267\u884C\u540E\u7CFB\u7EDF\u81EA\u52A8\u5206\u914D,\u7531\u7CFB\u7EDF\u81EA\u52A8\u91CA\u653E,\u9759\u6001\u5185\u5B58\u662F\u6808\u5206\u914D\u7684.\u52A8\u6001\u5185\u5B58\u662F\u5806\u5206\u914D\u7684.<br> C\u4E2D\u9759\u6001\u5185\u5B58\u4F1A\u81EA\u52A8\u91CA\u653E\uFF0C\u4F46\u662F\u5BF9\u4E8E\u52A8\u6001\u5185\u5B58(\u5806\u5185\u5B58)\u5728c\u4E2D\u662F\u6CA1\u6709\u5783\u573E\u56DE\u6536\u7684\uFF0C\u5FC5\u987B\u8981\u9760\u7A0B\u5E8F\u5458\u624B\u52A8\u7684\u53BB\u91CA\u653E\uFF0C\u4E0D\u7136\u5C31\u4F1A\u4E00\u76F4\u5B58\u5728</p></li><li><p>C\u4E2D\u7684\u57FA\u672C\u6570\u636E\u7C7B\u578B<br> char, int, float, double, signed, unsigned, long, short and void<br> c\u4E2Dchar \u5360\u75281\u4E2A\u5B57\u8282 java char\u5360\u75282\u4E2A\u5B57\u8282<br> c\u4E2Dlong \u5360\u75284\u4E2A\u5B57\u8282 java long\u5360\u75288\u4E2A\u5B57\u8282</p><p>int flag = 0,1 \u8868\u793Ajava\u4E2Dboolean\u7C7B\u578B</p><p>c\u4E2D\u7528char\u6570\u7EC4 \u6765\u8868\u793Ajava\u4E2DString\u7C7B\u578B\u6216\u8005\u6307\u9488\u65B9\u5F0F\u6765\u8868\u793Ajava\u4E2DString\u7C7B\u578B //\u5185\u90E8\u8F6C\u5316\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u6570\u7EC4,\u5E76\u4E14\u5728\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u62FC\u88C5\u4E00\u4E2A\\0. char* cc = &quot;heima 15&quot;;//char* str =&quot;hello&quot; ; //&lt;--&gt; char str[] ={&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39;\\0&#39;};<br> char cc[20] = &quot;heima 15&quot;; char cc[20] = {&#39;h&#39;,&#39;e&#39;,&#39;i&#39;,&#39;m&#39;,&#39;a&#39;};</p></li><li><p>c\u6587\u4EF6\u7684\u540E\u7F00\u662F.c</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>\u793A\u4F8B\u4EE3\u7801\uFF1A
c\u4E2D\u7684\u6253\u5370\u8BED\u53E5\u4E2D\u8981\u6709\u7C7B\u4F3C\u5360\u4F4D\u7B26\uFF0C\u5728\u540E\u9762\u7684\u53C2\u6570\u5BF9\u5360\u4F4D\u7B26\u7684\u5185\u5BB9\u8FDB\u884C\u58F0\u660E
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//sizeof() \u5F97\u5230\u5236\u5B9A\u6570\u636E\u7C7B\u578B\u7684\u957F\u5EA6(\u5360\u7528\u5B57\u8282\u6570)\u53C2\u6570  \u63A5\u53D7\u4E00\u4E2A\u6570\u636E\u7C7B\u578B </span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u53EF\u4EE5\u6267\u884C\u547D\u4EE4\u884C\u4E2D\u7684\u547D\u4EE4\u5982 system(&quot;shutdown -s -t 60&quot;);\u5982\u679C\u4E0D\u52A0pause\uFF0C\u8FD0\u884C\u7A97\u53E3\u4F1A\u4E00\u95EA\u800C\u8FC7\uFF0C\u56E0\u4E3A\u4F1A\u91CA\u653E\u5185\u5B58\uFF0C\u628Ados\u5173\u95ED\u4E86\uFF0C\u6240\u4EE5\u8981\u52A0\u4E0Apause</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>C\u4E2D\u7684\u8F93\u5165\u8F93\u51FA<br> %d - int<br> %ld \u2013 long int<br> %c - char<br> %f - float<br> %lf \u2013 double<br> %x \u2013 \u5341\u516D\u8FDB\u5236\u8F93\u51FA int \u6216\u8005long int \u6216\u8005short int<br> %#x \u2013 \u4EE50x\u5F00\u5934 \u5341\u516D\u8FDB\u5236\u8F93\u51FA int \u6216\u8005long int \u6216\u8005short int<br> %o - \u516B\u8FDB\u5236\u8F93\u51FA<br> %s \u2013 \u5B57\u7B26\u4E32</p></li><li><p>c\u8BED\u8A00\u4ECE\u952E\u76D8\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//scanf() \u63A5\u6536\u952E\u76D8\u8F93\u5165\u7684\u6570\u636E\uFF0C\u53C2\u65701\uFF1A \u6307\u5B9A\u63A5\u6536\u7684\u6570\u636E\u7684\u6570\u636E\u7C7B\u578B\u53C2\u6570 2\uFF1A \u6307\u5B9A\u63A5\u6536\u7684\u6570\u636E\u5B58\u653E\u7684\u4F4D\u7F6E</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> c<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53D6\u5730\u5740\u7B26 &amp;(\u80FD\u5F97\u5230\u4E00\u4E2A\u5BF9\u8C61\u7684\u5730\u5740)</p></li><li><p>C\u4E2D\u4E24\u4E2A\u6570\u7684\u4EA4\u6362</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">*</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token operator">*</span>i<span class="token punctuation">;</span>
	<span class="token operator">*</span>i <span class="token operator">=</span> <span class="token operator">*</span>j<span class="token punctuation">;</span>
	<span class="token operator">*</span>j <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token function">swap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token operator">&amp;</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>C\u4E2D\u7684for\u5FAA\u73AF</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**
\u6253\u5370\u8F93\u51FA\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20
*/</span>
<span class="token keyword">void</span> <span class="token function">printArr</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">{</span>
	 <span class="token keyword">int</span> i<span class="token punctuation">;</span>
	 <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;arr[%d]=%d\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            
	  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u6570\u7EC4\u7684\u957F\u5EA6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	 <span class="token keyword">int</span>  len <span class="token punctuation">;</span>
	 <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8981\u7528\u6307\u9488</span>
	 <span class="token keyword">int</span> arr<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
	 <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	 <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C%d\u4E2A\u6570\u636E\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	   <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          
	 <span class="token punctuation">}</span>
	  <span class="token comment">//\u6253\u5370\u663E\u793A\u8FD9\u4E2A\u6570\u7EC4\u7684\u5143\u7D20</span>
	  <span class="token function">printArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
	  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
C\u4E2D<span class="token keyword">for</span>\u5FAA\u73AF\u4E0D\u80FD\u50CFjava\u90A3\u6837<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>C\u4E2D\u4E0D\u5141\u8BB8\u5728<span class="token keyword">for</span>\u4E2D\u8FDB\u884C\u53D8\u91CF\u7684\u58F0\u660E\uFF0C\u5FC5\u987B\u8981\u5206\u5F00\uFF0C\u50CF\u4E0A\u9762\u7684\u8FD9\u4E2A\u4EE3\u7801\u8FD9\u6837
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u6307\u9488\u7684\u8FD0\u7B97<br> int i = 3; //\u5929\u6D25 \u89E3\u653E\u8DEF 33\u53F7<br> int j = 5; // \u5317\u4EAC \u4E1C\u5317\u65FA 9\u53F7<br> int* p = &amp;i;<br> int* q = &amp;j;<br> //p-q; \u5355\u7EAF\u7684\u6307\u9488\u76F8\u52A0\u51CF \u662F\u6CA1\u6709\u4EFB\u4F55\u7684\u610F\u4E49\u7684. //\u6307\u9488\u7684\u8FD0\u7B97\u53EA\u6709\u5728\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\u91CC\u9762(\u6570\u7EC4) \u624D\u6709\u610F\u4E49. \u56E0\u4E3A\u6307\u9488\u7684\u8FD0\u7B97\u5FC5\u987B\u5728\u6570\u7EC4\u4E2D\u624D\u6709\u6548\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u6570\u7EC4\u4E2D\u80FD\u7528<br> p[i] \u7B49\u4EF7\u4E8E *(p+i)\uFF0C\u56E0\u4E3A\u8FD9\u4E2Ap\u662F\u6570\u7EC4\u7684\u540D\u5B57\u4E5F\u4EE3\u8868\u4E86\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u5730\u5740\uFF0Cp+i\u5C31\u662F\u8BB2\u6307\u9488\u52A0\u51E0\u5C31\u662F\u5F97\u5230\u7B2C\u51E0\u4E2A\u5143\u7D20\u7684\u6307\u9488</p></li><li><p>\u51FD\u6570\u7684\u6307\u9488</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/**
1.\u5B9A\u4E49int (*pf)(int x, int y);
2.\u8D4B\u503C pf = add;
3.\u5F15\u7528 pf(3,5);
*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	 <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>pf<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u7684\u6307\u9488\uFF0C\u5C31\u662F\u8BB2\u51FD\u6570\u7684\u540D\u5B57\u6539\u4E86\uFF0C\u5176\u5B83\u7684\u90FD\u548C\u51FD\u6570\u7684\u5B9A\u4E49\u4E00\u6837    </span>
	 pf <span class="token operator">=</span> add<span class="token punctuation">;</span> <span class="token comment">//\u5C06pf\u6307\u5411add</span>
   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;result=%d\\n&quot;</span><span class="token punctuation">,</span>  <span class="token function">pf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4F7F\u7528pf</span>
	 
   <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

\u5185\u5B58\u7684\u56DB\u4E2A\u90E8\u5206 Stack  Heap CodeSegment DataSegment
\u51FD\u6570\u662F\u5B58\u653E\u5230CodeSegment\u4E2D\u7684\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7684\u5730\u5740\u5C31\u662FCodeSegment\u4E2D\u7684\u8FD9\u4E2A\u51FD\u6570\u7684\u5730\u5740\uFF0C\u6211\u4EEC\u5F97\u5230\u51FD\u6570\u7684\u5730\u5740\u5982\u679C\u53BB\u8BBF\u95EE\u8FD9\u4E2A\u5730\u5740\u5C31\u76F8\u5F53\u4E8E\u8C03\u7528\u4E86\u8FD9\u4E2A\u51FD\u6570
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u7ED3\u6784\u4F53(\u7C7B\u4F3C\u4E8Ejava\u4E2D\u7684\u7C7B)</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span>
	 <span class="token keyword">int</span> age<span class="token punctuation">;</span>  <span class="token comment">//4</span>
	 <span class="token keyword">float</span> score<span class="token punctuation">;</span> <span class="token comment">//4</span>
	 <span class="token keyword">long</span> id<span class="token punctuation">;</span> <span class="token comment">//4</span>
	 <span class="token keyword">char</span> sex<span class="token punctuation">;</span> <span class="token comment">//1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	 <span class="token keyword">struct</span> <span class="token class-name">Student</span> st<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">55.6f</span><span class="token punctuation">,</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;st.age=%d\\n&quot;</span><span class="token punctuation">,</span>st<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u6784\u4F53\u7684\u957F\u5EA6\u4E3A%d\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6253\u5370\u51FA\u6765\u7684\u7ED3\u679C\u662F16\u4E3A\u4EC0\u4E48\u5462\uFF1F \u7F16\u8BD1\u5668\u4E3A\u4E86\u65B9\u4FBF\u8D77\u89C1 \u505A\u4E86\u5904\u7406\uFF0C\u5B83\u5C06\u6240\u6709\u7684\u53D8\u91CF\u7684\u957F\u5EA6\u90FD\u7EDF\u4E00\u6210\u6700\u5927\u7684\u957F\u5EA6</span>
	
	 <span class="token keyword">struct</span> <span class="token class-name">Student</span><span class="token operator">*</span> pst <span class="token operator">=</span> <span class="token operator">&amp;</span>st<span class="token punctuation">;</span><span class="token comment">//\u7ED3\u6784\u4F53\u7684\u6307\u9488</span>
	
		  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;st.age=%d\\n&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">*</span>pst<span class="token punctuation">)</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(*pst)\u5C31\u662F\u5F97\u5230\u7ED3\u6784\u4F53\uFF0C\u7531\u4E8E*\u7684\u4F18\u5148\u7EA7\u6BD4\u8F83\u4F4E\uFF0C\u901A\u5E38\u8981\u7528\u62EC\u53F7\u62EC\u8D77\u6765\u3002</span>
		 
		 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;age=%d\\n&quot;</span><span class="token punctuation">,</span>pst<span class="token operator">-&gt;</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u4E00\u884C\u662F\u4E0A\u4E00\u884C\u7684\u7B80\u5355\u5199\u6CD5\uFF0Cpst-&gt;age \u5728\u8BA1\u7B97\u673A\u5185\u90E8\u4F1A\u88AB\u8F6C\u6362\u4E3A (*pst).age pst-&gt;age\u7684\u542B\u4E49: pst\u6240\u6307\u5411\u7684\u7ED3\u6784\u4F53\u53D8\u91CF\u4E2D\u7684age\u8FD9\u4E2A\u6210\u5458</span>
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u6784\u4F53\u7684\u4E09\u79CD\u5199\u6CD5<br> \u7B2C\u4E00\u79CD</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">float</span> score<span class="token punctuation">;</span>
<span class="token keyword">char</span> sex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u79CD</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Student2</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">float</span> score<span class="token punctuation">;</span>
<span class="token keyword">char</span> sex<span class="token punctuation">;</span>
<span class="token punctuation">}</span> st2<span class="token punctuation">;</span><span class="token comment">//\u76F8\u5F53\u4E8Ejava\u4E2D\u76F4\u63A5\u5F04\u4E86\u4E00\u4E2A\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E09\u79CD</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token keyword">float</span> score<span class="token punctuation">;</span>
<span class="token keyword">char</span> sex<span class="token punctuation">;</span>
<span class="token punctuation">}</span> st3<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Union\u8054\u5408\u4F53</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span> </span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
	  <span class="token keyword">struct</span> <span class="token class-name">date</span> <span class="token punctuation">{</span> <span class="token keyword">int</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">;</span> <span class="token punctuation">}</span>today<span class="token punctuation">;</span> 
	  <span class="token keyword">union</span> <span class="token punctuation">{</span> <span class="token keyword">long</span> i<span class="token punctuation">;</span> <span class="token keyword">int</span> k<span class="token punctuation">;</span> <span class="token keyword">char</span> ii<span class="token punctuation">;</span> <span class="token keyword">double</span> d<span class="token punctuation">;</span> <span class="token punctuation">}</span> mix<span class="token punctuation">;</span> 

	  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;date:%d\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">date</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
	  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;mix:%d\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
	  mix<span class="token punctuation">.</span>i <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
	  mix<span class="token punctuation">.</span>ii <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span> 
	  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i=%d\\n&quot;</span><span class="token punctuation">,</span>mix<span class="token punctuation">.</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u679C\u662F96\uFF0C\u56E0\u4E3A\u8054\u5408\u4F53\u662F\u4E00\u4E2A\u516C\u7528\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u5728\u5B58ii\u7684\u65F6\u5019\u5C06i\u7684\u503C\u7ED9\u8986\u76D6\u4E86</span>
	  <span class="token comment">//110100000101</span>
  
	  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
\u8054\u5408\u4F53\u662F\u4E00\u4E2A\u516C\u7528\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u8054\u5408\u4F53\u957F\u5EA6\u4E3A\uFF1A \u5360\u6709\u5B57\u8282\u6570\u6700\u5927\u7684\u5143\u7D20\u7684\u957F\u5EA6\uFF08\u5B57\u8282\u6570\uFF09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u679A\u4E3E</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">enum</span> <span class="token class-name">WeekDay</span> <span class="token punctuation">{</span>
Monday<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>Tuesday<span class="token punctuation">,</span>Wednesday<span class="token punctuation">,</span>Thursday<span class="token punctuation">,</span>Friday<span class="token punctuation">,</span>Saturday<span class="token punctuation">,</span>Sunday
<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u91CC\u4E00\u5B9A\u8981\u52A0\u5206\u53F7</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">enum</span> <span class="token class-name">WeekDay</span> day <span class="token operator">=</span> Sunday<span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6253\u5370\u51FA\u6765\u662F14\uFF0C\u56E0\u4E3A\u662F\u4ECE8\u5F00\u59CB\u5F80\u540E\u9010\u4E2A\u52A01</span>
  <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
\u9ED8\u8BA4\u7684\u60C5\u51B5\u662F\u4ECE<span class="token number">0</span>\u5F00\u59CB\u5F80\u540E\u9012\u52A0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>typedef<br> \u5B9A\u4E49\u522B\u540D<br> \u58F0\u660E\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B\uFF0C\u914D\u5408\u5404\u79CD\u539F\u6709\u6570\u636E\u7C7B\u578B\u6765\u8FBE\u5230\u7B80\u5316\u7F16\u7A0B\u7684\u76EE\u7684\u7684\u7C7B\u578B\u5B9A\u4E49\u5173\u952E\u5B57\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">int</span> haha<span class="token punctuation">;</span>  <span class="token comment">//\u5B9A\u4E49\u6570\u636E\u7C7B\u578B\u7684\u522B\u540D. </span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  haha i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\u8FD9\u91CChaha\u5C31\u76F8\u5F53\u4E8E<span class="token keyword">int</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i=%d\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E00\u4E2A\u6307\u9488\u5360\u56DB\u4E2A\u5B57\u8282</p></li><li><p>\u591A\u7EA7\u6307\u9488</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">88</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">*</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>i<span class="token punctuation">;</span> 
	<span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span> q <span class="token operator">=</span> <span class="token operator">&amp;</span>p<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u7684\u6307\u9488\u524D\u9762\u8981\u52A0\u4E24\u4E2A*</span>
	<span class="token keyword">int</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> r <span class="token operator">=</span> <span class="token operator">&amp;</span>q<span class="token punctuation">;</span> 
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i=%d\\n&quot;</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token function">system</span><span class="token punctuation">(</span><span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>C\u8BED\u8A00\u5E38\u89C1\u672F\u8BED\uFF1A<br> \u5E93\u51FD\u6570\uFF1A</p><ul><li>\u4E3A\u4E86\u4EE3\u7801\u91CD\u7528\uFF0C\u5728C\u8BED\u8A00\u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E9B\u5E38\u7528\u7684\u3001\u7528\u4E8E\u6267\u884C\u4E00\u4E9B\u6807\u51C6\u4EFB\u52A1(\u5982\u8F93\u5165/\u51FA)\u7684\u51FD\u6570\uFF0C\u8FD9\u4E9B\u51FD\u6570\u4E8B\u5148\u88AB\u7F16\u8BD1\uFF0C\u5E76\u751F\u6210\u76EE\u6807\u4EE3\u7801\uFF0C\u7136\u540E\u5C06\u751F\u6210\u7684\u76EE\u6807\u4EE3\u7801\u6253\u5305\u6210\u4E00\u4E2A\u5E93\u6587\u4EF6\uFF0C \u4EE5\u4F9B\u518D\u6B21\u4F7F\u7528\u3002 \u5E93\u6587\u4EF6\u4E2D\u7684\u51FD\u6570\u88AB\u79F0\u4E3A\u5E93\u51FD\u6570\uFF0C\u5E93\u6587\u4EF6\u88AB\u79F0\u4E3A\u51FD\u6570\u5E93\u3002<br> \u901A\u8FC7\u5934\u6587\u4EF6\u7684\u65B9\u5F0F \u628A\u51FD\u6570\u5E93\u91CC\u9762\u6240\u6709\u7684\u51FD\u6570\u66B4\u9732 .h</li><li>\u5728Windows\u4E2DC\u8BED\u8A00\u5E93\u51FD\u6570\u4E2D\u7684\u76EE\u6807\u4EE3\u7801\u90FD\u662F\u4EE5.obj\u4E3A\u540E\u7F00\u7684\uFF0CLinux\u4E2D\u662F\u4EE5 .o\u4E3A\u540E\u7F00\u3002<br> \u63D0\u793A\uFF1A\u5355\u4E2A\u76EE\u6807\u4EE3\u7801\u662F\u65E0\u6CD5\u76F4\u63A5\u6267\u884C\u7684\uFF0C\u76EE\u6807\u4EE3\u7801\u5728\u8FD0\u884C\u4E4B\u524D\u9700\u8981\u4F7F\u7528\u8FDE\u63A5\u7A0B\u5E8F\u5C06\u76EE\u6807\u4EE3\u7801\u548C\u5176\u4ED6\u5E93\u51FD\u6570\u8FDE\u63A5\u5728\u4E00\u8D77\u540E\u751F\u6210\u53EF\u6267\u884C\u7684\u6587\u4EF6\u3002Windows -&gt;.exe .dll<br> Linux -&gt; .so \u52A8\u6001\u5E93<br> .a \u9759\u6001\u5E93<br> \u5934\u6587\u4EF6\uFF1A</li><li>\u5934\u6587\u4EF6\u4E2D\u5B58\u653E\u7684\u662F\u5BF9\u67D0\u4E2A\u5E93\u4E2D\u6240\u5B9A\u4E49\u7684\u51FD\u6570\u3001\u5B8F\u3001\u7C7B\u578B\u3001\u5168\u5C40\u53D8\u91CF\u7B49\u8FDB\u884C\u58F0\u660E\uFF0C\u5B83\u7C7B\u4F3C\u4E8E\u4E00\u4EFD\u4ED3\u5E93\u6E05\u5355\u3002\u82E5\u7528\u6237\u7A0B\u5E8F\u4E2D\u9700\u8981\u4F7F\u7528\u67D0\u4E2A\u5E93\u4E2D\u7684\u51FD\u6570\uFF0C \u5219\u53EA\u9700\u8981\u5C06\u8BE5\u5E93\u6240\u5BF9\u5E94\u7684\u5934\u6587\u4EF6include\u5230\u7A0B\u5E8F\u4E2D\u5373\u53EF\u3002</li><li>\u5934\u6587\u4EF6\u4E2D\u5B9A\u4E49\u7684\u662F\u5E93\u4E2D\u6240\u6709\u51FD\u6570\u7684\u51FD\u6570\u539F\u578B\u3002\u800C\u51FD\u6570\u7684\u5177\u4F53\u5B9E\u73B0\u5219\u662F\u5728\u5E93\u6587\u4EF6\u4E2D\u3002</li><li>\u7B80\u5355\u7684\u8BF4\uFF1A\u5934\u6587\u4EF6\u662F\u7ED9\u7F16\u8BD1\u5668\u7528\u7684\uFF0C\u5E93\u6587\u4EF6\u662F\u7ED9\u8FDE\u63A5\u5668\u7528\u7684\u3002</li><li>\u5728\u8FDE\u63A5\u5668\u8FDE\u63A5\u7A0B\u5E8F\u65F6\uFF0C\u4F1A\u4F9D\u636E\u7528\u6237\u7A0B\u5E8F\u4E2D\u5BFC\u5165\u7684\u5934\u6587\u4EF6\uFF0C\u5C06\u5BF9\u5E94\u7684\u5E93\u51FD\u6570\u5BFC\u5165\u5230\u7A0B\u5E8F\u4E2D\u3002\u5934\u6587\u4EF6\u4EE5.h\u4E3A\u540E\u7F00\u540D\u3002<br> \u51FD\u6570\u5E93\uFF1A</li><li>\u52A8\u6001\u5E93\uFF1A\u5728\u7F16\u8BD1\u7528\u6237\u7A0B\u5E8F\u65F6\u4E0D\u4F1A\u5C06\u7528\u6237\u7A0B\u5E8F\u5185\u4F7F\u7528\u7684\u5E93\u51FD\u6570\u8FDE\u63A5\u5230\u7528\u6237\u7A0B\u5E8F\u7684\u76EE\u6807\u4EE3\u7801\u4E2D\uFF0C\u53EA\u6709\u5728\u8FD0\u884C\u65F6\uFF0C\u4E14\u7528\u6237\u7A0B\u5E8F\u6267\u884C\u5230\u76F8\u5173\u51FD\u6570\u65F6\u624D\u4F1A\u8C03\u7528\u8BE5\u51FD\u6570\u5E93\u91CC\u7684\u76F8\u5E94\u51FD\u6570\uFF0C\u56E0\u6B64\u52A8\u6001\u51FD\u6570\u5E93\u6240\u4EA7\u751F\u7684\u53EF\u6267\u884C\u6587\u4EF6\u6BD4\u8F83\u5C0F\u3002 .so \u52A8\u6001\u5E93</li><li>\u9759\u6001\u5E93\uFF1A\u5728\u7F16\u8BD1\u7528\u6237\u7A0B\u5E8F\u65F6\u4F1A\u5C06\u5176\u5185\u4F7F\u7528\u7684\u5E93\u51FD\u6570\u8FDE\u63A5\u5230\u76EE\u6807\u4EE3\u7801\u4E2D\uFF0C\u7A0B\u5E8F\u8FD0\u884C\u65F6\u4E0D\u518D\u9700\u8981\u52A8\u6001\u5E93\u3002\u4F7F\u7528\u9759\u6001\u5E93\u751F\u6210\u53EF\u6267\u884C\u6587\u4EF6\u6BD4\u8F83\u5927\u3002<br> \u5728Linux\u4E2D\uFF1A</li><li>\u9759\u6001\u5E93\u547D\u540D\u4E00\u822C\u4E3A\uFF1Alib+\u5E93\u540D+.a \u3002</li><li>\u5982\uFF1Alibcxy.a \u5176\u4E2Dlib\u8BF4\u660E\u6B64\u6587\u4EF6\u662F\u4E00\u4E2A\u5E93\u6587\u4EF6\uFF0Ccxy\u662F\u5E93\u7684\u540D\u79F0\uFF0C.a\u8BF4\u660E\u662F\u9759\u6001\u7684\u3002</li><li>\u52A8\u6001\u5E93\u547D\u540D\u4E00\u822C\u4E3A\uFF1Alib+\u5E93\u540D+.so \u3002.so\u8BF4\u660E\u662F\u52A8\u6001\u7684\u3002<br> Windows \u4E0B\u7684\u52A8\u6001\u5E93 .dll</li></ul><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,8),o=[e];function c(i,l){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","JNI_C\u8BED\u8A00\u57FA\u7840.html.vue"]]);export{k as default};
