import{_ as n,o as s,c as a,e as t}from"./app.e2a3b496.js";const p={},e=t(`<h1 id="xmlpullparser" tabindex="-1"><a class="header-anchor" href="#xmlpullparser" aria-hidden="true">#</a> XmlPullParser</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonService</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u63A5\u6536\u4E00\u4E2A\u5305\u542BXML\u6587\u4EF6\u7684\u8F93\u5165\u6D41, \u89E3\u6790\u51FAXML\u4E2D\u7684Person\u5BF9\u8C61, \u88C5\u5165\u4E00\u4E2AList\u8FD4\u56DE
     * <span class="token keyword">@param</span> <span class="token parameter">in</span>    \u5305\u542BXML\u6570\u636E\u7684\u8F93\u5165\u6D41
     * <span class="token keyword">@return</span>        \u5305\u542BPerson\u5BF9\u8C61\u7684List\u96C6\u5408
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> <span class="token function">getPersons</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//1.\u83B7\u53D6xml\u6587\u4EF6</span>
        <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token class-name">PersonService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.\u83B7\u53D6\u89E3\u6790\u5668(Android\u4E2D\u63D0\u4F9B\u4E86\u65B9\u4FBF\u7684\u65B9\u6CD5\u5C31\u662F\u4F7F\u7528Android\u4E2D\u7684\u5DE5\u5177\u7C7BXml)</span>
        <span class="token class-name">XmlPullParser</span> parser <span class="token operator">=</span> <span class="token class-name">Xml</span><span class="token punctuation">.</span><span class="token function">newPullParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
        <span class="token comment">//3.\u89E3\u6790\u5668\u89E3\u6790xml\u6587\u4EF6</span>
        parser<span class="token punctuation">.</span><span class="token function">setInput</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> persons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">//4.\u5FAA\u73AF\u89E3\u6790</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> type <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> type <span class="token operator">!=</span> <span class="token class-name">XmlPullParser</span><span class="token punctuation">.</span>END_DOCUMENT<span class="token punctuation">;</span> type <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u5FAA\u73AF\u89E3\u6790</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token class-name">XmlPullParser</span><span class="token punctuation">.</span>START_TAG<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// \u5224\u65AD\u5982\u679C\u9047\u5230\u5F00\u59CB\u6807\u7B7E\u4E8B\u4EF6</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>parser<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// \u6807\u7B7E\u540D\u4E3Aperson</span>
                    p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">// \u521B\u5EFAPerson\u5BF9\u8C61</span>
                    <span class="token class-name">String</span> id <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">getAttributeValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// \u83B7\u53D6\u5C5E\u6027</span>
                    p<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// \u8BBE\u7F6EID</span>
                    persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment">// \u628APerson\u5BF9\u8C61\u88C5\u5165\u96C6\u5408</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>parser<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u6807\u7B7E\u540D\u4E3Aname</span>
                    <span class="token class-name">String</span> name <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">nextText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u6587\u672C</span>
                    p<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">// \u8BBE\u7F6Ename</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>parser<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u6807\u7B7E\u540D\u4E3Aage</span>
                    <span class="token class-name">String</span> age <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">nextText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u6587\u672C</span>
                    p<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// \u8BBE\u7F6Eage</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> persons<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
    *\u5C06\u6570\u636E\u5199\u5165\u5230Xml\u6587\u4EF6\u4E2D.
    *<span class="token keyword">@param</span> <span class="token parameter">out</span>    \u8F93\u51FA\u5230\u8981\u88AB\u5199\u5165\u6570\u636E\u7684Xml\u6587\u4EF6\u7684\u8F93\u51FA\u6D41//\u5C31\u76F8\u5F53\u4E8E OutputStream os = new FileOutputStream(&quot;a.xml&quot;);
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writePersons</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Book</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Books</span><span class="token punctuation">,</span> <span class="token class-name">OutputStream</span> out<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token comment">//1.\u83B7\u5F97XmlSerializer(Xml\u5E8F\u5217\u5316\u5DE5\u5177)(\u901A\u8FC7Android\u4E2D\u7684\u5DE5\u5177\u7C7BXml\u5F97\u5230)</span>
        <span class="token class-name">XmlSerializer</span> serializer <span class="token operator">=</span> <span class="token class-name">Xml</span><span class="token punctuation">.</span><span class="token function">newSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
        <span class="token comment">//2.\u8BBE\u7F6E\u8F93\u51FA\u6D41(\u660E\u786E\u8981\u5C06\u6570\u636E\u5199\u5165\u90A3\u4E2Axml\u6587\u4EF6\u4E2D)</span>
        serializer<span class="token punctuation">.</span><span class="token function">setOutput</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                
        <span class="token comment">//3.\u5199\u5165\u5F00\u59CB\u6587\u6863</span>
        serializer<span class="token punctuation">.</span><span class="token function">startDocument</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4.\u5F00\u59CB\u6807\u7B7E</span>
        serializer<span class="token punctuation">.</span><span class="token function">startTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;bookstore&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//5.\u5FAA\u73AF\u904D\u5386</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Book</span> p <span class="token operator">:</span> books<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//6.\u5F00\u59CB\u6807\u7B7E</span>
            serializer<span class="token punctuation">.</span><span class="token function">startTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//7.\u7ED9\u8FD9\u4E2A\u6807\u7B7E\u8BBE\u7F6E\u5C5E\u6027</span>
            serializer<span class="token punctuation">.</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> book<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//8.\u5B50\u6807\u7B7E</span>
            serializer<span class="token punctuation">.</span><span class="token function">startTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//9.\u8BBE\u7F6E\u5B50\u6807\u7B7E\u7684\u5185\u5BB9</span>
            serializer<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//10.\u5B50\u6807\u7B7E\u7ED3\u675F</span>
            serializer<span class="token punctuation">.</span><span class="token function">endTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//11.\u6807\u7B7E\u7ED3\u675F</span>
            serializer<span class="token punctuation">.</span><span class="token function">endTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//12.\u6839\u6807\u7B7E\u7ED3\u675F</span>
        serializer<span class="token punctuation">.</span><span class="token function">endTag</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;persons&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//13.\u6587\u6863\u7ED3\u675F</span>
        serializer<span class="token punctuation">.</span><span class="token function">endDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,4),o=[e];function c(l,u){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","XmlPullParser.html.vue"]]);export{k as default};
