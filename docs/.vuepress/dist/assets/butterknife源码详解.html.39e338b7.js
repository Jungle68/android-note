import{_ as e,r as c,o,c as i,a as n,b as t,d as s,e as p}from"./app.89e8a229.js";const l={},u=n("h1",{id:"butterknife\u6E90\u7801\u8BE6\u89E3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#butterknife\u6E90\u7801\u8BE6\u89E3","aria-hidden":"true"},"#"),s(" butterknife\u6E90\u7801\u8BE6\u89E3")],-1),k=s("\u4F5C\u4E3A"),d=n("code",null,"Android",-1),r=s("\u5F00\u53D1\u8005\uFF0C\u5927\u5BB6\u80AF\u5B9A\u90FD\u77E5\u9053\u5927\u540D\u9F0E\u9F0E\u7684"),m={href:"https://github.com/JakeWharton/butterknife",target:"_blank",rel:"noopener noreferrer"},v=s("butterknife"),b=s("\u3002\u5B83\u5927\u5927\u7684\u63D0\u9AD8\u4E86\u5F00\u53D1\u6548\u7387\uFF0C\u867D\u7136\u5728\u5F88\u65E9\u4E4B\u524D\u5C31\u5F00\u59CB\u4F7F\u7528\u5B83\u4E86\uFF0C\u4F46\u662F\u53EA\u77E5\u9053\u662F\u901A\u8FC7\u6CE8\u89E3\u7684\u65B9\u5F0F\u5B9E\u73B0\u7684\uFF0C\u5374\u4E00\u76F4\u6CA1\u6709\u4ED4\u7EC6\u7684\u5B66\u4E60\u4E0B\u5927\u725B\u7684\u4EE3\u7801\u3002\u6700\u8FD1\u5728\u5B66\u4E60\u8FD0\u884C\u65F6\u6CE8\u89E3\uFF0C\u51B3\u5B9A\u4ECA\u5929\u6765\u7CFB\u7EDF\u7684\u5206\u6790\u4E0B"),g=n("code",null,"butterknife",-1),w=s("\u7684\u5B9E\u73B0\u539F\u7406\u3002"),f=s("\u5982\u679C\u4F60\u4E4B\u524D\u4E0D\u4E86\u89E3"),y=n("code",null,"Annotation",-1),h=s("\uFF0C\u90A3\u5F3A\u70C8\u5EFA\u8BAE\u4F60\u5148\u770B"),B={href:"https://github.com/CharonChui/AndroidNote/blob/master/AdavancedPart/%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8.md",title:"\u6CE8\u89E3\u4F7F\u7528",target:"_blank",rel:"noopener noreferrer"},V=s("\u6CE8\u89E3\u4F7F\u7528"),C=n("p",null,"\u5E9F\u591A\u770B\u56FE:",-1),E=n("p",null,[n("img",{src:"https://github.com/CharonChui/Pictures/blob/master/butterknife_sample.png?raw=true",alt:"image"})],-1),T=n("p",null,[s("\u4ECE\u56FE\u4E2D\u53EF\u4EE5\u5F88\u76F4\u89C2\u7684\u770B\u51FA\u5B83\u7684"),n("code",null,"module"),s("\u7ED3\u6784\uFF0C\u4EE5\u53CA\u4F7F\u7528\u793A\u4F8B\u4EE3\u7801\u3002")],-1),_=s("\u5B83\u7684\u76EE\u5F55\u548C\u6211\u4EEC\u5728"),N={href:"https://github.com/CharonChui/AndroidNote/blob/master/AdavancedPart/%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8.md",title:"\u6CE8\u89E3\u4F7F\u7528",target:"_blank",rel:"noopener noreferrer"},A=s("\u6CE8\u89E3\u4F7F\u7528"),q=s("\u8FD9\u7BC7\u6587\u7AE0\u4E2D\u4ECB\u7ECD\u7684\u4E00\u6837\uFF0C\u5927\u4F53\u4E5F\u662F\u5206\u4E3A\u4E09\u4E2A\u90E8\u5206:"),j=p(`<ul><li>app : butterknife</li><li>api : butterknife-annotations</li><li>compiler : butterknife-compiler</li></ul><p>\u901A\u8FC7\u793A\u4F8B\u4EE3\u7801\u6211\u4EEC\u5927\u4F53\u80FD\u9884\u6599\u5230\u5BF9\u5E94\u7684\u529F\u80FD\u5B9E\u73B0:</p><ul><li><p><code>@BindView(R2.id.hello) Button hello;</code><br><code>BindView</code>\u6CE8\u89E3\u7684\u4F5C\u7528\u5C31\u662F\u901A\u8FC7<code>value</code>\u6307\u5B9A\u7684\u503C\u7136\u540E\u53BB\u8C03\u7528<code>findViewById()</code>\u6765\u627E\u5230\u5BF9\u5E94\u7684\u63A7\u4EF6\uFF0C\u7136\u540E\u5C06\u8BE5\u63A7\u4EF6\u8D4B\u503C\u7ED9\u4F7F\u7528\u8BE5\u6CE8\u89E3\u7684\u53D8\u91CF\u3002</p></li><li><p><code>@OnClick(R2.id.hello) void sayHello() {...}</code><code>OnClick</code>\u6CE8\u89E3\u4E5F\u662F\u901A\u8FC7\u6307\u5B9A\u7684<code>id</code>\u6765\u627E\u5230\u5BF9\u5E94\u63A7\u4EF6\u540E\uFF0C\u7136\u540E\u5BF9\u5176\u8BBE\u7F6E<code>onClickListener</code>\u5E76\u8C03\u7528\u4F7F\u7528\u8BE5\u6CE8\u89E3\u7684\u65B9\u6CD5\u3002</p></li><li><p>\u6700\u540E\u4E0D\u8981\u5FD8\u4E86<code>ButterKnife.bind(this);</code>\u8BE5\u65B9\u6CD5\u4E5F\u662F\u540E\u9762\u6211\u4EEC\u8981\u5206\u6790\u7684\u7A81\u7834\u70B9\u3002</p></li></ul><p>\u5F53\u7136<code>Butterknife</code>\u7684\u529F\u80FD\u662F\u975E\u5E38\u5F3A\u5927\u7684\uFF0C\u6211\u4EEC\u5728\u8FD9\u91CC\u53EA\u662F\u7528\u8FD9\u4E24\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6765\u8FDB\u884C\u5206\u6790\u8BF4\u660E\u3002</p><p>\u90A3\u6211\u4EEC\u5C31\u6765\u67E5\u770B<code>BindView</code>\u548C<code>Onclik</code>\u6CE8\u89E3\u7684\u6E90\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>CLASS<span class="token punctuation">)</span> <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>FIELD<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">BindView</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** View ID to which the field will be bound. */</span>
  <span class="token annotation punctuation">@IdRes</span> <span class="token keyword">int</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F5C\u7528\u5728\u53D8\u91CF\u4E0A\u7684\u7F16\u8BD1\u65F6\u6CE8\u89E3\u3002\u5BF9\u8BE5\u6CE8\u89E3\u7684\u503C<code>value()</code>\u4F7F\u7528<code>android.support.annotation</code>\u4E2D\u7684<code>IdRes</code>\u6CE8\u89E3\uFF0C\u6765\u8868\u660E\u8BE5\u503C\u53EA\u80FD\u662F\u8D44\u6E90\u7C7B\u578B\u7684<code>id</code>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>CLASS<span class="token punctuation">)</span>
<span class="token annotation punctuation">@ListenerClass</span><span class="token punctuation">(</span>
    targetType <span class="token operator">=</span> <span class="token string">&quot;android.view.View&quot;</span><span class="token punctuation">,</span>
    setter <span class="token operator">=</span> <span class="token string">&quot;setOnClickListener&quot;</span><span class="token punctuation">,</span>
    type <span class="token operator">=</span> <span class="token string">&quot;butterknife.internal.DebouncingOnClickListener&quot;</span><span class="token punctuation">,</span>
    method <span class="token operator">=</span> <span class="token annotation punctuation">@ListenerMethod</span><span class="token punctuation">(</span>
        name <span class="token operator">=</span> <span class="token string">&quot;doClick&quot;</span><span class="token punctuation">,</span>
        parameters <span class="token operator">=</span> <span class="token string">&quot;android.view.View&quot;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">OnClick</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** View IDs to which the method will be bound. */</span>
  <span class="token annotation punctuation">@IdRes</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token class-name">View</span><span class="token punctuation">.</span>NO_ID <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F5C\u7528\u5230\u65B9\u6CD5\u4E0A\u7684\u7F16\u8BD1\u65F6\u6CE8\u89E3\u3002\u6211\u4EEC\u53D1\u73B0\u8BE5<code>\u6CE8\u89E3\u8FD8\u4F7F\u7528\u4E86</code>ListenerClass<code>\u6CE8\u89E3\uFF0C\u5F53\u7136\u4ECE\u4E0A\u9762\u7684\u58F0\u660E\u4E2D\u53EF\u4EE5\u5F88\u5BB9\u6613\u770B\u51FA\u5B83\u7684\u4F5C\u7528\u3002 \u90A3\u6211\u4EEC\u5C31\u7EE7\u7EED\u7B80\u5355\u7684\u770B\u4E00\u4E0B</code>ListenerClass\`\u6CE8\u89E3\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RUNTIME<span class="token punctuation">)</span> <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ANNOTATION_TYPE<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ListenerClass</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> <span class="token function">targetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** Name of the setter method on the <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">targetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> target type<span class="token punctuation">}</span> for the listener. */</span>
  <span class="token class-name">String</span> <span class="token function">setter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Name of the method on the <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">targetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> target type<span class="token punctuation">}</span> to remove the listener. If
   * empty <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">setter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> will be used by default.
   */</span>
  <span class="token class-name">String</span> <span class="token function">remover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** Fully-qualified class name of the listener type. */</span>
  <span class="token class-name">String</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** Enum which declares the listener callback methods. Mutually exclusive to <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>. */</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">callbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> NONE<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Method data for single-method listener callbacks. Mutually exclusive with <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">callbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
   * and an error to specify more than one value.
   */</span>
  <span class="token class-name">ListenerMethod</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/** Default value for <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">callbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>. */</span>
  <span class="token keyword">enum</span> <span class="token class-name">NONE</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F5C\u7528\u5230\u6CE8\u89E3\u7C7B\u578B\u7684\u8FD0\u884C\u65F6\u6CE8\u89E3\u3002</p>`,11),S=s("\u6709\u4E86\u4E4B\u524D"),I={href:"https://github.com/CharonChui/AndroidNote/blob/master/Android%E5%8A%A0%E5%BC%BA/%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8.md",target:"_blank",rel:"noopener noreferrer"},x=s("\u6CE8\u89E3\u4F7F\u7528"),M=s("\u8FD9\u7BC7\u6587\u7AE0\u7684\u57FA\u7840\uFF0C\u6211\u4EEC\u77E5\u9053\u5BF9\u4E8E\u7F16\u8BD1\u65F6\u6CE8\u89E3\u80AF\u5B9A\u662F\u8981\u901A\u8FC7\u81EA\u5B9A\u4E49"),R=n("code",null,"AbstractProcessor",-1),O=s("\u6765\u89E3\u6790\u7684\uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u6211\u4EEC\u8981\u53BB"),P=n("code",null,"butterknife-compiler module",-1),L=s("\u4E2D\u627E\u4E00\u4E0B\u5BF9\u5E94\u7684\u7C7B\u3002\u901A\u8FC7\u540D\u5B57\u6211\u4EEC\u5C31\u80FD\u5F88\u7B80\u5355\u7684\u627E\u5230:"),F=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">butterknife<span class="token punctuation">.</span>compiler</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@AutoService</span><span class="token punctuation">(</span><span class="token class-name">Processor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ButterKnifeProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>AutoService</code>\u6CE8\u89E3\u6211\u4EEC\u5F88\u5BB9\u6613\u770B\u51FA\u6765<code>Butterknife</code>\u4E5F\u4F7F\u7528\u4E86<code>Google Auto</code>\u3002\u5F53\u7136\u5B83\u80AF\u5B9A\u4E5F\u90FD\u7528\u4E86<code>javaopet</code>\u548C<code>android-apt</code>\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5C31\u4E0D\u53BB\u5206\u6790\u4E86\u3002 \u5176\u4ED6\u7684\u4E00\u4E9B\u65B9\u6CD5\u6211\u4EEC\u5C31\u4E0D\u7EE7\u7EED\u770B\u4E86\uFF0C\u6211\u4EEC\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u5177\u4F53\u7684\u6838\u5FC3\u5904\u7406\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F<code>ButterKnifeProcessor.process()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> elements<span class="token punctuation">,</span> <span class="token class-name">RoundEnvironment</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u67E5\u627E\u3001\u89E3\u6790\u51FA\u6240\u6709\u7684\u6CE8\u89E3</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> targetClassMap <span class="token operator">=</span> <span class="token function">findAndParseTargets</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u6CE8\u89E3\u540E\u8981\u751F\u6210\u7684\u76F8\u5173\u4EE3\u7801\u4FE1\u606F\u4FDD\u5B58\u5230BindingClass\u7C7B\u4E2D</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> targetClassMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">TypeElement</span> typeElement <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BindingClass</span> bindingClass <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8F93\u51FA\u751F\u6210\u7684\u7C7B</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">JavaFile</span> javaFile <span class="token operator">:</span> bindingClass<span class="token punctuation">.</span><span class="token function">brewJava</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          javaFile<span class="token punctuation">.</span><span class="token function">writeTo</span><span class="token punctuation">(</span>filer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">error</span><span class="token punctuation">(</span>typeElement<span class="token punctuation">,</span> <span class="token string">&quot;Unable to write view binder for type %s: %s&quot;</span><span class="token punctuation">,</span> typeElement<span class="token punctuation">,</span>
              e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE<code>process()</code>\u65B9\u6CD5\u6765\u770B\uFF0C\u6211\u4EEC\u9700\u8981\u4E3B\u8981\u5206\u6790\u4E24\u4E2A\u90E8\u5206:</p><ul><li><code>findAndParseTargets()</code>\uFF1A\u67E5\u627E\u3001\u89E3\u6790\u6240\u6709\u7684\u6CE8\u89E3</li><li><code>bindingClass.brewJava()</code>\uFF1A\u751F\u6210\u4EE3\u7801</li></ul><h5 id="\u7B2C\u4E00\u6B65-findandparsetargets" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u6B65-findandparsetargets" aria-hidden="true">#</a> \u7B2C\u4E00\u6B65:<code>findAndParseTargets()</code></h5><p>\u5148\u67E5\u770B<code>findAndParseTargets()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0,\u91CC\u9762\u89E3\u6790\u7684\u7C7B\u578B\u6BD4\u8F83\u591A\uFF0C\u6211\u4EEC\u5C31\u4EE5<code>BindView</code>\u4E3A\u4F8B\u8FDB\u884C\u8BF4\u660E:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAndParseTargets</span><span class="token punctuation">(</span><span class="token class-name">RoundEnvironment</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> targetClassMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> erasedTargetNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">scanForRClasses</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Process each @BindArray element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceArray</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindBitmap element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindBitmap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceBitmap</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindBitmap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindBool element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindBool</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceBool</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindBool</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindColor element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindColor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceColor</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindColor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindDimen element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindDimen</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceDimen</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindDimen</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindDrawable element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindDrawable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceDrawable</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindDrawable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindInt element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindInt</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceInt</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindInt</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindString element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseResourceString</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindString</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindView element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u68C0\u67E5\u4E00\u4E0B\u5408\u6CD5\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8FDB\u884C\u89E3\u6790 </span>
        <span class="token function">parseBindView</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each @BindViews element.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">BindViews</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SuperficialValidation</span><span class="token punctuation">.</span><span class="token function">validateElement</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">parseBindViews</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logParsingError</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token class-name">BindViews</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Process each annotation that corresponds to a listener.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> listener <span class="token operator">:</span> LISTENERS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">findAndParseListener</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> listener<span class="token punctuation">,</span> targetClassMap<span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Try to find a parent binder for each.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> targetClassMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">TypeElement</span> parentType <span class="token operator">=</span> <span class="token function">findParentType</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> erasedTargetNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parentType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BindingClass</span> bindingClass <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BindingClass</span> parentBindingClass <span class="token operator">=</span> targetClassMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>parentType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bindingClass<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>parentBindingClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> targetClassMap<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u770B\u4E00\u4E0B<code>parseBindView()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseBindView</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> targetClassMap<span class="token punctuation">,</span>
      <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> erasedTargetNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TypeElement</span> enclosingElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TypeElement</span><span class="token punctuation">)</span> element<span class="token punctuation">.</span><span class="token function">getEnclosingElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Start by verifying common generated code restrictions.</span>
    <span class="token keyword">boolean</span> hasError <span class="token operator">=</span> <span class="token function">isInaccessibleViaGeneratedCode</span><span class="token punctuation">(</span><span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;fields&quot;</span><span class="token punctuation">,</span> element<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token function">isBindingInWrongPackage</span><span class="token punctuation">(</span><span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Verify that the target type extends from View.</span>
    <span class="token class-name">TypeMirror</span> elementType <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>elementType<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TypeKind</span><span class="token punctuation">.</span>TYPEVAR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">TypeVariable</span> typeVariable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TypeVariable</span><span class="token punctuation">)</span> elementType<span class="token punctuation">;</span>
      elementType <span class="token operator">=</span> typeVariable<span class="token punctuation">.</span><span class="token function">getUpperBound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5FC5\u987B\u662FView\u7C7B\u578B\u6216\u8005\u63A5\u53E3</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSubtypeOfType</span><span class="token punctuation">(</span>elementType<span class="token punctuation">,</span> VIEW_TYPE<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isInterface</span><span class="token punctuation">(</span>elementType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">error</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token string">&quot;@%s fields must extend from View or be an interface. (%s.%s)&quot;</span><span class="token punctuation">,</span>
          <span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> enclosingElement<span class="token punctuation">.</span><span class="token function">getQualifiedName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          element<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      hasError <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u901A\u8FC7\u6CE8\u89E3\u7684value\u62FF\u5230id</span>
    <span class="token comment">// Assemble information on the field.</span>
    <span class="token keyword">int</span> id <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">BindingClass</span> bindingClass <span class="token operator">=</span> targetClassMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E4B\u524D\u5DF2\u7ECF\u7ED1\u5B9A\u8FC7\u8BE5id</span>
      <span class="token class-name">ViewBindings</span> viewBindings <span class="token operator">=</span> bindingClass<span class="token punctuation">.</span><span class="token function">getViewBinding</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>viewBindings <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> viewBindings<span class="token punctuation">.</span><span class="token function">getFieldBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FieldViewBinding</span> existingBinding <span class="token operator">=</span> viewBindings<span class="token punctuation">.</span><span class="token function">getFieldBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">error</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token string">&quot;Attempt to use @%s for an already bound ID %d on &#39;%s&#39;. (%s.%s)&quot;</span><span class="token punctuation">,</span>
            <span class="token class-name">BindView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> existingBinding<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            enclosingElement<span class="token punctuation">.</span><span class="token function">getQualifiedName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> element<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6CA1\u6709\u7ED1\u5B9A\u8FC7\u8BE5id\u7684\u8BDD\u5C31\u53BB\u751F\u6210\u4EE3\u7801</span>
      bindingClass <span class="token operator">=</span> <span class="token function">getOrCreateTargetClass</span><span class="token punctuation">(</span>targetClassMap<span class="token punctuation">,</span> enclosingElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> name <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">TypeName</span> type <span class="token operator">=</span> <span class="token class-name">TypeName</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>elementType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> required <span class="token operator">=</span> <span class="token function">isFieldRequired</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">FieldViewBinding</span> binding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FieldViewBinding</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> type<span class="token punctuation">,</span> required<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528BindingClass\u6DFB\u52A0\u4EE3\u7801</span>
    bindingClass<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> binding<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Add the type-erased version to the valid binding targets set.</span>
    erasedTargetNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC8\u4E8E\u8FDB\u5165\u751F\u6210\u4EE3\u7801\u7684\u9636\u6BB5\u4E86\uFF0C\u7EE7\u7EED\u770B\u4E00\u4E0B<code>getOrCreateTargetClass()</code>\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">BindingClass</span> <span class="token function">getOrCreateTargetClass</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TypeElement</span><span class="token punctuation">,</span> <span class="token class-name">BindingClass</span><span class="token punctuation">&gt;</span></span> targetClassMap<span class="token punctuation">,</span>
      <span class="token class-name">TypeElement</span> enclosingElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BindingClass</span> bindingClass <span class="token operator">=</span> targetClassMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingClass <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">TypeName</span> targetType <span class="token operator">=</span> <span class="token class-name">TypeName</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>targetType <span class="token keyword">instanceof</span> <span class="token class-name">ParameterizedTypeName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        targetType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParameterizedTypeName</span><span class="token punctuation">)</span> targetType<span class="token punctuation">)</span><span class="token punctuation">.</span>rawType<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5F97\u5230\u5305\u540D\u3001\u7C7B\u540D</span>
      <span class="token class-name">String</span> packageName <span class="token operator">=</span> <span class="token function">getPackageName</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> className <span class="token operator">=</span> <span class="token function">getClassName</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">,</span> packageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u7528\u5305\u540D\u3001\u7C7B\u540D\u548C_ViewBinder\u7B49\u62FC\u63A5\u6210\u8981\u751F\u6210\u7684\u7C7B\u7684\u5168\u540D\uFF0C\u8FD9\u91CC\u4F1A\u6709\u4E24\u4E2A\u7C7B:$$_ViewBinder\u548C$$_ViewBinding</span>
      <span class="token class-name">ClassName</span> binderClassName <span class="token operator">=</span> <span class="token class-name">ClassName</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> className <span class="token operator">+</span> <span class="token string">&quot;_ViewBinder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">ClassName</span> unbinderClassName <span class="token operator">=</span> <span class="token class-name">ClassName</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> className <span class="token operator">+</span> <span class="token string">&quot;_ViewBinding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">boolean</span> isFinal <span class="token operator">=</span> enclosingElement<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span>FINAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u8981\u751F\u6210\u7684\u7C7B\u540D,$$_ViewBinder\u548C$$_ViewBinding\u5C01\u88C5\u7ED9BindingClass\u7C7B</span>
      bindingClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BindingClass</span><span class="token punctuation">(</span>targetType<span class="token punctuation">,</span> binderClassName<span class="token punctuation">,</span> unbinderClassName<span class="token punctuation">,</span> isFinal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      targetClassMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>enclosingElement<span class="token punctuation">,</span> bindingClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> bindingClass<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u770B\u4E00\u4E0B<code>BindingClass.addField()</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">addField</span><span class="token punctuation">(</span><span class="token class-name">Id</span> id<span class="token punctuation">,</span> <span class="token class-name">FieldViewBinding</span> binding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getOrCreateViewBindings</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFieldBinding</span><span class="token punctuation">(</span>binding<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u770B<code>getOrCreateViewBindings()</code>\u4EE5\u53CA<code>setFieldBinding()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">ViewBindings</span> <span class="token function">getOrCreateViewBindings</span><span class="token punctuation">(</span><span class="token class-name">Id</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ViewBindings</span> viewId <span class="token operator">=</span> viewIdMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>viewId <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      viewId <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewBindings</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      viewIdMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> viewId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> viewId<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u770B<code>ViewBindings.setFieldBinding()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFieldBinding</span><span class="token punctuation">(</span><span class="token class-name">FieldViewBinding</span> fieldBinding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fieldBinding <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fieldBinding <span class="token operator">=</span> fieldBinding<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u8FD9\u91CC\u5C31\u628A<code>findAndParseTargets()</code>\u65B9\u6CD5\u5206\u6790\u5B8C\u4E86\u3002\u5927\u4F53\u603B\u7ED3\u4E00\u4E0B\u5C31\u662F\u628A\u4E00\u4E9B\u53D8\u91CF\u3001\u53C2\u6570\u7B49\u521D\u59CB\u5316\u5230\u4E86<code>BindingClass</code>\u7C7B\u4E2D\u3002 \u4E5F\u5C31\u662F\u8BF4\u4E0A\u9762<code>process()</code>\u65B9\u6CD5\u4E2D\u7684\u7B2C\u4E00\u6B65\u5DF2\u7ECF\u5206\u6790\u5B8C\u4E86\uFF0C\u4E0B\u9762\u6211\u4EEC\u6765\u7EE7\u7EED\u770B\u7B2C\u4E8C\u90E8\u5206.</p><h5 id="\u7B2C\u4E8C\u6B65-bindingclass-brewjava" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u6B65-bindingclass-brewjava" aria-hidden="true">#</a> \u7B2C\u4E8C\u6B65:<code>bindingClass.brewJava()</code></h5><p>\u7EE7\u7EED\u67E5\u770B<code>BindingClass.brewJava()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JavaFile</span><span class="token punctuation">&gt;</span></span> <span class="token function">brewJava</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TypeSpec<span class="token punctuation">.</span>Builder</span> result <span class="token operator">=</span> <span class="token class-name">TypeSpec</span><span class="token punctuation">.</span><span class="token function">classBuilder</span><span class="token punctuation">(</span>binderClassName<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>PUBLIC<span class="token punctuation">,</span> FINAL<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addSuperinterface</span><span class="token punctuation">(</span><span class="token class-name">ParameterizedTypeName</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>VIEW_BINDER<span class="token punctuation">,</span> targetTypeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    result<span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span><span class="token function">createBindMethod</span><span class="token punctuation">(</span>targetTypeName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JavaFile</span><span class="token punctuation">&gt;</span></span> files <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isGeneratingUnbinder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u751F\u6210$$_ViewBinding\u7C7B</span>
      files<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">JavaFile</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>unbinderClassName<span class="token punctuation">.</span><span class="token function">packageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">createUnbinderClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">addFileComment</span><span class="token punctuation">(</span><span class="token string">&quot;Generated code from Butter Knife. Do not modify!&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFinal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span><span class="token function">createBindToTargetMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u751F\u6210$$_ViewBinder\u7C7B</span>
    files<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">JavaFile</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>binderClassName<span class="token punctuation">.</span><span class="token function">packageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addFileComment</span><span class="token punctuation">(</span><span class="token string">&quot;Generated code from Butter Knife. Do not modify!&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> files<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u8FD9\u91CC\u611F\u89C9\u4E0D\u7528\u518D\u7EE7\u7EED\u5206\u6790\u4E86\uFF0C\u8BE5\u65B9\u6CD5\u5C31\u662F\u4F7F\u7528<code>javaopet</code>\u6765\u751F\u6210\u5BF9\u5E94<code>$$_ViewBinder.java</code>\u7C7B\u3002</p><p>\u5230\u8FD9\u91CC\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u5728\u7F16\u8BD1\u7684\u8FC7\u7A0B\u4E2D\u4F1A\u53BB\u751F\u6210\u4E00\u4E2A\u5BF9\u5E94\u7684<code>$$_ViewBinder.java</code>\u6587\u4EF6\uFF0C\u8BE5\u7C7B\u5B9E\u73B0\u4E86<code>ViewBinder</code>\u63A5\u53E3\u3002\u5B83\u5185\u90E8\u4F1A\u53BB\u751F\u6210\u5BF9\u5E94<code>findViewByid()</code>\u4EE5\u53CA<code>setOnClickListener()</code>\u7B49\u65B9\u6CD5\u7684\u4EE3\u7801\uFF0C\u5B83\u751F\u6210\u4E86\u8BE5\u7C7B\u540E\u5982\u4F55\u53BB\u8C03\u7528\u5462\uFF1F\u6211\u4EEC\u4E5F\u6CA1\u6709\u53D1\u73B0<code>new $$_ViewBinder</code>\u7684\u65B9\u6CD5\u3002\u4E0D\u8981\u5FD8\u4E86\u4E0A\u9762\u6211\u4EEC\u770B\u5230\u7684<code>ButterKnife.bind(this);</code>\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E00\u4E0B<code>ButterKnife.bind(this);</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
   * BindView annotated fields and methods in the specified <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Activity</span></span><span class="token punctuation">}</span>. The current content
   * view is used as the view root.
   *
   * <span class="token keyword">@param</span> <span class="token parameter">target</span> Target activity for view binding.
   */</span>
  <span class="token annotation punctuation">@NonNull</span> <span class="token annotation punctuation">@UiThread</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Unbinder</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Activity</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getViewBinder</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Finder</span><span class="token punctuation">.</span>ACTIVITY<span class="token punctuation">,</span> target<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * BindView annotated fields and methods in the specified <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">View</span></span><span class="token punctuation">}</span>. The view and its children
   * are used as the view root.
   *
   * <span class="token keyword">@param</span> <span class="token parameter">target</span> Target view for view binding.
   */</span>
  <span class="token annotation punctuation">@NonNull</span> <span class="token annotation punctuation">@UiThread</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Unbinder</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">View</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getViewBinder</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Finder</span><span class="token punctuation">.</span>VIEW<span class="token punctuation">,</span> target<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528\u4E86<code>getViewBinder()</code>\u7684<code>bind()</code>\u65B9\u6CD5\uFF0C\u7EE7\u7EED\u770B<code>getViewBinder()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">ViewBinder</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> BINDERS <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token annotation punctuation">@NonNull</span> <span class="token annotation punctuation">@CheckResult</span> <span class="token annotation punctuation">@UiThread</span>
  <span class="token keyword">static</span> <span class="token class-name">ViewBinder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getViewBinder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetClass <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Looking up view binder for &quot;</span> <span class="token operator">+</span> targetClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">findViewBinderForClass</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@NonNull</span> <span class="token annotation punctuation">@CheckResult</span> <span class="token annotation punctuation">@UiThread</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ViewBinder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">findViewBinderForClass</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cls<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// BINDERS\u662F\u4E00\u4E2AMap\u96C6\u5408\u3002\u4E5F\u5C31\u662F\u8BF4\u5B83\u5185\u90E8\u4F7F\u7528Map\u7F13\u5B58\u4E86\u4E00\u4E0B\uFF0C\u5148\u53BB\u5185\u5B58\u4E2D\u53D6</span>
     <span class="token class-name">ViewBinder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> viewBinder <span class="token operator">=</span> BINDERS<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>viewBinder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;HIT: Cached in view binder map.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> viewBinder<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5185\u5B58\u4E2D\u6CA1\u6709\u7F13\u5B58\u8BE5\u7C7B</span>
    <span class="token class-name">String</span> clsName <span class="token operator">=</span> cls<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u7C7B\u540D\u5224\u65AD\u4E0B\u662F\u4E0D\u662F\u7CFB\u7EDF\u7684\u7EC4\u4EF6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clsName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;android.&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> clsName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;java.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;MISS: Reached framework class. Abandoning search.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> NOP_VIEW_BINDER<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//noinspection TryWithIdenticalCatches Resolves to API 19+ only type.</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u901A\u8FC7\u53CD\u5C04\u83B7\u53D6\u5230\u5BF9\u5E94\u901A\u8FC7\u7F16\u8BD1\u65F6\u6CE8\u89E3\u751F\u6210\u7684$_ViewBinder\u7C7B\u7684\u5B9E\u4F8B</span>
      <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> viewBindingClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>clsName <span class="token operator">+</span> <span class="token string">&quot;_ViewBinder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//noinspection unchecked</span>
      viewBinder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ViewBinder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> viewBindingClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;HIT: Loaded view binder class.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Not found. Trying superclass &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      viewBinder <span class="token operator">=</span> <span class="token function">findViewBinderForClass</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to create view binder for &quot;</span> <span class="token operator">+</span> clsName<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to create view binder for &quot;</span> <span class="token operator">+</span> clsName<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u901A\u8FC7\u53CD\u5C04\u6765\u64CD\u4F5C\u6BD5\u7ADF\u4F1A\u5F71\u54CD\u6027\u80FD\uFF0C\u6240\u4EE5\u8FD9\u91CC\u901A\u8FC7Map\u7F13\u5B58\u7684\u65B9\u5F0F\u6765\u8FDB\u884C\u4F18\u5316</span>
    BINDERS<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> viewBinder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> viewBinder<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\u5C31\u5F7B\u5E95\u5206\u6790\u5B8C\u4E86<code>ButterKnife.bind(this);</code>\u7684\u5B9E\u73B0\uFF0C\u5B83\u5176\u5B9E\u5C31\u76F8\u5F53\u4E8E<code>new</code>\u4E86\u4E00\u4E2A<code>$_ViewBinder</code>\u7C7B\u7684\u5B9E\u4F8B\u3002\u5F53\u7136\u8FD9\u6837\u7528\u8D77\u6765\u662F\u975E\u5E38\u65B9\u4FBF\u7684\uFF0C\u6BD5\u7ADF\u6211\u4EEC\u624B\u52A8\u7684\u53BB<code>new</code>\u7C7B\u591A\u4E0D\u5408\u7406\uFF0C\u867D\u7136\u4ED6\u91CC\u9762\u7528\u5230\u4E86\u53CD\u5C04\u4F1A\u5F71\u54CD\u4E00\u70B9\u70B9\u6027\u80FD\uFF0C\u4F46\u662F\u4ED6\u901A\u8FC7\u5185\u5B58\u7F13\u5B58\u7684\u65B9\u5F0F\u4F18\u5316\u4E86\uFF0C\u6211\u611F\u89C9\u8FD9\u79CD\u65B9\u5F0F\u662F\u5229\u5927\u4E8E\u5F0A\u7684\u3002</p><p>\u90A3<code>$_ViewBinder</code>\u7C7B\u91CC\u9762\u90FD\u662F\u4EC0\u4E48\u5185\u5BB9\u5462\uFF1F \u6211\u4EEC\u53BB\u770B\u4E00\u4E0B\u8BE5\u7C7B\u7684\u4EE3\u7801\uFF0C\u4F46\u662F\u5B83\u751F\u6210\u7684\u4EE3\u7801\u5728\u54EA\u91CC\u5462\uFF1F <img src="https://github.com/CharonChui/Pictures/blob/master/butterknife_apt_genierate_code.png?raw=true" alt="image"></p><p>\u5F00\u59CB\u770B\u4E00\u4E0B<code>SimpleActivity_ViewBinder.bind()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SimpleActivity_ViewBinder</span> <span class="token keyword">implements</span> <span class="token class-name">ViewBinder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleActivity</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">Unbinder</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Finder</span> finder<span class="token punctuation">,</span> <span class="token class-name">SimpleActivity</span> target<span class="token punctuation">,</span> <span class="token class-name">Object</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SimpleActivity_ViewBinding</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> finder<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u770B<code>SimpleActivity_ViewBinding</code>\u7C7B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleActivity_ViewBinding</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleActivity</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Unbinder</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> <span class="token class-name">T</span> target<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token class-name">View</span> view2130968578<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token class-name">View</span> view2130968579<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">SimpleActivity_ViewBinding</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">T</span> target<span class="token punctuation">,</span> <span class="token class-name">Finder</span> finder<span class="token punctuation">,</span> <span class="token class-name">Object</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>

    <span class="token class-name">View</span> view<span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>title <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">findRequiredViewAsType</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;title&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">TextView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>subtitle <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">findRequiredViewAsType</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>subtitle<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;subtitle&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">TextView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">findRequiredView</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>hello<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;hello&#39;, method &#39;sayHello&#39;, and method &#39;sayGetOffMe&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>hello <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">castView</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>hello<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;hello&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Button</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view2130968578 <span class="token operator">=</span> view<span class="token punctuation">;</span>
    view<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DebouncingOnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> p0<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        target<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view<span class="token punctuation">.</span><span class="token function">setOnLongClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnLongClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onLongClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> p0<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">sayGetOffMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">findRequiredView</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_of_things<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;listOfThings&#39; and method &#39;onItemClick&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>listOfThings <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">castView</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_of_things<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;listOfThings&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">ListView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view2130968579 <span class="token operator">=</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AdapterView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> view<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AdapterView<span class="token punctuation">.</span>OnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemClick</span><span class="token punctuation">(</span><span class="token class-name">AdapterView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> p0<span class="token punctuation">,</span> <span class="token class-name">View</span> p1<span class="token punctuation">,</span> <span class="token keyword">int</span> p2<span class="token punctuation">,</span> <span class="token keyword">long</span> p3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        target<span class="token punctuation">.</span><span class="token function">onItemClick</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>footer <span class="token operator">=</span> finder<span class="token punctuation">.</span><span class="token function">findRequiredViewAsType</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>footer<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;footer&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">TextView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>headerViews <span class="token operator">=</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">listOf</span><span class="token punctuation">(</span>
        finder<span class="token punctuation">.</span><span class="token function">findRequiredView</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;headerViews&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
        finder<span class="token punctuation">.</span><span class="token function">findRequiredView</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>subtitle<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;headerViews&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
        finder<span class="token punctuation">.</span><span class="token function">findRequiredView</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>hello<span class="token punctuation">,</span> <span class="token string">&quot;field &#39;headerViews&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unbind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Bindings already cleared.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    target<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>subtitle <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>listOfThings <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>footer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span>headerViews <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    view2130968578<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view2130968578<span class="token punctuation">.</span><span class="token function">setOnLongClickListener</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view2130968578 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AdapterView</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> view2130968579<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    view2130968579 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4ED6\u5185\u90E8\u4F1A\u901A\u8FC7<code>findViewByid()</code>\u7B49\u6765\u627E\u5230\u5BF9\u5E94\u7684<code>View</code>\uFF0C\u7136\u540E\u5C06\u5176\u8D4B\u503C\u7ED9<code>target.xxxx</code>\uFF0C\u6240\u4EE5\u8FD9\u6837\u5C31\u76F8\u5F53\u4E8E\u628A\u6240\u6709\u7684\u63A7\u4EF6\u4EE5\u53CA\u4E8B\u4EF6\u90FD\u7ED9\u521D\u59CB\u5316\u4E86\uFF0C\u4EE5\u540E\u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E86\uFF0C\u901A\u8FC7\u8FD9\u91CC\u4E5F\u53EF\u4EE5\u770B\u5230\u6211\u4EEC\u5728\u4F7F\u7528\u6CE8\u89E3\u7684\u65F6\u5019\u4E0D\u8981\u628A\u63A7\u4EF6\u6216\u8005\u65B9\u6CD5\u58F0\u660E\u4E3A<code>private</code>\u7684\u3002</p><p>\u603B\u7ED3\u4E00\u4E0B:</p><ul><li><p><code>ButterKnifeProcessor</code>\u4F1A\u751F\u6210<code>$$_ViewBinder</code>\u7C7B\u5E76\u5B9E\u73B0\u4E86<code>ViewBinder</code>\u63A5\u53E3\u3002</p></li><li><p><code>$$_ViewBinder</code>\u7C7B\u4E2D\u5305\u542B\u4E86\u6240\u6709\u5BF9\u5E94\u7684\u4EE3\u7801\uFF0C\u4F1A\u901A\u8FC7\u6CE8\u89E3\u53BB\u89E3\u6790\u5230<code>id</code>\u7B49\uFF0C\u7136\u540E\u901A\u8FC7<code>findViewById()</code>\u7B49\u65B9\u6CD5\u627E\u5230\u5BF9\u5E94\u7684\u63A7\u4EF6\uFF0C\u5E76\u4E14\u590D\u5236\u7ED9\u8C03\u7528\u8BE5\u65B9\u6CD5\u7684\u6765\u4E2D\u7684\u53D8\u91CF\u3002\u8FD9\u6837\u5C31\u7B49\u540C\u4E8E\u6211\u4EEC\u76F4\u63A5 \u4F7F\u7528<code>View v = findViewByid(R.id.xx)</code>\u6765\u8FDB\u884C\u521D\u59CB\u5316\u63A7\u4EF6\u3002</p></li><li><p>\u4E0A\u9762\u867D\u7136\u751F\u6210\u4E86<code>$$_ViewBinder</code>\u7C7B\uFF0C\u4F46\u662F\u5982\u4F55\u53BB\u8C03\u7528\u5462\uFF1F \u5C31\u662F\u5728\u8C03\u7528<code>ButterKnife.bind(this)</code>\u65F6\u6267\u884C\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u901A\u8FC7\u53CD\u5C04\u53BB\u5B9E\u4F8B\u5316\u5BF9\u5E94\u7684<code>$$_ViewBinder</code>\u7C7B\uFF0C\u5E76\u4E14\u8C03\u7528\u8BE5\u7C7B\u7684<code>bind()</code>\u65B9\u6CD5\u3002</p></li><li><p><code>Butterknife</code>\u9664\u4E86\u5728<code>Butterknife.bind()</code>\u65B9\u6CD5\u4E2D\u4F7F\u7528\u53CD\u5C04\u4E4B\u5916\uFF0C\u5176\u4ED6\u6CE8\u89E3\u7684\u5904\u7406\u90FD\u662F\u901A\u8FC7\u7F16\u8BD1\u65F6\u6CE8\u89E3\u4F7F\u7528\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u5F71\u54CD\u6548\u7387\u3002</p></li><li><p>\u4F7F\u7528<code>Butterknife</code>\u662F\u4E0D\u8981\u5C06\u53D8\u91CF\u58F0\u660E\u4E3A<code>private</code>\u7C7B\u578B\uFF0C\u56E0\u4E3A<code>$$_ViewBinder</code>\u7C7B\u4E2D\u4F1A\u53BB\u76F4\u63A5\u8C03\u7528\u53D8\u91CF\u8D4B\u503C\uFF0C\u5982\u679C\u58F0\u660E\u4E3A<code>private</code>\u5C06\u65E0\u6CD5\u8D4B\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@BindView</span><span class="token punctuation">(</span>R2<span class="token punctuation">.</span>id<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token class-name">TextView</span> title<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,38);function $(D,W){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[k,d,r,n("a",m,[v,t(a)]),b,g,w]),n("p",null,[f,y,h,n("a",B,[V,t(a)])]),C,E,T,n("p",null,[_,n("a",N,[A,t(a)]),q]),j,n("p",null,[S,n("a",I,[x,t(a)]),M,R,O,P,L]),F])}var K=e(l,[["render",$],["__file","butterknife\u6E90\u7801\u8BE6\u89E3.html.vue"]]);export{K as default};
