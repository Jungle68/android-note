import{_ as p,r as e,o,c,a as n,b as i,e as a,d as s}from"./app.e2a3b496.js";const l={},u=a(`<h1 id="listview\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#listview\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> ListView\u6E90\u7801\u5206\u6790</h1><p>\u4E00\u76F4\u90FD\u60F3\u5199\u4E00\u7BC7\u6587\u7AE0\u5206\u6790\u4E0B<code>ListView</code>\u7684\u5B9E\u73B0\uFF0C\u603B\u662F\u5FD9\uFF0C\u4E00\u76F4\u62D6\u5230\u73B0\u5728\uFF0C\u5FEB\u5230\u5E74\u5E95\u4E86\uFF0C\u5199\u51FA\u6765\u5E0C\u671B\u80FD\u5E2E\u52A9\u4E00\u4E9B\u9762\u8BD5\u8DF3\u69FD\u7684\u4EBA\u3002<br> \u5F53\u7136\u5199\u8FD9\u7BC7\u6587\u7AE0\u4E5F\u662F\u6709\u539F\u56E0\u7684\uFF0C\u5F53\u65F6\u6709\u540C\u4E8B\u5728\u9762\u8BD5\u7684\u65F6\u5019\uFF0C\u88AB\u5BF9\u65B9\u8981\u6C42\u5F53\u573A\u5B9E\u73B0\u4E00\u4E2A<code>ListView</code>\uFF0C\u540C\u4E8B\u7B80\u5355\u7684\u7B54\u4E86\u4E00\u4E9B\u5B9E\u73B0\u539F\u7406\u540E\uFF0C\u5F88\u663E\u7136\u5BF9\u65B9\u4E0D\u6EE1\u610F\uFF0C\u7ECF\u8FC7\u51E0\u8F6EPK\u540E\uFF0C\u5C31\u6709\u4E86\u4E0D\u6CB3\u87F9\u7684\u7ED3\u5C40\u3002<br> \u4E0D\u6B22\u800C\u6563\uFF0C\u54C8\u54C8\u3002\u542C\u8BF4\u540E\u5F53\u65F6\u6211\u60F3\u7740\u8981\u628A<code>ListView</code>\u6E90\u7801\u4ED4\u7EC6\u5206\u6790\u540E\uFF0C\u6211\u81EA\u5DF1\u4E5F\u53BB\u9762\u8BD5\u8BD5\u8BD5\uFF0C\u53EF\u662F\u62D6\u5230\u4E86\u73B0\u5728\u4E5F\u6CA1\u673A\u4F1A\u4E86\u3002</p><p><code>GridView</code>\u4E0E<code>ListView</code>\u90FD\u7EE7\u627F\u81EA<code>AbsListView</code>\uFF0C\u4ED6\u4FE9\u7684\u5B9E\u73B0\u4E5F\u6BD4\u8F83\u7C7B\u4F3C\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u8BF4<code>GridView</code>\u4E86\u3002\u53EA\u8BF4\u4E00\u4E0B<code>ListView</code>\u3002 \u9996\u5148\u770B\u4E00\u4E0B<code>ListView</code>\u7684\u6587\u6863:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
 * Implementation Notes:
 *
 * Some terminology:
 *
 *     index    - index of the items that are currently visible
 *     position - index of the items in the cursor
 */</span>


<span class="token doc-comment comment">/**
 * A view that shows items in a vertically scrolling list. The items
 * come from the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ListAdapter</span></span><span class="token punctuation">}</span> associated with this view.
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u518D\u8BF4\u4E00\u4E0B<code>ListView</code>\u7684\u7EE7\u627F\u5173\u7CFB<code>ListView extends AbsListView extends AdapterView&lt;ListAdapter&gt; extends ViewGroup extends View</code>\u3002 <code>ListView</code>\u4E0E\u5176\u4ED6\u7A7A\u95F4\u4E0D\u4E00\u6837\uFF0C\u4E0D\u662F\u62D6\u5230\u754C\u9762\u4E0A\u5C31\u80FD\u7528\uFF0C\u800C\u662F\u8981\u901A\u8FC7\u8BBE\u7F6E\u9002\u914D\u5668\u6765\u6DFB\u52A0\u6761\u76EE\u3002\u8FD9\u5C31\u662F<code>AdapterView</code>\u7684\u4E3B\u8981\u529F\u80FD\u3002\u65E2\u7136\u901A\u8FC7\u9002\u914D\u5668\u6765\u64CD\u4F5C\u6570\u636E\u3002 \u8FD9\u91CC\u81EA\u7136\u60F3\u5230\u7684\u5C31\u662F<code>MVC</code>\u8BBE\u8BA1\u6A21\u5F0F\u3002</p><ul><li><code>Data</code> - <code>M</code></li><li><code>ListView</code> - <code>V</code></li><li><code>Adapter</code> - <code>C</code></li></ul><p>\u5230\u8FD9\u91CC\u6211\u4EEC\u5199\u7F57\u5217\u4E00\u4E0B\u6211\u4EEC\u5C06\u8981\u5206\u6790\u7684\u5185\u5BB9:</p><ul><li><code>ListView</code>\u4E0E<code>Adapter</code>\u95F4\u7684\u8C03\u7528\u3002</li><li><code>ListView</code>\u4E0A\u4E0B\u6ED1\u52A8\u65F6\u64CD\u4F5C\u53CA\u7F13\u5B58\u3002</li></ul><p>\u6211\u4EEC\u5E73\u65F6\u4F7F\u7528<code>ListView</code>\u7684\u65F6\u5019\u90FD\u662F\u8C03\u7528<code>setAdapter()</code>\u65B9\u6CD5\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD9\u91CC\u5C31\u4ECE\u8BE5\u65B9\u6CD5\u5165\u624B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Sets the data behind this ListView.
     *
     * The adapter passed to this method may be wrapped by a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">WrapperListAdapter</span></span><span class="token punctuation">}</span>,
     * depending on the ListView features currently in use. For instance, adding
     * headers and/or footers will cause the adapter to be wrapped.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">adapter</span> The ListAdapter which is responsible for maintaining the
     *        data backing this list and for producing a view to represent an
     *        item in that data set.
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> 
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token class-name">ListAdapter</span> adapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mDataSetObserver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	    <span class="token comment">// \u53D6\u6D88\u4E4B\u524D\u6CE8\u518C\u8FC7\u7684Adapter</span>
            mAdapter<span class="token punctuation">.</span><span class="token function">unregisterDataSetObserver</span><span class="token punctuation">(</span>mDataSetObserver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6E05\u7A7A\u6240\u6709\u7684\u6570\u636E</span>
        <span class="token function">resetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
        <span class="token comment">// The data set used to store unused views that should be reused during the next layout to avoid creating new ones.</span>
        <span class="token comment">// \u4ECE\u6CE8\u91CA\u4E2D\u53EF\u4EE5\u5F88\u660E\u663E\u7684\u770B\u51FA\`View\`\u7684\u590D\u7528\u662F\u901A\u8FC7\`RecycleBin\`\u7C7B\u6765\u5B9E\u73B0\u7684\u3002\u5B83\u5C31\u51B3\u5B9A\u4E86\u4E3A\u4EC0\u4E48\`ListView\`\u53EF\u4EE5\u663E\u793A\u5F88\u591A\u6570\u636E\u7F3A\u4E0D\u4F1A\u5185\u5B58\u6EA2\u51FA\u3002</span>
        mRecycler<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mHeaderViewInfos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token operator">||</span> mFooterViewInfos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u6709HeaderView\u6216\u8005FooterView\u5C31\u628AAdapter\u91CD\u65B0\u5C01\u88C5\u4E0B,\u8FD9\u662F\u4EC0\u4E48\u8BBE\u8BA1\u6A21\u5F0F\uFF1F\uFF0D\u88C5\u9970</span>
			<span class="token comment">// mHeaderViewInfos\u548CmFooterViewInfos\u5206\u522B\u662Fheader view\u548Cfoooter view\u88C5\u9970\u7C7BFixedViewInfo\u7684\u96C6\u5408\u3002</span>
			<span class="token comment">// \u4F1A\u5728addHeaderView()\u548CaddFooterView()\u4E2D\u8FDB\u884C\u6DFB\u52A0\u3002</span>
            mAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeaderViewListAdapter</span><span class="token punctuation">(</span>mHeaderViewInfos<span class="token punctuation">,</span> mFooterViewInfos<span class="token punctuation">,</span> adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mAdapter <span class="token operator">=</span> adapter<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mOldSelectedPosition <span class="token operator">=</span> INVALID_POSITION<span class="token punctuation">;</span>
        mOldSelectedRowId <span class="token operator">=</span> INVALID_ROW_ID<span class="token punctuation">;</span>

        <span class="token comment">// AbsListView#setAdapter will update choice mode states.</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mAreAllItemsSelectable <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">areAllItemsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mOldItemCount <span class="token operator">=</span> mItemCount<span class="token punctuation">;</span>
            mItemCount <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">checkFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            mDataSetObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AdapterDataSetObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mAdapter<span class="token punctuation">.</span><span class="token function">registerDataSetObserver</span><span class="token punctuation">(</span>mDataSetObserver<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token comment">// \u5C06viewtypecount\u8BBE\u7F6E\u7ED9RecycleBin</span>
            mRecycler<span class="token punctuation">.</span><span class="token function">setViewTypeCount</span><span class="token punctuation">(</span>mAdapter<span class="token punctuation">.</span><span class="token function">getViewTypeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">int</span> position<span class="token punctuation">;</span>
            <span class="token comment">// mStackFromBottom Indicates whether the list is stacked from the bottom edge or the top edge.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mStackFromBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                position <span class="token operator">=</span> <span class="token function">lookForSelectablePosition</span><span class="token punctuation">(</span>mItemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                position <span class="token operator">=</span> <span class="token function">lookForSelectablePosition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">setSelectedPositionInt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setNextSelectedPositionInt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>mItemCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Nothing selected</span>
                <span class="token function">checkSelectionChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mAreAllItemsSelectable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">checkFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Nothing selected</span>
            <span class="token function">checkSelectionChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		<span class="token comment">// \u8BF7\u6C42layout\u4E86\uFF0C\u8FD9\u4E2A\u5C31\u5F88\u91CD\u8981\u4E86\u554A...\u6211\u4EEC\u7A0D\u540E\u770B\u4E00\u4E0B\u3002</span>
        <span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
     * The list is empty. Clear everything out.
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">resetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The parent&#39;s resetList() will remove all views from the layout so we need to</span>
        <span class="token comment">// cleanup the state of our footers and headers</span>
        <span class="token function">clearRecycledState</span><span class="token punctuation">(</span>mHeaderViewInfos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">clearRecycledState</span><span class="token punctuation">(</span>mFooterViewInfos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// The list is empty. Clear everything out.</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">resetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mLayoutMode <span class="token operator">=</span> LAYOUT_NORMAL<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clearRecycledState</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FixedViewInfo</span><span class="token punctuation">&gt;</span></span> infos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>infos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> infos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> infos<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>view<span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token class-name">LayoutParams</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				    <span class="token comment">// \u8FD9\u91CCp\u5C31\u662FAbsListView.LayoutParams\u3002\u5BF9\u4E8ErecycledHeaderFooter\u5728\u6CE8\u91CA\u4E2D\u662F\u8FD9\u6837\u8BF4\u7684. </span>
					<span class="token doc-comment comment">/**
					 * When this boolean is set, the view has been added to the AbsListView
					 * at least once. It is used to know whether headers/footers have already
					 * been added to the list view and whether they should be treated as
					 * recycled views or not.
					 */</span>
                    p<span class="token punctuation">.</span>recycledHeaderFooter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u5230<code>setAdapter()</code>\u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528<code>requestLayout()</code>\u65B9\u6CD5\u3002\u800C<code>requestLayout()</code>\u65B9\u6CD5\u4F1A\u8C03\u7528<code>onLayout()</code>\u65B9\u6CD5\uFF0C\u4F46\u662F\u6211\u4EEC\u5728<code>ListView</code>\u4E2D\u627E\u4E0D\u5230<code>onLayout()</code>\u65B9\u6CD5\u3002 \u90A3\u5C31\u53BB\u4ED6\u7684\u7236\u7C7B<code>AbsListView</code>\u4E2D\u627E\u3002\u6211\u4EEC\u63A5\u7740\u6765\u770B\u4E00\u4E0B<code>AbsListView.onLayout()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Subclasses should NOT override this method but
 *  <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> instead.
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> changed<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token punctuation">,</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

	mInLayout <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> childCount <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>changed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forceLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mRecycler<span class="token punctuation">.</span><span class="token function">markChildrenDirty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u8C03\u7528layoutChildren()\u65B9\u6CD5\u3002</span>
	<span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mInLayout <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	mOverscrollMax <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">-</span> t<span class="token punctuation">)</span> <span class="token operator">/</span> OVERSCROLL_LIMIT_DIVISOR<span class="token punctuation">;</span>

	<span class="token comment">// TODO: Move somewhere sane. This doesn&#39;t belong in onLayout().</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mFastScroll <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mFastScroll<span class="token punctuation">.</span><span class="token function">onItemCountChanged</span><span class="token punctuation">(</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mItemCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u4E00\u4E0B<code>AbsListView.layoutChildren()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Subclasses must override this method to layout their children.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u662F\u7A7A\u7684,\u6587\u6863\u8BF4\u7684\u5F88\u660E\u767D\u4E86\uFF0C\u5B50\u7C7B\u5FC5\u987B\u8981\u53BB\u5B9E\u73B0\u8BE5\u65B9\u6CD5\uFF0C\u8FD9\u4E5F\u662F\u5E94\u8BE5\u7684\uFF0C\u56E0\u4E3A<code>ListView</code>\u548C<code>GridView</code>\u7684\u5C55\u73B0\u662F\u4E0D\u4E00\u6837\u7684.\u6240\u4EE5\u6211\u4EEC\u770B\u4E00\u4E0B<code>ListView.layoutChildren()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// When set to true, calls to requestLayout() will not propagate up the parent hierarchy.</span>
    <span class="token comment">// This is used to layout the children during a layout pass.</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> blockLayoutRequests <span class="token operator">=</span> mBlockLayoutRequests<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>blockLayoutRequests<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u5F00\u59CB\u4E86\uFF0C\u7F6E\u4E3Atrue</span>
	mBlockLayoutRequests <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">resetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">invokeOnItemScrollListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token keyword">int</span> childrenTop <span class="token operator">=</span> mListPadding<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childrenBottom <span class="token operator">=</span> mBottom <span class="token operator">-</span> mTop <span class="token operator">-</span> mListPadding<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childCount <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> delta <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

		<span class="token class-name">View</span> sel<span class="token punctuation">;</span>
		<span class="token class-name">View</span> oldSel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">View</span> oldFirst <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">View</span> newSel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token comment">// Remember stuff we will need down below</span>
		<span class="token comment">// mLayoutMode\u7684\u6CE8\u91CA\u4E3AControls how the next layout will happen\uFF0C\u9ED8\u8BA4\u4E3ALAYOUT_NORMAL</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>mLayoutMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> LAYOUT_SET_SELECTION<span class="token operator">:</span>
			index <span class="token operator">=</span> mNextSelectedPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;</span> childCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				newSel <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_FORCE_TOP<span class="token operator">:</span>
		<span class="token keyword">case</span> LAYOUT_FORCE_BOTTOM<span class="token operator">:</span>
		<span class="token keyword">case</span> LAYOUT_SPECIFIC<span class="token operator">:</span>
		<span class="token keyword">case</span> LAYOUT_SYNC<span class="token operator">:</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_MOVE_SELECTION<span class="token operator">:</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
			<span class="token comment">// Remember the previously selected view</span>
			index <span class="token operator">=</span> mSelectedPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;</span> childCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				oldSel <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Remember the previous first child</span>
			oldFirst <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>mNextSelectedPosition <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				delta <span class="token operator">=</span> mNextSelectedPosition <span class="token operator">-</span> mSelectedPosition<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Caution: newSel might be null</span>
			newSel <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>index <span class="token operator">+</span> delta<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// mDataChanged\u53D8\u91CF\u6807\u8BB0Adapter\u4E2D\u6570\u636E\u662F\u5426\u53D1\u751F\u53D8\u5316</span>
		<span class="token keyword">boolean</span> dataChanged <span class="token operator">=</span> mDataChanged<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>dataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">handleDataChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Handle the empty set by removing all views that are visible</span>
		<span class="token comment">// and calling it a day</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mItemCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">resetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">invokeOnItemScrollListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mItemCount <span class="token operator">!=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;The content of the adapter has changed but &quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot;ListView did not receive a notification. Make sure the content of &quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot;your adapter is not modified from a background thread, but only from &quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot;the UI thread. Make sure your adapter calls notifyDataSetChanged() &quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot;when its content changes. [in ListView(&quot;</span> <span class="token operator">+</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">+</span> <span class="token string">&quot;) with Adapter(&quot;</span> <span class="token operator">+</span> mAdapter<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token function">setSelectedPositionInt</span><span class="token punctuation">(</span>mNextSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">AccessibilityNodeInfo</span> accessibilityFocusLayoutRestoreNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">View</span> accessibilityFocusLayoutRestoreView <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> accessibilityFocusPosition <span class="token operator">=</span> INVALID_POSITION<span class="token punctuation">;</span>

		<span class="token comment">// Remember which child, if any, had accessibility focus. This must</span>
		<span class="token comment">// occur before recycling any views, since that will clear</span>
		<span class="token comment">// accessibility focus.</span>
		<span class="token keyword">final</span> <span class="token class-name">ViewRootImpl</span> viewRootImpl <span class="token operator">=</span> <span class="token function">getViewRootImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewRootImpl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> focusHost <span class="token operator">=</span> viewRootImpl<span class="token punctuation">.</span><span class="token function">getAccessibilityFocusedHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>focusHost <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> focusChild <span class="token operator">=</span> <span class="token function">getAccessibilityFocusedChild</span><span class="token punctuation">(</span>focusHost<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>focusChild <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataChanged <span class="token operator">||</span> <span class="token function">isDirectChildHeaderOrFooter</span><span class="token punctuation">(</span>focusChild<span class="token punctuation">)</span>
							<span class="token operator">||</span> focusChild<span class="token punctuation">.</span><span class="token function">hasTransientState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> mAdapterHasStableIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">// The views won&#39;t be changing, so try to maintain</span>
						<span class="token comment">// focus on the current host and virtual view.</span>
						accessibilityFocusLayoutRestoreView <span class="token operator">=</span> focusHost<span class="token punctuation">;</span>
						accessibilityFocusLayoutRestoreNode <span class="token operator">=</span> viewRootImpl
								<span class="token punctuation">.</span><span class="token function">getAccessibilityFocusedVirtualView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>

					<span class="token comment">// If all else fails, maintain focus at the same</span>
					<span class="token comment">// position.</span>
					accessibilityFocusPosition <span class="token operator">=</span> <span class="token function">getPositionForView</span><span class="token punctuation">(</span>focusChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">View</span> focusLayoutRestoreDirectChild <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">View</span> focusLayoutRestoreView <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token comment">// Take focus back to us temporarily to avoid the eventual call to</span>
		<span class="token comment">// clear focus when removing the focused child below from messing</span>
		<span class="token comment">// things up when ViewAncestor assigns focus back to someone else.</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span> focusedChild <span class="token operator">=</span> <span class="token function">getFocusedChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>focusedChild <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO: in some cases focusedChild.getParent() == null</span>

			<span class="token comment">// We can remember the focused view to restore after re-layout</span>
			<span class="token comment">// if the data hasn&#39;t changed, or if the focused position is a</span>
			<span class="token comment">// header or footer.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dataChanged <span class="token operator">||</span> <span class="token function">isDirectChildHeaderOrFooter</span><span class="token punctuation">(</span>focusedChild<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				focusLayoutRestoreDirectChild <span class="token operator">=</span> focusedChild<span class="token punctuation">;</span>
				<span class="token comment">// Remember the specific view that had focus.</span>
				focusLayoutRestoreView <span class="token operator">=</span> <span class="token function">findFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>focusLayoutRestoreView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Tell it we are going to mess with it.</span>
					focusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">onStartTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Pull all children into the RecycleBin.</span>
		<span class="token comment">// These views will be reused if possible</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> firstPosition <span class="token operator">=</span> mFirstPosition<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">RecycleBin</span> recycleBin <span class="token operator">=</span> mRecycler<span class="token punctuation">;</span>
		<span class="token comment">// RecycleBin\u63A7\u5236\u7740\u6574\u4E2Aitem\u7684\u590D\u7528\uFF0C\u7B49\u6700\u540E\u6211\u4EEC\u518D\u4ED4\u7EC6\u5206\u6790\u4E0BRecycleBin\u7C7B</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>dataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		    <span class="token comment">// \u5982\u679C\u6570\u636E\u53D1\u751F\u53D8\u5316\uFF0C\u5C31\u628A\u73B0\u5728\u7684View\u90FD\u6DFB\u52A0\u5230\u4E00\u4E2A\u5E9F\u5F03\u7684View\u8FDB\u884C\u7F13\u5B58\uFF0CRecycleBin.addScrapView()\u65B9\u6CD5\u5C31\u662F\u7F13\u5B58\u4E00\u4E9B\u5E9F\u5F03\u7684View</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				recycleBin<span class="token punctuation">.</span><span class="token function">addScrapView</span><span class="token punctuation">(</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> firstPosition<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		    <span class="token comment">// \u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u540E\u5C31\u4F1A\u6839\u636E\u4F20\u5165\u7684\u53C2\u6570\u6765\u5C06ListView\u4E2D\u7684\u6307\u5B9A\u5143\u7D20\u5B58\u50A8\u5230mActiveViews\u6570\u7EC4\u5F53\u4E2D\u3002</span>
			recycleBin<span class="token punctuation">.</span><span class="token function">fillActiveViews</span><span class="token punctuation">(</span>childCount<span class="token punctuation">,</span> firstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Clear out old views</span>
		<span class="token function">detachAllViewsFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		recycleBin<span class="token punctuation">.</span><span class="token function">removeSkippedScrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// mLayoutMode\u9ED8\u8BA4\u662FLAYOUT_NORMAL</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>mLayoutMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> LAYOUT_SET_SELECTION<span class="token operator">:</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>newSel <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				sel <span class="token operator">=</span> <span class="token function">fillFromSelection</span><span class="token punctuation">(</span>newSel<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> childrenTop<span class="token punctuation">,</span> childrenBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				sel <span class="token operator">=</span> <span class="token function">fillFromMiddle</span><span class="token punctuation">(</span>childrenTop<span class="token punctuation">,</span> childrenBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_SYNC<span class="token operator">:</span>
			sel <span class="token operator">=</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span>mSyncPosition<span class="token punctuation">,</span> mSpecificTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_FORCE_BOTTOM<span class="token operator">:</span>
			sel <span class="token operator">=</span> <span class="token function">fillUp</span><span class="token punctuation">(</span>mItemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> childrenBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">adjustViewsUpOrDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_FORCE_TOP<span class="token operator">:</span>
			mFirstPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			sel <span class="token operator">=</span> <span class="token function">fillFromTop</span><span class="token punctuation">(</span>childrenTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">adjustViewsUpOrDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_SPECIFIC<span class="token operator">:</span>
			sel <span class="token operator">=</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span><span class="token function">reconcileSelectedPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mSpecificTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> LAYOUT_MOVE_SELECTION<span class="token operator">:</span>
			sel <span class="token operator">=</span> <span class="token function">moveSelection</span><span class="token punctuation">(</span>oldSel<span class="token punctuation">,</span> newSel<span class="token punctuation">,</span> delta<span class="token punctuation">,</span> childrenTop<span class="token punctuation">,</span> childrenBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
		    <span class="token comment">// \u7B2C\u4E00\u6B21\u8C03\u7528layoutChildren\u65B9\u6CD5\u7684\u65F6\u5019\u662F\u8FD8\u6CA1\u6709layout\u7684\uFF0C\u6240\u4EE5\u8FD9\u65F6\u5019childCount\u662F0</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>childCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			    <span class="token comment">// mStackFromBottom\u7684\u6CE8\u91CAIndicates whether the list is stacked from the bottom edge or the top edge.</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mStackFromBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				    <span class="token comment">// \u9ED8\u8BA4\u7684\u5E03\u5C40\u65B9\u5F0F\u662F\u4ECE\u4E0A\u5F80\u4E0B\u7684\u3002</span>
					<span class="token keyword">final</span> <span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token function">lookForSelectablePosition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token function">setSelectedPositionInt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">// \u8C03\u7528fillFromTop\u65B9\u6CD5\u3002</span>
					sel <span class="token operator">=</span> <span class="token function">fillFromTop</span><span class="token punctuation">(</span>childrenTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token function">lookForSelectablePosition</span><span class="token punctuation">(</span>mItemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token function">setSelectedPositionInt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
					sel <span class="token operator">=</span> <span class="token function">fillUp</span><span class="token punctuation">(</span>mItemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> childrenBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6709\u6761\u76EE\u4E86\u5C31\u4F1A\u8D70\u5230\u8FD9\u91CC</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mSelectedPosition <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mSelectedPosition <span class="token operator">&lt;</span> mItemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					sel <span class="token operator">=</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">,</span>
							oldSel <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> childrenTop <span class="token operator">:</span> oldSel<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mFirstPosition <span class="token operator">&lt;</span> mItemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				    <span class="token comment">// \u6CA1\u6709\u9009\u4E2D\u7684\u6761\u76EE</span>
					<span class="token comment">// TODO \u4E00\u4F1A\u5148\u5206\u6790\u4E0A\u9762\u7684fillFromTop\u90E8\u5206\uFF0C\u628A\u5176\u5168\u90E8\u5206\u6790\u5B8C\u540E\u518D\u56DE\u6765\u5206\u6790\u8FD9\u91CC\u3002</span>
					sel <span class="token operator">=</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span>mFirstPosition<span class="token punctuation">,</span>
							oldFirst <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> childrenTop <span class="token operator">:</span> oldFirst<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					sel <span class="token operator">=</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> childrenTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Flush any cached views that did not get reused above</span>
		recycleBin<span class="token punctuation">.</span><span class="token function">scrapActiveViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>sel <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// The current selected item should get focus if items are</span>
			<span class="token comment">// focusable.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mItemsCanFocus <span class="token operator">&amp;&amp;</span> <span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>sel<span class="token punctuation">.</span><span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token keyword">boolean</span> focusWasTaken <span class="token operator">=</span> <span class="token punctuation">(</span>sel <span class="token operator">==</span> focusLayoutRestoreDirectChild <span class="token operator">&amp;&amp;</span>
						focusLayoutRestoreView <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
						focusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> sel<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>focusWasTaken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Selected item didn&#39;t take focus, but we still want to</span>
					<span class="token comment">// make sure something else outside of the selected view</span>
					<span class="token comment">// has focus.</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> focused <span class="token operator">=</span> <span class="token function">getFocusedChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>focused <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						focused<span class="token punctuation">.</span><span class="token function">clearFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token function">positionSelector</span><span class="token punctuation">(</span>INVALID_POSITION<span class="token punctuation">,</span> sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					sel<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					mSelectorRect<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token function">positionSelector</span><span class="token punctuation">(</span>INVALID_POSITION<span class="token punctuation">,</span> sel<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mSelectedTop <span class="token operator">=</span> sel<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">boolean</span> inTouchMode <span class="token operator">=</span> mTouchMode <span class="token operator">==</span> TOUCH_MODE_TAP
					<span class="token operator">||</span> mTouchMode <span class="token operator">==</span> TOUCH_MODE_DONE_WAITING<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>inTouchMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// If the user&#39;s finger is down, select the motion position.</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>mMotionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">positionSelector</span><span class="token punctuation">(</span>mMotionPosition<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mSelectorPosition <span class="token operator">!=</span> INVALID_POSITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// If we had previously positioned the selector somewhere,</span>
				<span class="token comment">// put it back there. It might not match up with the data,</span>
				<span class="token comment">// but it&#39;s transitioning out so it&#39;s not a big deal.</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>mSelectorPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">positionSelector</span><span class="token punctuation">(</span>mSelectorPosition<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// Otherwise, clear selection.</span>
				mSelectedTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
				mSelectorRect<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Even if there is not selected position, we may need to</span>
			<span class="token comment">// restore focus (i.e. something focusable in touch mode).</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> focusLayoutRestoreView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				focusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Attempt to restore accessibility focus, if necessary.</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewRootImpl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> newAccessibilityFocusedView <span class="token operator">=</span> viewRootImpl<span class="token punctuation">.</span><span class="token function">getAccessibilityFocusedHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>newAccessibilityFocusedView <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>accessibilityFocusLayoutRestoreView <span class="token operator">!=</span> <span class="token keyword">null</span>
						<span class="token operator">&amp;&amp;</span> accessibilityFocusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">isAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">AccessibilityNodeProvider</span> provider <span class="token operator">=</span>
							accessibilityFocusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>accessibilityFocusLayoutRestoreNode <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> provider <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">final</span> <span class="token keyword">int</span> virtualViewId <span class="token operator">=</span> <span class="token class-name">AccessibilityNodeInfo</span><span class="token punctuation">.</span><span class="token function">getVirtualDescendantId</span><span class="token punctuation">(</span>
								accessibilityFocusLayoutRestoreNode<span class="token punctuation">.</span><span class="token function">getSourceNodeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						provider<span class="token punctuation">.</span><span class="token function">performAction</span><span class="token punctuation">(</span>virtualViewId<span class="token punctuation">,</span>
								<span class="token class-name">AccessibilityNodeInfo</span><span class="token punctuation">.</span>ACTION_ACCESSIBILITY_FOCUS<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
						accessibilityFocusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">requestAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>accessibilityFocusPosition <span class="token operator">!=</span> INVALID_POSITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Bound the position within the visible children.</span>
					<span class="token keyword">final</span> <span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token class-name">MathUtils</span><span class="token punctuation">.</span><span class="token function">constrain</span><span class="token punctuation">(</span>
							accessibilityFocusPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
							<span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> restoreView <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>restoreView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						restoreView<span class="token punctuation">.</span><span class="token function">requestAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Tell focus view we are done mucking with it, if it is still in</span>
		<span class="token comment">// our view hierarchy.</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>focusLayoutRestoreView <span class="token operator">!=</span> <span class="token keyword">null</span>
				<span class="token operator">&amp;&amp;</span> focusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">getWindowToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			focusLayoutRestoreView<span class="token punctuation">.</span><span class="token function">onFinishTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		mLayoutMode <span class="token operator">=</span> LAYOUT_NORMAL<span class="token punctuation">;</span>
		mDataChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mPositionScrollAfterLayout <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">post</span><span class="token punctuation">(</span>mPositionScrollAfterLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mPositionScrollAfterLayout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mNeedSync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token function">setNextSelectedPositionInt</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token function">updateScrollIndicators</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mItemCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">checkSelectionChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token function">invokeOnItemScrollListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>blockLayoutRequests<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mBlockLayoutRequests <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u770B\u5230\u4F1A\u8C03\u7528<code>fillFromTop()</code>\u65B9\u6CD5\uFF0C\u6211\u4EEC\u770B\u4E00\u4E0B\u8BE5\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Fills the list from top to bottom, starting with mFirstPosition
 *
 * <span class="token keyword">@param</span> <span class="token parameter">nextTop</span> The location where the top of the first item should be
 *        drawn
 *
 * <span class="token keyword">@return</span> The view that is currently selected
 */</span>
<span class="token keyword">private</span> <span class="token class-name">View</span> <span class="token function">fillFromTop</span><span class="token punctuation">(</span><span class="token keyword">int</span> nextTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mFirstPosition <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>mFirstPosition<span class="token punctuation">,</span> mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mFirstPosition <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>mFirstPosition<span class="token punctuation">,</span> mItemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mFirstPosition <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mFirstPosition <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u8C03\u7528fillDown()\u65B9\u6CD5\u3002</span>
	<span class="token keyword">return</span> <span class="token function">fillDown</span><span class="token punctuation">(</span>mFirstPosition<span class="token punctuation">,</span> nextTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E00\u4E0B<code>fillDown()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Fills the list from pos down to the end of the list view.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">pos</span> The first position to put in the list
 *
 * <span class="token keyword">@param</span> <span class="token parameter">nextTop</span> The location where the top of the item associated with pos
 *        should be drawn
 *
 * <span class="token keyword">@return</span> The view that is currently selected, if it happens to be in the
 *         range that we draw.
 */</span>
<span class="token keyword">private</span> <span class="token class-name">View</span> <span class="token function">fillDown</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">int</span> nextTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">View</span> selectedView <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token punctuation">(</span>mBottom <span class="token operator">-</span> mTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		end <span class="token operator">-=</span> mListPadding<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u7528\u4E00\u4E2A\u5FAA\u73AF\u4E00\u76F4\u53BB\u586B\u5145\uFF0CnextTop\u4E0Eend\u7684\u6BD4\u8F83\u6765\u5224\u65AD\u662F\u5426\u8D85\u8FC7\u5F53\u524D\u5C4F\u5E55\u4E86\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48ListView\u5C31\u7B97\u6709\u4E00\u4E07\u6761\u6700\u5F00\u59CB\u8F7D\u5165\u4E5F\u4E0D\u5361\uFF0C\u56E0\u4E3A\u4ED6\u53EA\u521D\u59CB\u5316\u4E00\u5C4F\u554A\u3002</span>
	<span class="token comment">// \u4EE5\u540E\u90FD\u662F\u8FB9\u6ED1\u52A8\u8FB9\u663E\u793A\u554A\uFF0C\u8BF4\u5230\u8FD9\u91CC\u4E00\u4F1A\u6211\u4EEC\u8FD8\u8981\u770B\u4E00\u4E0B\u624B\u52BF\u90E8\u5206\u7684\u5904\u7406\u3002pos\u548CmItemCount\u7684\u6BD4\u8F83\u6765\u5224\u65AD\u5F53\u524D\u662F\u5426\u5DF2\u7ECF\u628A\u6240\u6709\u6761\u76EE\u586B\u5145\u5B8C</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>nextTop <span class="token operator">&lt;</span> end <span class="token operator">&amp;&amp;</span> pos <span class="token operator">&lt;</span> mItemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// is this the selected item?</span>
		<span class="token keyword">boolean</span> selected <span class="token operator">=</span> pos <span class="token operator">==</span> mSelectedPosition<span class="token punctuation">;</span>
		<span class="token comment">// \u8C03\u7528makeAndAddView\u65B9\u6CD5</span>
		<span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">makeAndAddView</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> nextTop<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> mListPadding<span class="token punctuation">.</span>left<span class="token punctuation">,</span> selected<span class="token punctuation">)</span><span class="token punctuation">;</span>

		nextTop <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> mDividerHeight<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			selectedView <span class="token operator">=</span> child<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		pos<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">setVisibleRangeHint</span><span class="token punctuation">(</span>mFirstPosition<span class="token punctuation">,</span> mFirstPosition <span class="token operator">+</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> selectedView<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B<code>makeAndAddView()</code>\u65B9\u6CD5\uFF0C\u6587\u6863\u91CC\u9762\u8BF4\u7684\u975E\u5E38\u6E05\u695A\u4E86:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Obtain the view and add it to our list of children. The view can be made
 * fresh, converted from an unused view, or used as is if it was in the
 * recycle bin.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">position</span> Logical position in the list
 * <span class="token keyword">@param</span> <span class="token parameter">y</span> Top or bottom edge of the view to add
 * <span class="token keyword">@param</span> <span class="token parameter">flow</span> If flow is true, align top edge to y. If false, align bottom
 *        edge to y.
 * <span class="token keyword">@param</span> <span class="token parameter">childrenLeft</span> Left edge where children should be positioned
 * <span class="token keyword">@param</span> <span class="token parameter">selected</span> Is this position selected?
 * <span class="token keyword">@return</span> View that was added
 */</span>
<span class="token keyword">private</span> <span class="token class-name">View</span> <span class="token function">makeAndAddView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">boolean</span> flow<span class="token punctuation">,</span> <span class="token keyword">int</span> childrenLeft<span class="token punctuation">,</span>
		<span class="token keyword">boolean</span> selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">View</span> child<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mDataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Try to use an existing view for this position</span>
		child <span class="token operator">=</span> mRecycler<span class="token punctuation">.</span><span class="token function">getActiveView</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Found it -- we&#39;re using an existing child</span>
			<span class="token comment">// This just needs to be positioned</span>
			<span class="token comment">// \u6700\u540E\u4E00\u4E2A\u53C2\u6570\u4E3Atrue\u8BF4\u660E\u662F\u590D\u7528\u7684</span>
			<span class="token function">setupChild</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> position<span class="token punctuation">,</span> y<span class="token punctuation">,</span> flow<span class="token punctuation">,</span> childrenLeft<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">return</span> child<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Make a new view for this position, or convert an unused view if possible</span>
	<span class="token comment">// \u4E00\u4F1A\u6211\u4EEC\u5148\u770B\u4E00\u4E0BobtainView\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5176\u5B9E\u5C31\u662F\u521B\u5EFA\u4E00\u4E2AchildView</span>
	<span class="token comment">// obtainView\u65B9\u6CD5\u4E2D\u4F1A\u66F4\u6539mIsScrap[0]\u7684\u503C\uFF0C\u4EE5\u4FBF\u4E0B\u9762setupChild()\u4E2D\u4F7F\u7528\u3002</span>
	child <span class="token operator">=</span> <span class="token function">obtainView</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> mIsScrap<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// This needs to be positioned and measured</span>
	<span class="token comment">// \u628AchildView\u6DFB\u52A0\u5230listview\u4E2D\uFF0C\u8FD9\u91CC\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u4F1A\u662Ffalse</span>
	<span class="token function">setupChild</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> position<span class="token punctuation">,</span> y<span class="token punctuation">,</span> flow<span class="token punctuation">,</span> childrenLeft<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> mIsScrap<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>makeAndAddView()</code>\u65B9\u6CD5\u91CC\u9762\u5C31\u662F\u901A\u8FC7<code>RecycleBin</code>\u6765\u590D\u7528<code>View</code>\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u53EF\u4EE5\u590D\u7528\u7684<code>View</code>\u65F6\u5C31\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u3002<br> \u90A3\u6211\u4EEC\u5C31\u5148\u770B\u4E00\u4E0B\`obtainView()\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u7684\u6CE8\u91CA\u5199\u7684\u975E\u5E38\u6E05\u695A\uFF0C\u8C37\u6B4C\u5927\u795E\u5199\u4EE3\u7801\u5C31\u662F\u89C4\u8303\uFF0C\u4E0D\u60F3\u67D0\u4E9B\u725B\u903C\u54C4\u54C4\u7684\u4EBA\u6574\u5929\u548B\u547C\u654F\u6377\u5F00\u53D1\uFF0C\u4E00\u4E2A\u6CE8\u91CA\u4E5F\u4E0D\u5199\uFF0C\u90A3\u80FD\u53EB\u654F\u6377\uFF1F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Get a view and have it show the data associated with the specified
 * position. This is called when we have already discovered that the view is
 * not available for reuse in the recycle bin. The only choices left are
 * converting an old view or making a new one.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">position</span> The position to display
 * <span class="token keyword">@param</span> <span class="token parameter">isScrap</span> Array of at least 1 boolean, the first entry will become true if
 *                the returned view was taken from the scrap heap, false if otherwise.
 *
 * <span class="token keyword">@return</span> A view displaying the data associated with the specified position
 */</span>
<span class="token class-name">View</span> <span class="token function">obtainView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> isScrap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token string">&quot;obtainView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	isScrap<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	<span class="token comment">// Check whether we have a transient state view. Attempt to re-bind the</span>
	<span class="token comment">// data and discard the view if we fail.</span>
	<span class="token keyword">final</span> <span class="token class-name">View</span> transientView <span class="token operator">=</span> mRecycler<span class="token punctuation">.</span><span class="token function">getTransientStateView</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>transientView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">LayoutParams</span> params <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutParams</span><span class="token punctuation">)</span> transientView<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// If the view type hasn&#39;t changed, attempt to re-bind the data.</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>viewType <span class="token operator">==</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> updatedView <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getView</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> transientView<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// If we failed to re-bind the data, scrap the obtained view.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>updatedView <span class="token operator">!=</span> transientView<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">setItemViewLayoutParams</span><span class="token punctuation">(</span>updatedView<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mRecycler<span class="token punctuation">.</span><span class="token function">addScrapView</span><span class="token punctuation">(</span>updatedView<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Scrap view implies temporary detachment.</span>
		isScrap<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> transientView<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token comment">// getScrapView()\u65B9\u6CD5\u4F1A\u4ECE\u5E9F\u5F03View\u7684\u7F13\u5B58\u4E2D\u53BB\u53D6\uFF0C\u4E00\u65E6View\u79FB\u9664\u4E86\u5C4F\u5E55\u5C31\u4F1A\u88AB\u52A0\u5230\u8BE5\u5E9F\u5F03\u7F13\u5B58\u4E2D\uFF0C\u6240\u4EE5\u4ED6\u5C31\u662F\u5F53View\u79FB\u9664\u5C4F\u5E55\u4E86\u5C31\u52A0\u5230\u8BE5\u7F13\u5B58\u4E2D</span>
	<span class="token comment">// \u663E\u793A\u7684\u65F6\u5019\u518D\u4ECE\u8BE5\u7F13\u5B58\u4E2D\u53D6\uFF0C\u5C31\u8FD9\u6837\u8FDB\u884C\u4E86\u590D\u7528\u3002</span>
	<span class="token keyword">final</span> <span class="token class-name">View</span> scrapView <span class="token operator">=</span> mRecycler<span class="token punctuation">.</span><span class="token function">getScrapView</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8C03\u7528Adapter.getView()\u65B9\u6CD5\u4E86\u3002\u5E76\u4E14\u5C06scrapView\u4F5C\u4E3Aconverview\u7684\u53C2\u6570\u4F20\u5165\u3002\u8FD9\u4E2A\u65B9\u6CD5\u90FD\u633A\u719F\uFF0C\u5C31\u4E0D\u8BF4\u4E86\u3002</span>
	<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getView</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> scrapView<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>scrapView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">!=</span> scrapView<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Failed to re-bind the data, return scrap to the heap.</span>
			mRecycler<span class="token punctuation">.</span><span class="token function">addScrapView</span><span class="token punctuation">(</span>scrapView<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			isScrap<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

			child<span class="token punctuation">.</span><span class="token function">dispatchFinishTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mCacheColorHint <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setDrawingCacheBackgroundColor</span><span class="token punctuation">(</span>mCacheColorHint<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getImportantForAccessibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> IMPORTANT_FOR_ACCESSIBILITY_AUTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setImportantForAccessibility</span><span class="token punctuation">(</span>IMPORTANT_FOR_ACCESSIBILITY_YES<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u8BBE\u7F6E\u8BE5view\u7684layoutparams</span>
	<span class="token function">setItemViewLayoutParams</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AccessibilityManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAccessibilityDelegate <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mAccessibilityDelegate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListItemAccessibilityDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getAccessibilityDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			child<span class="token punctuation">.</span><span class="token function">setAccessibilityDelegate</span><span class="token punctuation">(</span>mAccessibilityDelegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\u6211\u4EEC\u5C31\u628A<code>obtainView()</code>\u65B9\u6CD5\u90FD\u770B\u5B8C\u4E86\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u518D\u770B\u4E00\u4E0B<code>setupChild()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Add a view as a child and make sure it is measured (if necessary) and
 * positioned properly.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">child</span> The view to add
 * <span class="token keyword">@param</span> <span class="token parameter">position</span> The position of this child
 * <span class="token keyword">@param</span> <span class="token parameter">y</span> The y position relative to which this view will be positioned
 * <span class="token keyword">@param</span> <span class="token parameter">flowDown</span> If true, align top edge to y. If false, align bottom
 *        edge to y.
 * <span class="token keyword">@param</span> <span class="token parameter">childrenLeft</span> Left edge where children should be positioned
 * <span class="token keyword">@param</span> <span class="token parameter">selected</span> Is this position selected?
 * <span class="token keyword">@param</span> <span class="token parameter">recycled</span> Has this view been pulled from the recycle bin? If so it
 *        does not need to be remeasured.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setupChild</span><span class="token punctuation">(</span><span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">boolean</span> flowDown<span class="token punctuation">,</span> <span class="token keyword">int</span> childrenLeft<span class="token punctuation">,</span>
		<span class="token keyword">boolean</span> selected<span class="token punctuation">,</span> <span class="token keyword">boolean</span> recycled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token string">&quot;setupListItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> isSelected <span class="token operator">=</span> selected <span class="token operator">&amp;&amp;</span> <span class="token function">shouldShowSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> updateChildSelected <span class="token operator">=</span> isSelected <span class="token operator">!=</span> child<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> mode <span class="token operator">=</span> mTouchMode<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> isPressed <span class="token operator">=</span> mode <span class="token operator">&gt;</span> TOUCH_MODE_DOWN <span class="token operator">&amp;&amp;</span> mode <span class="token operator">&lt;</span> TOUCH_MODE_SCROLL <span class="token operator">&amp;&amp;</span>
			mMotionPosition <span class="token operator">==</span> position<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> updateChildPressed <span class="token operator">=</span> isPressed <span class="token operator">!=</span> child<span class="token punctuation">.</span><span class="token function">isPressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> needToMeasure <span class="token operator">=</span> <span class="token operator">!</span>recycled <span class="token operator">||</span> updateChildSelected <span class="token operator">||</span> child<span class="token punctuation">.</span><span class="token function">isLayoutRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Respect layout params that are already in the view. Otherwise make some up...</span>
	<span class="token comment">// noinspection unchecked</span>
	<span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> <span class="token function">generateDefaultLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u8FD9\u91CC\u5C31\u662FAdapter\u4E2DgetItemViewType\u7684\u8C03\u7528\u5904</span>
	p<span class="token punctuation">.</span>viewType <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>recycled <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>p<span class="token punctuation">.</span>forceAdd<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>recycledHeaderFooter <span class="token operator">&amp;&amp;</span>
			p<span class="token punctuation">.</span>viewType <span class="token operator">==</span> <span class="token class-name">AdapterView</span><span class="token punctuation">.</span>ITEM_VIEW_TYPE_HEADER_OR_FOOTER<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u590D\u7528\u7684\u6216\u8005headerView\u53CAfooterView\u7B49\u8C03\u7528attachViewToParent\u65B9\u6CD5\uFF0C\u628A\u4E4B\u524Ddetach\u7684View\u91CD\u65B0attach\u5230ViewGroup\u4E0A</span>
		<span class="token function">attachViewToParent</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> flowDown <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		p<span class="token punctuation">.</span>forceAdd <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>viewType <span class="token operator">==</span> <span class="token class-name">AdapterView</span><span class="token punctuation">.</span>ITEM_VIEW_TYPE_HEADER_OR_FOOTER<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span>recycledHeaderFooter <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u7B2C\u4E00\u6B21\u90FD\u662F\u901A\u8FC7\u8BE5\u65B9\u6CD5\u6765\u628AView\u6DFB\u52A0\u5230ViewGroup\u4E2D</span>
		<span class="token function">addViewInLayout</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> flowDown <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>updateChildSelected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span>isSelected<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>updateChildPressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setPressed</span><span class="token punctuation">(</span>isPressed<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mChoiceMode <span class="token operator">!=</span> CHOICE_MODE_NONE <span class="token operator">&amp;&amp;</span> mCheckStates <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token keyword">instanceof</span> <span class="token class-name">Checkable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Checkable</span><span class="token punctuation">)</span> child<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span>mCheckStates<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>targetSdkVersion
				<span class="token operator">&gt;=</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Build</span><span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>HONEYCOMB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			child<span class="token punctuation">.</span><span class="token function">setActivated</span><span class="token punctuation">(</span>mCheckStates<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>needToMeasure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> childWidthSpec <span class="token operator">=</span> <span class="token class-name">ViewGroup</span><span class="token punctuation">.</span><span class="token function">getChildMeasureSpec</span><span class="token punctuation">(</span>mWidthMeasureSpec<span class="token punctuation">,</span>
				mListPadding<span class="token punctuation">.</span>left <span class="token operator">+</span> mListPadding<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> lpHeight <span class="token operator">=</span> p<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
		<span class="token keyword">int</span> childHeightSpec<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>lpHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			childHeightSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>lpHeight<span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			childHeightSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>UNSPECIFIED<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		child<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>childWidthSpec<span class="token punctuation">,</span> childHeightSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">cleanupLayoutState</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> w <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> h <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> childTop <span class="token operator">=</span> flowDown <span class="token operator">?</span> y <span class="token operator">:</span> y <span class="token operator">-</span> h<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>needToMeasure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childRight <span class="token operator">=</span> childrenLeft <span class="token operator">+</span> w<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childBottom <span class="token operator">=</span> childTop <span class="token operator">+</span> h<span class="token punctuation">;</span>
		child<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>childrenLeft<span class="token punctuation">,</span> childTop<span class="token punctuation">,</span> childRight<span class="token punctuation">,</span> childBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">offsetLeftAndRight</span><span class="token punctuation">(</span>childrenLeft <span class="token operator">-</span> child<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		child<span class="token punctuation">.</span><span class="token function">offsetTopAndBottom</span><span class="token punctuation">(</span>childTop <span class="token operator">-</span> child<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mCachingStarted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>child<span class="token punctuation">.</span><span class="token function">isDrawingCacheEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setDrawingCacheEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>recycled <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span>child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scrappedFromPosition<span class="token punctuation">)</span>
			<span class="token operator">!=</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">jumpDrawablesToCurrentState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u5206\u6790\u6211\u4EEC\u770B\u5230\u6838\u5FC3\u7684\u90E8\u5206\u5C31\u662F<code>attachViewToParent()</code>\u65B9\u6CD5\u548C<code>addViewInLayout()</code>\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u90FD\u662F\u7236\u7C7B<code>ViewGroup</code>\u4E2D\u7684\u65B9\u6CD5\uFF0C \u6211\u4EEC\u5206\u522B\u6765\u770B\u4E00\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Attaches a view to this view group. Attaching a view assigns this group as the parent,
 * sets the layout parameters and puts the view in the list of children so that
 * it can be retrieved by calling <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * This method is intended to be lightweight and makes no assumptions about whether the
 * parent or child should be redrawn. Proper use of this method will include also making
 * any appropriate <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> or <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> calls.
 * For example, callers can <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span><span class="token punctuation">)</span></span> post<span class="token punctuation">}</span> a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Runnable</span></span><span class="token punctuation">}</span>
 * which performs a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> on the next frame, after all detach/attach
 * calls are finished, causing layout to be run prior to redrawing the view hierarchy.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * This method should be called only for views which were detached from their parent.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">child</span> the child to attach
 * <span class="token keyword">@param</span> <span class="token parameter">index</span> the index at which the child should be attached
 * <span class="token keyword">@param</span> <span class="token parameter">params</span> the layout parameters of the child
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">removeDetachedView</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">detachAllViewsFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">detachViewFromParent</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">detachViewFromParent</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span></span>
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">attachViewToParent</span><span class="token punctuation">(</span><span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">LayoutParams</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	child<span class="token punctuation">.</span>mLayoutParams <span class="token operator">=</span> params<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		index <span class="token operator">=</span> mChildrenCount<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">// \u628A\u8BE5view\u6DFB\u52A0\u5230\u6570\u7EC4\u4E2D\uFF0C\u5C31\u50CF\u6CE8\u91CA\u6240\u8BF4\u7684\u4E3A\u4E86\u80FD\u591F\u8BA9\`getChildAt()\`\u65B9\u6CD5\u80FD\u83B7\u53D6\u5230\u3002</span>
	<span class="token function">addInArray</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

	child<span class="token punctuation">.</span>mParent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
	child<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">=</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token operator">~</span>PFLAG_DIRTY_MASK
					<span class="token operator">&amp;</span> <span class="token operator">~</span>PFLAG_DRAWING_CACHE_VALID<span class="token punctuation">)</span>
			<span class="token operator">|</span> PFLAG_DRAWN <span class="token operator">|</span> PFLAG_INVALIDATED<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>mPrivateFlags <span class="token operator">|=</span> PFLAG_INVALIDATED<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">requestChildFocus</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> child<span class="token punctuation">.</span><span class="token function">findFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u590D\u7528\u7684\u5904\u7406\u770B\u5B8C\u540E\uFF0C\u6211\u4EEC\u770B\u4E00\u4E0B\u65B0\u521B\u5EFA\u7684childView\u5982\u4F55\u88AB\u6DFB\u52A0\u5230ListView\u4E0A\uFF0C\u6211\u4EEC\u770B\u4E00\u4E0B<code>addViewInLayout()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Adds a view during layout. This is useful if in your onLayout() method,
 * you need to add more views (as does the list view for example).
 *
 * If index is negative, it means put it at the end of the list.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">child</span> the view to add to the group
 * <span class="token keyword">@param</span> <span class="token parameter">index</span> the index at which the child must be added
 * <span class="token keyword">@param</span> <span class="token parameter">params</span> the layout parameters to associate with the child
 * <span class="token keyword">@param</span> <span class="token parameter">preventRequestLayout</span> if true, calling this method will not trigger a
 *        layout request on child
 * <span class="token keyword">@return</span> true if the child was added, false otherwise
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">addViewInLayout</span><span class="token punctuation">(</span><span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">LayoutParams</span> params<span class="token punctuation">,</span>
		<span class="token keyword">boolean</span> preventRequestLayout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot add a null child view to a ViewGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	child<span class="token punctuation">.</span>mParent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u6700\u7EC8\u4F1A\u8C03\u7528addView\u65B9\u6CD5\u6DFB\u52A0childView</span>
	<span class="token function">addViewInner</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> index<span class="token punctuation">,</span> params<span class="token punctuation">,</span> preventRequestLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>
	child<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">=</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token operator">~</span>PFLAG_DIRTY_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> PFLAG_DRAWN<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\u5DF2\u7ECF\u628A\u4E0A\u9762<code>fillFromTop()</code>\u65B9\u6CD5\u7684\u90E8\u5206\u90FD\u5206\u6790\u5B8C\u4E86\u3002<br> \u4E0D\u8981\u5FD8\u4E86\u6211\u4EEC\u4E0A\u9762\u8FD8\u7559\u4E86\u4E00\u4E2ATODO\u7684\u90E8\u5206\uFF0C\u5C31\u662F\u5BF9\u4E8E\u5DF2\u7ECF\u6709\u6570\u636E\u7684\u90E8\u5206\u8C03\u7528<code>fillSpecific()</code>\u65B9\u6CD5\uFF0C\u90A3\u6211\u4EEC\u5C31\u770B\u4E00\u4E0B\u4ED6\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Put a specific item at a specific location on the screen and then build
 * up and down from there.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">position</span> The reference view to use as the starting point
 * <span class="token keyword">@param</span> <span class="token parameter">top</span> Pixel offset from the top of this view to the top of the
 *        reference view.
 *
 * <span class="token keyword">@return</span> The selected view, or null if the selected view is outside the
 *         visible area.
 */</span>
<span class="token keyword">private</span> <span class="token class-name">View</span> <span class="token function">fillSpecific</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">boolean</span> tempIsSelected <span class="token operator">=</span> position <span class="token operator">==</span> mSelectedPosition<span class="token punctuation">;</span>
	<span class="token class-name">View</span> temp <span class="token operator">=</span> <span class="token function">makeAndAddView</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> top<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> mListPadding<span class="token punctuation">.</span>left<span class="token punctuation">,</span> tempIsSelected<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Possibly changed again in fillUp if we add rows above this one.</span>
	mFirstPosition <span class="token operator">=</span> position<span class="token punctuation">;</span>

	<span class="token class-name">View</span> above<span class="token punctuation">;</span>
	<span class="token class-name">View</span> below<span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> dividerHeight <span class="token operator">=</span> mDividerHeight<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mStackFromBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		above <span class="token operator">=</span> <span class="token function">fillUp</span><span class="token punctuation">(</span>position <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> dividerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// This will correct for the top of the first view not touching the top of the list</span>
		<span class="token function">adjustViewsUpOrDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		below <span class="token operator">=</span> <span class="token function">fillDown</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> dividerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> childCount <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>childCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">correctTooHigh</span><span class="token punctuation">(</span>childCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		below <span class="token operator">=</span> <span class="token function">fillDown</span><span class="token punctuation">(</span>position <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> dividerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// This will correct for the bottom of the last view not touching the bottom of the list</span>
		<span class="token function">adjustViewsUpOrDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		above <span class="token operator">=</span> <span class="token function">fillUp</span><span class="token punctuation">(</span>position <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> dividerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> childCount <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>childCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			 <span class="token function">correctTooLow</span><span class="token punctuation">(</span>childCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>tempIsSelected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> temp<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>above <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> above<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> below<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C31\u50CF\u6CE8\u91CA\u6240\u8BF4\u7684\u5B83\u662F\u8BA9\u6307\u5B9A\u4F4D\u7F6E\u7684View\u5148\u52A0\u8F7D\u5230\u5C4F\u5E55\u4E0A\uFF0C\u7136\u540E\u5728\u52A0\u8F7D\u8BE5view\u5F80\u4E0A\u4EE5\u53CA\u5F80\u4E0B\u4F4D\u7F6E\u7684\u5176\u4ED6View\uFF0C\u4ED6\u91CC\u9762\u4F1A\u8C03\u7528<code>fillUp()</code>\u548C<code>fillDown()</code>\u65B9\u6CD5\uFF0C\u53C8\u4F1A\u8D70\u4E0A\u9762\u7684\u6D41\u7A0B\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5C31\u4E0D\u5206\u6790\u4E86\u3002</p><p>\u597D\u4E86\uFF0C\u5230\u8FD9\u91CC\u6211\u4EEC\u5C31\u57FA\u672C\u5DF2\u7ECF\u5206\u6790\u5B8C\u4E86\uFF0C\u4F46\u662F\u611F\u89C9\u597D\u50CF\u597D\u5C11\u4E86\u70B9\u4EC0\u4E48\uFF1F</p><p>\u8FD9\u91CC\u5C11\u4E86\u4E0D\u662F\u4E00\u70B9\uFF0C\u662F\u4E24\u70B9:</p><ul><li>\u624B\u52BF\u6ED1\u52A8\u8FC7\u7A0B\u4E2DListView\u7684\u590D\u7528\u5904\u7406</li><li>RecycleBin\u4E2D\u590D\u7528\u7684\u5177\u4F53\u5B9E\u73B0</li></ul>`,36),k=s("\u4E00\u4E2A\u4E2A\u7684\u6765\uFF0C\u5148\u770B\u4E00\u4E0B\u624B\u52BF\u6ED1\u52A8\u90E8\u5206\uFF0C\u8FD9\u4E2A\u5F53\u7136\u662F\u4ECE"),r=n("code",null,"onTouchEvent()",-1),d=s("\u65B9\u6CD5\u770B\u4E86\uFF0C"),v=n("br",null,null,-1),m=s(" \u624B\u52BF\u8FD9\u4E00\u5757\u4E0D\u592A\u6E05\u695A\u7684\u53EF\u4EE5\u770B\u6211\u4E4B\u524D\u7684\u4E00\u7BC7\u6587\u7AE0 "),b={href:"https://github.com/CharonChui/AndroidNote/blob/master/Android%E5%8A%A0%E5%BC%BA/Android%20Touch%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E8%AF%A6%E8%A7%A3.md",target:"_blank",rel:"noopener noreferrer"},w=s("Android Touch\u4E8B\u4EF6\u5206\u53D1\u8BE6\u89E3"),y=a(`<p>\u53D1\u73B0<code>ListView</code>\u6CA1\u6709\u91CD\u5199<code>onTouchEvent()</code>\u65B9\u6CD5\uFF0C\u8FD9\u4E5F\u597D\u7406\u89E3\uFF0C\u56E0\u4E3A<code>GridView</code>\u4E5F\u6709\u7C7B\u4F3C\u7684\u6ED1\u52A8\u529F\u80FD\uFF0C\u6240\u4EE5\u53BB\u7236\u7C7B<code>AbsListView</code>\u4E2D\u770B.<br> \u6211\u4EEC\u770B\u4E00\u4E0B<code>AbsListView.onTouchEvent()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// A disabled view that is clickable still consumes the touch</span>
		<span class="token comment">// events, it just doesn&#39;t respond to them.</span>
		<span class="token keyword">return</span> <span class="token function">isClickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isLongClickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mPositionScroller <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mPositionScroller<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mIsDetaching <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Something isn&#39;t right.</span>
		<span class="token comment">// Since we rely on being attached to get data set change notifications,</span>
		<span class="token comment">// don&#39;t risk doing anything where we might try to resync and find things</span>
		<span class="token comment">// in a bogus state.</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">startNestedScroll</span><span class="token punctuation">(</span>SCROLL_AXIS_VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mFastScroll <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> intercepted <span class="token operator">=</span> mFastScroll<span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>intercepted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token function">initVelocityTrackerIfNotExists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">MotionEvent</span> vtev <span class="token operator">=</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> actionMasked <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">getActionMasked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>actionMasked <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mNestedYOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	vtev<span class="token punctuation">.</span><span class="token function">offsetLocation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mNestedYOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span>actionMasked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_DOWN<span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">onTouchDown</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_MOVE<span class="token operator">:</span> <span class="token punctuation">{</span>
		    <span class="token comment">// \u5177\u4F53\u79FB\u52A8\u7684\u90E8\u5206\u5C31\u5728\u8FD9\u91CC\u4E86</span>
			<span class="token function">onTouchMove</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span> vtev<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_UP<span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">onTouchUp</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_CANCEL<span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">onTouchCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_POINTER_UP<span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">onSecondaryPointerUp</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> x <span class="token operator">=</span> mMotionX<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> y <span class="token operator">=</span> mMotionY<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> motionPosition <span class="token operator">=</span> <span class="token function">pointToPosition</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>motionPosition <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Remember where the motion event started</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>motionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMotionViewOriginalTop <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMotionPosition <span class="token operator">=</span> motionPosition<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mLastY <span class="token operator">=</span> y<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_POINTER_DOWN<span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token comment">// New pointers take over dragging duties</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> index <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">getActionIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> id <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ev<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ev<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mMotionCorrection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			mActivePointerId <span class="token operator">=</span> id<span class="token punctuation">;</span>
			mMotionX <span class="token operator">=</span> x<span class="token punctuation">;</span>
			mMotionY <span class="token operator">=</span> y<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> motionPosition <span class="token operator">=</span> <span class="token function">pointToPosition</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>motionPosition <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Remember where the motion event started</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>motionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMotionViewOriginalTop <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMotionPosition <span class="token operator">=</span> motionPosition<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mLastY <span class="token operator">=</span> y<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mVelocityTracker <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mVelocityTracker<span class="token punctuation">.</span><span class="token function">addMovement</span><span class="token punctuation">(</span>vtev<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	vtev<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u770B\u4E00\u4E0B<code>onTouchMove()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onTouchMove</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> vtev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> pointerIndex <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">findPointerIndex</span><span class="token punctuation">(</span>mActivePointerId<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>pointerIndex <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		pointerIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		mActivePointerId <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>pointerIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mDataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Re-sync everything if data has been changed</span>
		<span class="token comment">// since the scroll operation can query the adapter.</span>
		<span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ev<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>pointerIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">switch</span> <span class="token punctuation">(</span>mTouchMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> TOUCH_MODE_DOWN<span class="token operator">:</span>
		<span class="token keyword">case</span> TOUCH_MODE_TAP<span class="token operator">:</span>
		<span class="token keyword">case</span> TOUCH_MODE_DONE_WAITING<span class="token operator">:</span>
			<span class="token comment">// Check if we have moved far enough that it looks more like a</span>
			<span class="token comment">// scroll than a tap. If so, we&#39;ll enter scrolling mode.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">startScrollIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ev<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>pointerIndex<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> vtev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// Otherwise, check containment within list bounds. If we&#39;re</span>
			<span class="token comment">// outside bounds, cancel any active presses.</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> motionView <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>mMotionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">float</span> x <span class="token operator">=</span> ev<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>pointerIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">pointInView</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> mTouchSlop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>motionView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					motionView<span class="token punctuation">.</span><span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token function">removeCallbacks</span><span class="token punctuation">(</span>mTouchMode <span class="token operator">==</span> TOUCH_MODE_DOWN <span class="token operator">?</span>
						mPendingCheckForTap <span class="token operator">:</span> mPendingCheckForLongPress<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mTouchMode <span class="token operator">=</span> TOUCH_MODE_DONE_WAITING<span class="token punctuation">;</span>
				<span class="token function">updateSelectorState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>motionView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Still within bounds, update the hotspot.</span>
				<span class="token keyword">final</span> <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> point <span class="token operator">=</span> mTmpPoint<span class="token punctuation">;</span>
				point<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
				point<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>
				<span class="token function">transformPointToViewLocal</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> motionView<span class="token punctuation">)</span><span class="token punctuation">;</span>
				motionView<span class="token punctuation">.</span><span class="token function">drawableHotspotChanged</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> point<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>

		<span class="token keyword">case</span> TOUCH_MODE_SCROLL<span class="token operator">:</span>
		<span class="token keyword">case</span> TOUCH_MODE_OVERSCROLL<span class="token operator">:</span>
			<span class="token comment">// \u6ED1\u52A8\u90E8\u5206\u7684\u5904\u7406\uFF0C\u4F20\u5165\u5F53\u524D\u4F4D\u7F6E\u7684x,y\u5750\u6807</span>
			<span class="token function">scrollIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ev<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>pointerIndex<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> vtev<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u770B\u4E00\u4E0B<code>scrollIfNeeded()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">scrollIfNeeded</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> vtev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> rawDeltaY <span class="token operator">=</span> y <span class="token operator">-</span> mMotionY<span class="token punctuation">;</span>
	<span class="token keyword">int</span> scrollOffsetCorrection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> scrollConsumedCorrection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mLastY <span class="token operator">==</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		rawDeltaY <span class="token operator">-=</span> mMotionCorrection<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchNestedPreScroll</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mLastY <span class="token operator">!=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">?</span> mLastY <span class="token operator">-</span> y <span class="token operator">:</span> <span class="token operator">-</span>rawDeltaY<span class="token punctuation">,</span>
			mScrollConsumed<span class="token punctuation">,</span> mScrollOffset<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		rawDeltaY <span class="token operator">+=</span> mScrollConsumed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		scrollOffsetCorrection <span class="token operator">=</span> <span class="token operator">-</span>mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		scrollConsumedCorrection <span class="token operator">=</span> mScrollConsumed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>vtev <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			vtev<span class="token punctuation">.</span><span class="token function">offsetLocation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			mNestedYOffset <span class="token operator">+=</span> mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> deltaY <span class="token operator">=</span> rawDeltaY<span class="token punctuation">;</span>
	<span class="token keyword">int</span> incrementalDeltaY <span class="token operator">=</span>
			mLastY <span class="token operator">!=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">?</span> y <span class="token operator">-</span> mLastY <span class="token operator">+</span> scrollConsumedCorrection <span class="token operator">:</span> deltaY<span class="token punctuation">;</span>
	<span class="token keyword">int</span> lastYCorrection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mTouchMode <span class="token operator">==</span> TOUCH_MODE_SCROLL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>PROFILE_SCROLLING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mScrollProfilingStarted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">Debug</span><span class="token punctuation">.</span><span class="token function">startMethodTracing</span><span class="token punctuation">(</span><span class="token string">&quot;AbsListViewScroll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mScrollProfilingStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mScrollStrictSpan <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// If it&#39;s non-null, we&#39;re already in a scroll.</span>
			mScrollStrictSpan <span class="token operator">=</span> <span class="token class-name">StrictMode</span><span class="token punctuation">.</span><span class="token function">enterCriticalSpan</span><span class="token punctuation">(</span><span class="token string">&quot;AbsListView-scroll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">!=</span> mLastY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u79FB\u52A8\u4E86</span>
			<span class="token comment">// We may be here after stopping a fling and continuing to scroll.</span>
			<span class="token comment">// If so, we haven&#39;t disallowed intercepting touch events yet.</span>
			<span class="token comment">// Make sure that we do so in case we&#39;re in a parent that can intercept.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> FLAG_DISALLOW_INTERCEPT<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
					<span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>rawDeltaY<span class="token punctuation">)</span> <span class="token operator">&gt;</span> mTouchSlop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">ViewParent</span> parent <span class="token operator">=</span> <span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					parent<span class="token punctuation">.</span><span class="token function">requestDisallowInterceptTouchEvent</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">final</span> <span class="token keyword">int</span> motionIndex<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mMotionPosition <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				motionIndex <span class="token operator">=</span> mMotionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// If we don&#39;t have a motion position that we can reliably track,</span>
				<span class="token comment">// pick something in the middle to make a best guess at things below.</span>
				motionIndex <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">int</span> motionViewPrevTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token class-name">View</span> motionView <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>motionIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>motionView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				motionViewPrevTop <span class="token operator">=</span> motionView<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// No need to do all this work if we&#39;re not going to move anyway</span>
			<span class="token keyword">boolean</span> atEdge <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>incrementalDeltaY <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			    <span class="token comment">// \u79FB\u52A8\u7684\u8FC7\u7A0B\u4E2D\u4E0D\u65AD\u8C03\u7528</span>
				atEdge <span class="token operator">=</span> <span class="token function">trackMotionScroll</span><span class="token punctuation">(</span>deltaY<span class="token punctuation">,</span> incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Check to see if we have bumped into the scroll limit</span>
			motionView <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>motionIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>motionView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Check if the top of the motion view is where it is</span>
				<span class="token comment">// supposed to be</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> motionViewRealTop <span class="token operator">=</span> motionView<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>atEdge<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Apply overscroll</span>

					<span class="token keyword">int</span> overscroll <span class="token operator">=</span> <span class="token operator">-</span>incrementalDeltaY <span class="token operator">-</span>
							<span class="token punctuation">(</span>motionViewRealTop <span class="token operator">-</span> motionViewPrevTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchNestedScroll</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> overscroll <span class="token operator">-</span> incrementalDeltaY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> overscroll<span class="token punctuation">,</span>
							mScrollOffset<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						lastYCorrection <span class="token operator">-=</span> mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>vtev <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							vtev<span class="token punctuation">.</span><span class="token function">offsetLocation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							mNestedYOffset <span class="token operator">+=</span> mScrollOffset<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
						<span class="token keyword">final</span> <span class="token keyword">boolean</span> atOverscrollEdge <span class="token operator">=</span> <span class="token function">overScrollBy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> overscroll<span class="token punctuation">,</span>
								<span class="token number">0</span><span class="token punctuation">,</span> mScrollY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mOverscrollDistance<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

						<span class="token keyword">if</span> <span class="token punctuation">(</span>atOverscrollEdge <span class="token operator">&amp;&amp;</span> mVelocityTracker <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token comment">// Don&#39;t allow overfling if we&#39;re at the edge</span>
							mVelocityTracker<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>

						<span class="token keyword">final</span> <span class="token keyword">int</span> overscrollMode <span class="token operator">=</span> <span class="token function">getOverScrollMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>overscrollMode <span class="token operator">==</span> OVER_SCROLL_ALWAYS <span class="token operator">||</span>
								<span class="token punctuation">(</span>overscrollMode <span class="token operator">==</span> OVER_SCROLL_IF_CONTENT_SCROLLS <span class="token operator">&amp;&amp;</span>
										<span class="token operator">!</span><span class="token function">contentFits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>atOverscrollEdge<span class="token punctuation">)</span> <span class="token punctuation">{</span>
								mDirection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Reset when entering overscroll.</span>
								mTouchMode <span class="token operator">=</span> TOUCH_MODE_OVERSCROLL<span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
							<span class="token keyword">if</span> <span class="token punctuation">(</span>incrementalDeltaY <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">onPull</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token operator">-</span>overscroll <span class="token operator">/</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
										<span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> x <span class="token operator">/</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
									mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">onRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token punctuation">}</span>
								<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
										mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">getMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>incrementalDeltaY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">onPull</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> overscroll <span class="token operator">/</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
										<span class="token number">1.f</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> x <span class="token operator">/</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
									mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">onRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token punctuation">}</span>
								<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
										mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">getMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
										<span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
				mMotionY <span class="token operator">=</span> y <span class="token operator">+</span> lastYCorrection <span class="token operator">+</span> scrollOffsetCorrection<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mLastY <span class="token operator">=</span> y <span class="token operator">+</span> lastYCorrection <span class="token operator">+</span> scrollOffsetCorrection<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mTouchMode <span class="token operator">==</span> TOUCH_MODE_OVERSCROLL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u7070\u8D77\u4E86.</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">!=</span> mLastY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> oldScroll <span class="token operator">=</span> mScrollY<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> newScroll <span class="token operator">=</span> oldScroll <span class="token operator">-</span> incrementalDeltaY<span class="token punctuation">;</span>
			<span class="token keyword">int</span> newDirection <span class="token operator">=</span> y <span class="token operator">&gt;</span> mLastY <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>mDirection <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mDirection <span class="token operator">=</span> newDirection<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">int</span> overScrollDistance <span class="token operator">=</span> <span class="token operator">-</span>incrementalDeltaY<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newScroll <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> oldScroll <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>newScroll <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> oldScroll <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				overScrollDistance <span class="token operator">=</span> <span class="token operator">-</span>oldScroll<span class="token punctuation">;</span>
				incrementalDeltaY <span class="token operator">+=</span> overScrollDistance<span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				incrementalDeltaY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>overScrollDistance <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">overScrollBy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> overScrollDistance<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mScrollY<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
						<span class="token number">0</span><span class="token punctuation">,</span> mOverscrollDistance<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> overscrollMode <span class="token operator">=</span> <span class="token function">getOverScrollMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>overscrollMode <span class="token operator">==</span> OVER_SCROLL_ALWAYS <span class="token operator">||</span>
						<span class="token punctuation">(</span>overscrollMode <span class="token operator">==</span> OVER_SCROLL_IF_CONTENT_SCROLLS <span class="token operator">&amp;&amp;</span>
								<span class="token operator">!</span><span class="token function">contentFits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>rawDeltaY <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">onPull</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> overScrollDistance <span class="token operator">/</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								<span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> x <span class="token operator">/</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">onRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">getMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rawDeltaY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">onPull</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> overScrollDistance <span class="token operator">/</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								<span class="token number">1.f</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> x <span class="token operator">/</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							mEdgeGlowTop<span class="token punctuation">.</span><span class="token function">onRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
								mEdgeGlowBottom<span class="token punctuation">.</span><span class="token function">getMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								<span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>incrementalDeltaY <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Coming back to &#39;real&#39; list scrolling</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mScrollY <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mScrollY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
					<span class="token function">invalidateParentIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token comment">// \u7EE7\u7EED\u5904\u7406\u7740</span>
				<span class="token function">trackMotionScroll</span><span class="token punctuation">(</span>incrementalDeltaY<span class="token punctuation">,</span> incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>

				mTouchMode <span class="token operator">=</span> TOUCH_MODE_SCROLL<span class="token punctuation">;</span>

				<span class="token comment">// We did not scroll the full amount. Treat this essentially like the</span>
				<span class="token comment">// start of a new touch scroll</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> motionPosition <span class="token operator">=</span> <span class="token function">findClosestMotionRow</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>

				mMotionCorrection <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
				<span class="token class-name">View</span> motionView <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>motionPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMotionViewOriginalTop <span class="token operator">=</span> motionView <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> motionView<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
				mMotionY <span class="token operator">=</span>  y <span class="token operator">+</span> scrollOffsetCorrection<span class="token punctuation">;</span>
				mMotionPosition <span class="token operator">=</span> motionPosition<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mLastY <span class="token operator">=</span> y <span class="token operator">+</span> lastYCorrection <span class="token operator">+</span> scrollOffsetCorrection<span class="token punctuation">;</span>
			mDirection <span class="token operator">=</span> newDirection<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u90E8\u5206\u4EE3\u7801\u903B\u8F91\u7275\u626F\u592A\u591A\uFF0C\u6709\u70B9\u6655\u547C\u547C\u7684\uFF0C\u8BB0\u7740\u770B\u4E00\u4E0B<code>trackMotionScroll()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Track a motion scroll
 *
 * <span class="token keyword">@param</span> <span class="token parameter">deltaY</span> Amount to offset mMotionView. This is the accumulated delta since the motion
 *        began. Positive numbers mean the user&#39;s finger is moving down the screen.
 * <span class="token keyword">@param</span> <span class="token parameter">incrementalDeltaY</span> Change in deltaY from the previous event. \u901A\u8FC7\u5B83\u7684\u6B63\u8D1F\u6765\u5224\u65AD\u662F\u5411\u4E0A\u8FD8\u662F\u5411\u4E0B\u3002
 * <span class="token keyword">@return</span> true if we&#39;re already at the beginning/end of the list and have nothing to do.
 */</span>
<span class="token keyword">boolean</span> <span class="token function">trackMotionScroll</span><span class="token punctuation">(</span><span class="token keyword">int</span> deltaY<span class="token punctuation">,</span> <span class="token keyword">int</span> incrementalDeltaY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> childCount <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>childCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> firstTop <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> lastBottom <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>childCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token class-name">Rect</span> listPadding <span class="token operator">=</span> mListPadding<span class="token punctuation">;</span>

	<span class="token comment">// &quot;effective padding&quot; In this case is the amount of padding that affects</span>
	<span class="token comment">// how much space should not be filled by items. If we don&#39;t clip to padding</span>
	<span class="token comment">// there is no effective padding.</span>
	<span class="token keyword">int</span> effectivePaddingTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> effectivePaddingBottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		effectivePaddingTop <span class="token operator">=</span> listPadding<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
		effectivePaddingBottom <span class="token operator">=</span> listPadding<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	 <span class="token comment">// FIXME account for grid vertical spacing too?</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> spaceAbove <span class="token operator">=</span> effectivePaddingTop <span class="token operator">-</span> firstTop<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> effectivePaddingBottom<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> spaceBelow <span class="token operator">=</span> lastBottom <span class="token operator">-</span> end<span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mPaddingBottom <span class="token operator">-</span> mPaddingTop<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>deltaY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		deltaY <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> deltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		deltaY <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> deltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>incrementalDeltaY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		incrementalDeltaY <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		incrementalDeltaY <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> firstPosition <span class="token operator">=</span> mFirstPosition<span class="token punctuation">;</span>

	<span class="token comment">// Update our guesses for where the first and last views are</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>firstPosition <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mFirstPositionDistanceGuess <span class="token operator">=</span> firstTop <span class="token operator">-</span> listPadding<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		mFirstPositionDistanceGuess <span class="token operator">+=</span> incrementalDeltaY<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>firstPosition <span class="token operator">+</span> childCount <span class="token operator">==</span> mItemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mLastPositionDistanceGuess <span class="token operator">=</span> lastBottom <span class="token operator">+</span> listPadding<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		mLastPositionDistanceGuess <span class="token operator">+=</span> incrementalDeltaY<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> cannotScrollDown <span class="token operator">=</span> <span class="token punctuation">(</span>firstPosition <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
			firstTop <span class="token operator">&gt;=</span> listPadding<span class="token punctuation">.</span>top <span class="token operator">&amp;&amp;</span> incrementalDeltaY <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> cannotScrollUp <span class="token operator">=</span> <span class="token punctuation">(</span>firstPosition <span class="token operator">+</span> childCount <span class="token operator">==</span> mItemCount <span class="token operator">&amp;&amp;</span>
			lastBottom <span class="token operator">&lt;=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> listPadding<span class="token punctuation">.</span>bottom <span class="token operator">&amp;&amp;</span> incrementalDeltaY <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>cannotScrollDown <span class="token operator">||</span> cannotScrollUp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> incrementalDeltaY <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5224\u65AD\u5411\u4E0A\u8FD8\u662F\u5411\u4E0B</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> down <span class="token operator">=</span> incrementalDeltaY <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> inTouchMode <span class="token operator">=</span> <span class="token function">isInTouchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>inTouchMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">hideSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> headerViewsCount <span class="token operator">=</span> <span class="token function">getHeaderViewsCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> footerViewsStart <span class="token operator">=</span> mItemCount <span class="token operator">-</span> <span class="token function">getFooterViewsCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>down<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token operator">-</span>incrementalDeltaY<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			top <span class="token operator">+=</span> listPadding<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> top<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			    <span class="token comment">// \u5982\u679C\u8FD9\u4E2AView\u7684\u5E95\u90E8\u4F4D\u7F6E\u5DF2\u7ECF\u5C0F\u4E8Etop\u503C\u4E86\uFF0C\u8BF4\u660E\u8FD9\u4E2Aview\u5DF2\u7ECF\u79FB\u9664\u5C4F\u5E55\u4E86\uFF0C\u4E0D\u53EF\u89C1\u4E86</span>
				count<span class="token operator">++</span><span class="token punctuation">;</span>
				<span class="token keyword">int</span> position <span class="token operator">=</span> firstPosition <span class="token operator">+</span> i<span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&gt;=</span> headerViewsCount <span class="token operator">&amp;&amp;</span> position <span class="token operator">&lt;</span> footerViewsStart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// The view will be rebound to new data, clear any</span>
					<span class="token comment">// system-managed transient state.</span>
					child<span class="token punctuation">.</span><span class="token function">clearAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">// \u53EA\u8981\u8BE5view\u79FB\u9664\u5C4F\u5E55\u5C31\u628A\u8BE5view\u6DFB\u52A0\u5230\u5E9F\u5F03\u7684\u7F13\u5B58\u4E2D</span>
					mRecycler<span class="token punctuation">.</span><span class="token function">addScrapView</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> incrementalDeltaY<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			bottom <span class="token operator">-=</span> listPadding<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> childCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				start <span class="token operator">=</span> i<span class="token punctuation">;</span>
				count<span class="token operator">++</span><span class="token punctuation">;</span>
				<span class="token keyword">int</span> position <span class="token operator">=</span> firstPosition <span class="token operator">+</span> i<span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&gt;=</span> headerViewsCount <span class="token operator">&amp;&amp;</span> position <span class="token operator">&lt;</span> footerViewsStart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// The view will be rebound to new data, clear any</span>
					<span class="token comment">// system-managed transient state.</span>
					child<span class="token punctuation">.</span><span class="token function">clearAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					mRecycler<span class="token punctuation">.</span><span class="token function">addScrapView</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	mMotionViewNewTop <span class="token operator">=</span> mMotionViewOriginalTop <span class="token operator">+</span> deltaY<span class="token punctuation">;</span>

	mBlockLayoutRequests <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token comment">// count\u8BB0\u5F55\u4E86\u5F53\u524D\u5DF2\u7ECF\u79FB\u9664\u5C4F\u5E55\u7684view\u4E2A\u6570</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u628A\u5DF2\u7ECF\u79FB\u9664\u7684View\u4ECEViewGroup\u603Bdetach\u6389</span>
		<span class="token function">detachViewsFromParent</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mRecycler<span class="token punctuation">.</span><span class="token function">removeSkippedScrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// invalidate before moving the children to avoid unnecessary invalidate</span>
	<span class="token comment">// calls to bubble up from the children all the way to the top</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">awakenScrollBars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	   <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u8BA9\u6240\u6709\u7684\u5B50view\u90FD\u6309\u7167\u8FD9\u4E2A\u53C2\u6570\u7684\u8DDD\u79BB\u5927\u5C0F\u8FDB\u884C\u6539\u53D8\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u79FB\u52A8\u4E5F\u5C31\u662F\u6ED1\u52A8\u7684\u529F\u80FD\u3002</span>
	<span class="token function">offsetChildrenTopAndBottom</span><span class="token punctuation">(</span>incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>down<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mFirstPosition <span class="token operator">+=</span> count<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> absIncrementalDeltaY <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>incrementalDeltaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>spaceAbove <span class="token operator">&lt;</span> absIncrementalDeltaY <span class="token operator">||</span> spaceBelow <span class="token operator">&lt;</span> absIncrementalDeltaY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u7B2C\u4E00\u4E2AView\u7684\u9876\u90E8\u79FB\u5165\u4E86\u5C4F\u5E55\u6216\u8005\u6700\u540E\u4E00\u4E2AView\u7684\u5E95\u90E8\u79FB\u5165\u4E86\u5C4F\u5E55</span>
		<span class="token function">fillGap</span><span class="token punctuation">(</span>down<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inTouchMode <span class="token operator">&amp;&amp;</span> mSelectedPosition <span class="token operator">!=</span> INVALID_POSITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childIndex <span class="token operator">=</span> mSelectedPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>childIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> childIndex <span class="token operator">&lt;</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">positionSelector</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">,</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>childIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mSelectorPosition <span class="token operator">!=</span> INVALID_POSITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> childIndex <span class="token operator">=</span> mSelectorPosition <span class="token operator">-</span> mFirstPosition<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>childIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> childIndex <span class="token operator">&lt;</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">positionSelector</span><span class="token punctuation">(</span>INVALID_POSITION<span class="token punctuation">,</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>childIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		mSelectorRect<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	mBlockLayoutRequests <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	<span class="token function">invokeOnItemScrollListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EE7\u7EED\u770B\u4E00\u4E0B<code>offsetChildrenTopAndBottom()</code>\u65B9\u6CD5\u7684\uFF0C\u5728<code>AbsListView</code>\u4E2D\u6CA1\u6709\u91CD\u5199\u8BE5\u65B9\u6CD5\uFF0C\u5177\u4F53\u8981\u770B\u5176\u7236\u7C7B<code>ViewGroup</code>\u4E2D\u7684\u5B9E\u73B0: \`</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Offset the vertical location of all children of this view by the specified number of pixels.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">offset</span> the number of pixels to offset
 *
 * <span class="token keyword">@hide</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">offsetChildrenTopAndBottom</span><span class="token punctuation">(</span><span class="token keyword">int</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> mChildrenCount<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> children <span class="token operator">=</span> mChildren<span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> invalidate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u628A\u6240\u6709\u7684view\u90FD\u79FB\u52A8\u6307\u5B9A\u7684\u8DDD\u79BB</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span> v <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		v<span class="token punctuation">.</span>mTop <span class="token operator">+=</span> offset<span class="token punctuation">;</span>
		v<span class="token punctuation">.</span>mBottom <span class="token operator">+=</span> offset<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span>mRenderNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			invalidate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			v<span class="token punctuation">.</span>mRenderNode<span class="token punctuation">.</span><span class="token function">offsetTopAndBottom</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>invalidate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">invalidateViewProperty</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">notifySubtreeAccessibilityStateChangedIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u770B\u4E00\u4E0B<code>fillGap()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Fills the gap left open by a touch-scroll. During a touch scroll, children that
 * remain on screen are shifted and the other ones are discarded. The role of this
 * method is to fill the gap thus created by performing a partial layout in the
 * empty space.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">down</span> true if the scroll is going down, false if it is going up
 */</span>
<span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">fillGap</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> down<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u73B0\u5728<code>AbsListView</code>\u4E2D\u8BE5\u65B9\u6CD5\u662F\u62BD\u8C61\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u518D<code>ListView</code>\u4E2D\u627E\u4E00\u4E0B\u4ED6\u7684\u5177\u4F53\u5B9E\u73B0\u7C7B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">fillGap</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> down<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>down<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> paddingTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                paddingTop <span class="token operator">=</span> <span class="token function">getListPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> startOffset <span class="token operator">=</span> count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> mDividerHeight <span class="token operator">:</span>
                    paddingTop<span class="token punctuation">;</span>
            <span class="token function">fillDown</span><span class="token punctuation">(</span>mFirstPosition <span class="token operator">+</span> count<span class="token punctuation">,</span> startOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">correctTooHigh</span><span class="token punctuation">(</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> paddingBottom <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                paddingBottom <span class="token operator">=</span> <span class="token function">getListPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> startOffset <span class="token operator">=</span> count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mDividerHeight <span class="token operator">:</span>
                    <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> paddingBottom<span class="token punctuation">;</span>
            <span class="token function">fillUp</span><span class="token punctuation">(</span>mFirstPosition <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> startOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">correctTooLow</span><span class="token punctuation">(</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4ED6\u4F1A\u5206\u522B\u6839\u636E\u5411\u4E0B\u6ED1\u52A8\u8FD8\u662F\u5411\u4E0A\u6ED1\u52A8\u53BB\u8C03\u7528<code>fillDown</code>\u548C<code>fillUp</code>\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u4E4B\u524D\u6211\u4EEC\u90FD\u5206\u6790\u8FC7\u4E86\uFF0C\u5C31\u4E0D\u518D\u7EE7\u7EED\u770B\u4E86\u3002</p><p>\u5230\u8FD9\u91CC\u57FA\u672C\u5C31\u628A\u6ED1\u52A8\u90E8\u5206\u7684\u5904\u7406\u90FD\u770B\u5B8C\u4E86\u3002 \u8FD8\u5269\u6700\u540E\u4E00\u4E2A\u95EE\u9898\u5C31\u662F<code>RecycleBin</code>\u7684\u5B9E\u73B0,\u4ED6\u662F<code>AbsListView</code>\u4E2D\u7684\u4E00\u4E2A\u5185\u90E8\u7C7B\u3002</p><p>\u76F4\u63A5\u4E0A\u4EE3\u7801\u4E86\uFF0C\u4ED6\u7684\u6CE8\u91CA\u4E5F\u8BF4\u7684\u975E\u5E38\u6E05\u695A\uFF0C\u6211\u5C31\u628A\u4E0D\u597D\u7406\u89E3\u7684\u5730\u65B9\u7B80\u5355\u8BF4\u4E00\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The RecycleBin facilitates reuse of views across layouts. The RecycleBin has two levels of
 * storage: ActiveViews and ScrapViews. ActiveViews are those views which were onscreen at the
 * start of a layout. By construction, they are displaying current information. At the end of
 * layout, all views in ActiveViews are demoted to ScrapViews. ScrapViews are old views that
 * could potentially be used by the adapter to avoid allocating views unnecessarily.
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">AbsListView</span><span class="token punctuation">#</span><span class="token function">setRecyclerListener</span><span class="token punctuation">(</span><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">AbsListView</span><span class="token punctuation">.</span><span class="token class-name">RecyclerListener</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">AbsListView</span><span class="token punctuation">.</span><span class="token class-name">RecyclerListener</span></span>
 */</span>
<span class="token keyword">class</span> <span class="token class-name">RecycleBin</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">RecyclerListener</span> mRecyclerListener<span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The position of the first view stored in mActiveViews.
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> mFirstActivePosition<span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Views that were on screen at the start of layout. This array is populated at the start of
	 * layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.
	 * Views in mActiveViews represent a contiguous range of Views, with position of the first
	 * view store in mFirstActivePosition.
	 */</span>
	<span class="token keyword">private</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mActiveViews <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u4E3A\u4EC0\u4E48\u662F\u4E2A\u6570\u7EC4\u5462\uFF1F\u56E0\u4E3AListView\u4F1A\u6709\u591A\u79CD\u4E0D\u540C\u7684ViewType\u554A\u3002
	 * Unsorted views that can be used by the adapter as a convert view.
	 */</span>
	<span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> mScrapViews<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">int</span> mViewTypeCount<span class="token punctuation">;</span>
	<span class="token comment">// mScrapViews\u6570\u7EC4\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u65B9\u4FBF\u5728ViewType\u662F1\u7684\u65F6\u5019\u4F7F\u7528</span>
	<span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> mCurrentScrap<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> mSkippedScrap<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">SparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> mTransientStateViews<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">LongSparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> mTransientStateViewsById<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setViewTypeCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> viewTypeCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewTypeCount <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Can&#39;t have a viewTypeCount &lt; 1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u6839\u636EViewType\u7684\u6570\u91CF\u6765\u521B\u5EFA\uFF0C\u56E0\u4E3AViewType\u53EF\u4EE5\u6709\u591A\u4E2D\u7C7B\u578B\uFF0C\u6BCF\u79CD\u4E0D\u540C\u7C7B\u578B\u7684View\u80AF\u5B9A\u8981\u5206\u5F00\u5355\u72EC\u8FDB\u884C\u7F13\u5B58\u548C\u590D\u7528\u7684\u3002</span>
		<span class="token comment">//noinspection unchecked</span>
		<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> scrapViews <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">[</span>viewTypeCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> viewTypeCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			scrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mViewTypeCount <span class="token operator">=</span> viewTypeCount<span class="token punctuation">;</span>
		mCurrentScrap <span class="token operator">=</span> scrapViews<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		mScrapViews <span class="token operator">=</span> scrapViews<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u65B9\u6CD5\u540D\u8BF4\u660E\u4E86\u4E00\u5207</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">markChildrenDirty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mCurrentScrap<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> scrapCount <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scrapCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				scrap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forceLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> typeCount <span class="token operator">=</span> mViewTypeCount<span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> typeCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mScrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> scrapCount <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> scrapCount<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					scrap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forceLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViews <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> mTransientStateViews<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mTransientStateViews<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forceLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViewsById <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forceLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">shouldRecycleViewType</span><span class="token punctuation">(</span><span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> viewType <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Clears the scrap heap.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mCurrentScrap<span class="token punctuation">;</span>
			<span class="token function">clearScrap</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> typeCount <span class="token operator">=</span> mViewTypeCount<span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> typeCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mScrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token function">clearScrap</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token function">clearTransientStateViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Fill ActiveViews with all of the children of the AbsListView.
	 * \u5C06View\u5B58\u50A8\u5230mActiveViews\u6570\u7EC4\u4E2D
	 * <span class="token keyword">@param</span> <span class="token parameter">childCount</span> The minimum number of views mActiveViews should hold
	 * <span class="token keyword">@param</span> <span class="token parameter">firstActivePosition</span> The position of the first view that will be stored in
	 *        mActiveViews
	 */</span>
	<span class="token keyword">void</span> <span class="token function">fillActiveViews</span><span class="token punctuation">(</span><span class="token keyword">int</span> childCount<span class="token punctuation">,</span> <span class="token keyword">int</span> firstActivePosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mActiveViews<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> childCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mActiveViews <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">View</span><span class="token punctuation">[</span>childCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mFirstActivePosition <span class="token operator">=</span> firstActivePosition<span class="token punctuation">;</span>

		<span class="token comment">//noinspection MismatchedReadAndWriteOfArray</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> activeViews <span class="token operator">=</span> mActiveViews<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// Don&#39;t put header or footer views into the scrap heap</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>lp <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> lp<span class="token punctuation">.</span>viewType <span class="token operator">!=</span> ITEM_VIEW_TYPE_HEADER_OR_FOOTER<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Note:  We do place AdapterView.ITEM_VIEW_TYPE_IGNORE in active views.</span>
				<span class="token comment">//        However, we will NOT place them into scrap views.</span>
				activeViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> child<span class="token punctuation">;</span>
				<span class="token comment">// Remember the position so that setupChild() doesn&#39;t reset state.</span>
				lp<span class="token punctuation">.</span>scrappedFromPosition <span class="token operator">=</span> firstActivePosition <span class="token operator">+</span> i<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Get the view corresponding to the specified position. The view will be removed from
	 * mActiveViews if it is found.\u6CE8\u91CA\u8BF4\u4E86\u83B7\u53D6\u5B8C\u4E4B\u540E\u5C31\u4F1A\u4ECEmActiveViews\u4E2D\u79FB\u9664\uFF0C\u8FD9\u662F\u5F88\u597D\u7406\u89E3\u7684
	 * \u56E0\u4E3A\u83B7\u53D6\u4E86\u5C31\u662F\u8BF4\u8FD9\u4E2AView\u5DF2\u7ECF\u663E\u793A\u5230\u5F53\u524D\u7684ListView\u4E2D\u4E86\uFF0C\u80AF\u5B9A\u4E0D\u80FD\u518D\u590D\u7528\u4ED6\u4E86\u3002
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">position</span> The position to look up in mActiveViews
	 * <span class="token keyword">@return</span> The view if it is found, null otherwise
	 */</span>
	<span class="token class-name">View</span> <span class="token function">getActiveView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> index <span class="token operator">=</span> position <span class="token operator">-</span> mFirstActivePosition<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> activeViews <span class="token operator">=</span> mActiveViews<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&lt;</span> activeViews<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> match <span class="token operator">=</span> activeViews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
			activeViews<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> match<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">View</span> <span class="token function">getTransientStateView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mAdapterHasStableIds <span class="token operator">&amp;&amp;</span> mTransientStateViewsById <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">long</span> id <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">View</span> result <span class="token operator">=</span> mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> result<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViews <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> index <span class="token operator">=</span> mTransientStateViews<span class="token punctuation">.</span><span class="token function">indexOfKey</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">View</span> result <span class="token operator">=</span> mTransientStateViews<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mTransientStateViews<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span> result<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Dumps and fully detaches any currently saved views with transient
	 * state.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">clearTransientStateViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">SparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> viewsByPos <span class="token operator">=</span> mTransientStateViews<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewsByPos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> viewsByPos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>viewsByPos<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			viewsByPos<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">LongSparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> viewsById <span class="token operator">=</span> mTransientStateViewsById<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewsById <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> viewsById<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>viewsById<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			viewsById<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u4ECE\u5E9F\u5F03View\u7684\u7F13\u5B58\u4E2D\u83B7\u53D6\uFF0C\u53EA\u8981\u79FB\u52A8\u51FA\u5C4F\u5E55\u4E4B\u540E\u5C31\u90FD\u4F1A\u88AB\u52A0\u5230\u5E9F\u5F03View\u7684\u7F13\u5B58\u4E2D 
	 * <span class="token keyword">@return</span> A view from the ScrapViews collection. These are unordered.
	 */</span>
	<span class="token class-name">View</span> <span class="token function">getScrapView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">retrieveFromScrap</span><span class="token punctuation">(</span>mCurrentScrap<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> whichScrap <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>whichScrap <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> whichScrap <span class="token operator">&lt;</span> mScrapViews<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token function">retrieveFromScrap</span><span class="token punctuation">(</span>mScrapViews<span class="token punctuation">[</span>whichScrap<span class="token punctuation">]</span><span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Puts a view into the list of scrap views.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
	 * If the list data hasn&#39;t changed or the adapter has stable IDs, views
	 * with transient state will be preserved for later retrieval.
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">scrap</span> The view to add
	 * <span class="token keyword">@param</span> <span class="token parameter">position</span> The view&#39;s position within its parent
	 */</span>
	<span class="token keyword">void</span> <span class="token function">addScrapView</span><span class="token punctuation">(</span><span class="token class-name">View</span> scrap<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> scrap<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>lp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		lp<span class="token punctuation">.</span>scrappedFromPosition <span class="token operator">=</span> position<span class="token punctuation">;</span>

		<span class="token comment">// Remove but don&#39;t scrap header or footer views, or views that</span>
		<span class="token comment">// should otherwise not be recycled.</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> viewType <span class="token operator">=</span> lp<span class="token punctuation">.</span>viewType<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">shouldRecycleViewType</span><span class="token punctuation">(</span>viewType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		scrap<span class="token punctuation">.</span><span class="token function">dispatchStartTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// The the accessibility state of the view may change while temporary</span>
		<span class="token comment">// detached and we do not allow detached views to fire accessibility</span>
		<span class="token comment">// events. So we are announcing that the subtree changed giving a chance</span>
		<span class="token comment">// to clients holding on to a view in this subtree to refresh it.</span>
		<span class="token function">notifyViewAccessibilityStateChangedIfNeeded</span><span class="token punctuation">(</span>
				<span class="token class-name">AccessibilityEvent</span><span class="token punctuation">.</span>CONTENT_CHANGE_TYPE_SUBTREE<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">// \u5BF9\u4E00\u4E9B\u77AC\u6001View\u7684\u5904\u7406</span>
		<span class="token comment">// Don&#39;t scrap views that have transient state.</span>
		<span class="token keyword">final</span> <span class="token keyword">boolean</span> scrapHasTransientState <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">hasTransientState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>scrapHasTransientState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mAdapterHasStableIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// If the adapter has stable IDs, we can reuse the view for</span>
				<span class="token comment">// the same data.</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViewsById <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mTransientStateViewsById <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongSparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>lp<span class="token punctuation">.</span>itemId<span class="token punctuation">,</span> scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mDataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// If the data hasn&#39;t changed, we can reuse the views at</span>
				<span class="token comment">// their old positions.</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViews <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mTransientStateViews <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				mTransientStateViews<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// Otherwise, we&#39;ll have to remove the view and start over.</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mSkippedScrap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mSkippedScrap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				mSkippedScrap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mCurrentScrap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				mScrapViews<span class="token punctuation">[</span>viewType<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>mRecyclerListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mRecyclerListener<span class="token punctuation">.</span><span class="token function">onMovedToScrapHeap</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Finish the removal of any views that skipped the scrap heap.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">removeSkippedScrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mSkippedScrap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> mSkippedScrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>mSkippedScrap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mSkippedScrap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Move all views remaining in mActiveViews to mScrapViews.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">scrapActiveViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> activeViews <span class="token operator">=</span> mActiveViews<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">boolean</span> hasListener <span class="token operator">=</span> mRecyclerListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">boolean</span> multipleScraps <span class="token operator">=</span> mViewTypeCount <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

		<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrapViews <span class="token operator">=</span> mCurrentScrap<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> activeViews<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> victim <span class="token operator">=</span> activeViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>victim <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span> lp
						<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> victim<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> whichScrap <span class="token operator">=</span> lp<span class="token punctuation">.</span>viewType<span class="token punctuation">;</span>

				activeViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

				<span class="token keyword">if</span> <span class="token punctuation">(</span>victim<span class="token punctuation">.</span><span class="token function">hasTransientState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Store views with transient state for later use.</span>
					victim<span class="token punctuation">.</span><span class="token function">dispatchStartTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

					<span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapter <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mAdapterHasStableIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViewsById <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							mTransientStateViewsById <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongSparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						<span class="token keyword">long</span> id <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span>mFirstActivePosition <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
						mTransientStateViewsById<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> victim<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mDataChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>mTransientStateViews <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							mTransientStateViews <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						mTransientStateViews<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mFirstActivePosition <span class="token operator">+</span> i<span class="token punctuation">,</span> victim<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>whichScrap <span class="token operator">!=</span> ITEM_VIEW_TYPE_HEADER_OR_FOOTER<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">// The data has changed, we can&#39;t keep this view.</span>
						<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>victim<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">shouldRecycleViewType</span><span class="token punctuation">(</span>whichScrap<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// Discard non-recyclable views except headers/footers.</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>whichScrap <span class="token operator">!=</span> ITEM_VIEW_TYPE_HEADER_OR_FOOTER<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>victim<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
					<span class="token comment">// Store everything else on the appropriate scrap heap.</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>multipleScraps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						scrapViews <span class="token operator">=</span> mScrapViews<span class="token punctuation">[</span>whichScrap<span class="token punctuation">]</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>

					victim<span class="token punctuation">.</span><span class="token function">dispatchStartTemporaryDetach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					lp<span class="token punctuation">.</span>scrappedFromPosition <span class="token operator">=</span> mFirstActivePosition <span class="token operator">+</span> i<span class="token punctuation">;</span>
					scrapViews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>victim<span class="token punctuation">)</span><span class="token punctuation">;</span>

					<span class="token keyword">if</span> <span class="token punctuation">(</span>hasListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						mRecyclerListener<span class="token punctuation">.</span><span class="token function">onMovedToScrapHeap</span><span class="token punctuation">(</span>victim<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token function">pruneScrapViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Makes sure that the size of mScrapViews does not exceed the size of
	 * mActiveViews, which can happen if an adapter does not recycle its
	 * views. Removes cached transient state views that no longer have
	 * transient state.
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">pruneScrapViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> maxViews <span class="token operator">=</span> mActiveViews<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> viewTypeCount <span class="token operator">=</span> mViewTypeCount<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> scrapViews <span class="token operator">=</span> mScrapViews<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> viewTypeCount<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrapPile <span class="token operator">=</span> scrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> size <span class="token operator">=</span> scrapPile<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> extras <span class="token operator">=</span> size <span class="token operator">-</span> maxViews<span class="token punctuation">;</span>
			size<span class="token operator">--</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> extras<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>scrapPile<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>size<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">SparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> transViewsByPos <span class="token operator">=</span> mTransientStateViews<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>transViewsByPos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> transViewsByPos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> v <span class="token operator">=</span> transViewsByPos<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token punctuation">.</span><span class="token function">hasTransientState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					transViewsByPos<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					i<span class="token operator">--</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">LongSparseArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> transViewsById <span class="token operator">=</span> mTransientStateViewsById<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>transViewsById <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> transViewsById<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> v <span class="token operator">=</span> transViewsById<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token punctuation">.</span><span class="token function">hasTransientState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					transViewsById<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					i<span class="token operator">--</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Puts all views in the scrap heap into the supplied list.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">reclaimScrapViews</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> views<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			views<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>mCurrentScrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> viewTypeCount <span class="token operator">=</span> mViewTypeCount<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> scrapViews <span class="token operator">=</span> mScrapViews<span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> viewTypeCount<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrapPile <span class="token operator">=</span> scrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				views<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>scrapPile<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Updates the cache color hint of all known views.
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">color</span> The new cache color hint.
	 */</span>
	<span class="token keyword">void</span> <span class="token function">setCacheColorHint</span><span class="token punctuation">(</span><span class="token keyword">int</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mViewTypeCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mCurrentScrap<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> scrapCount <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scrapCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				scrap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDrawingCacheBackgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> typeCount <span class="token operator">=</span> mViewTypeCount<span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> typeCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap <span class="token operator">=</span> mScrapViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token keyword">int</span> scrapCount <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> scrapCount<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					scrap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDrawingCacheBackgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// Just in case this is called during a layout pass</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> activeViews <span class="token operator">=</span> mActiveViews<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> activeViews<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> victim <span class="token operator">=</span> activeViews<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>victim <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				victim<span class="token punctuation">.</span><span class="token function">setDrawingCacheBackgroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">View</span> <span class="token function">retrieveFromScrap</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrapViews<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> size <span class="token operator">=</span> scrapViews<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// See if we still have a view for this position or ID.</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">View</span> view <span class="token operator">=</span> scrapViews<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">final</span> <span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span> params <span class="token operator">=</span>
						<span class="token punctuation">(</span><span class="token class-name">AbsListView<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">if</span> <span class="token punctuation">(</span>mAdapterHasStableIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token keyword">long</span> id <span class="token operator">=</span> mAdapter<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">==</span> params<span class="token punctuation">.</span>itemId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">return</span> scrapViews<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>scrappedFromPosition <span class="token operator">==</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> scrap <span class="token operator">=</span> scrapViews<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token function">clearAccessibilityFromScrap</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">return</span> scrap<span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> scrap <span class="token operator">=</span> scrapViews<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">clearAccessibilityFromScrap</span><span class="token punctuation">(</span>scrap<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> scrap<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clearScrap</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> scrap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> scrapCount <span class="token operator">=</span> scrap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> scrapCount<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">removeDetachedView</span><span class="token punctuation">(</span>scrap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>scrapCount <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clearAccessibilityFromScrap</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		view<span class="token punctuation">.</span><span class="token function">clearAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		view<span class="token punctuation">.</span><span class="token function">setAccessibilityDelegate</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">removeDetachedView</span><span class="token punctuation">(</span><span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">boolean</span> animate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		child<span class="token punctuation">.</span><span class="token function">setAccessibilityDelegate</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">AbsListView</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeDetachedView</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u4E3A\u6B62\u3002</p><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,21);function f(h,g){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[k,r,d,v,m,n("a",b,[w,i(t)])]),y])}var T=p(l,[["render",f],["__file","ListView\u6E90\u7801\u5206\u6790.html.vue"]]);export{T as default};
