import{_ as c,r as e,o,c as l,a as n,b as t,e as p,d as s}from"./app.89e8a229.js";const i={},u=p(`<h1 id="rxjava\u8BE6\u89E3-\u4E2D" tabindex="-1"><a class="header-anchor" href="#rxjava\u8BE6\u89E3-\u4E2D" aria-hidden="true">#</a> RxJava\u8BE6\u89E3(\u4E2D)</h1><h2 id="\u8BF4\u597D\u7684\u7B80\u6D01\u5462" tabindex="-1"><a class="header-anchor" href="#\u8BF4\u597D\u7684\u7B80\u6D01\u5462" aria-hidden="true">#</a> \u8BF4\u597D\u7684\u7B80\u6D01\u5462\uFF1F</h2><p>\u4E0A\u9762\u8FD9\u4E00\u90E8\u5206\uFF0C\u53C8\u662F\u4ECB\u7ECD\u3001\u53C8\u662F<code>Hello World</code>\u3001\u53C8\u662F\u6570\u636E\u53D8\u6362\uFF0C\u4F46\u662F\u4F60\u4F1A\u53D1\u73B0\u7136\u800C\u5E76\u6CA1\u6709\u4EC0\u4E48\u5375\u7528\u3002\u8BF4\u597D\u7684\u7B80\u6D01\u4E00\u70B9\u4E5F\u6728\u6709\u4F53\u73B0\u51FA\u6765\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u4F1A\u901A\u8FC7\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6765\u8FDB\u884C\u8BF4\u660E\u3002\u73B0\u5728\u6211\u4EEC\u6709\u8FD9\u6837\u4E00\u4E2A\u9700\u6C42:</p><blockquote><p>\u6709\u4E00\u4E2A\u670D\u52A1\u63D0\u4F9B\u4E86\u4E00\u4E9B<code>API</code>\u6765\u641C\u7D22\u6574\u4E2A\u7F51\u7EDC\u4E0A\u7684\u7B26\u5408\u67E5\u8BE2\u5173\u952E\u5B57\u7684\u6240\u6709\u732B\u7684\u56FE\u7247\u3002 \u6BCF\u4E2A\u56FE\u7247\u5305\u542B\u4E00\u4E2A\u53EF\u7231\u7A0B\u5EA6\u7684\u53C2\u6570(\u4E00\u4E2A\u6574\u6570\u503C\u8868\u793A\u5176\u53EF\u7231\u7A0B\u5EA6)\u3002 \u6211\u4EEC\u7684\u4EFB\u52A1\u5C31\u662F\u4E0B\u8F7D\u6240\u6709\u732B\u7684\u5217\u8868\u5E76\u9009\u62E9\u6700\u53EF\u7231\u7684\u90A3\u4E2A\uFF0C\u628A\u5B83\u7684\u56FE\u7247\u4FDD\u5B58\u5230\u672C\u5730\u3002</p></blockquote><h4 id="model\u548Capi" tabindex="-1"><a class="header-anchor" href="#model\u548Capi" aria-hidden="true">#</a> <code>Model</code>\u548C<code>API</code></h4><p>\u4E0B\u9762\u662F\u732B\u7684\u6570\u636E\u7ED3\u6784<code>Cat</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
    <span class="token class-name">Bitmap</span> image<span class="token punctuation">;</span>
    <span class="token keyword">int</span> cuteness<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> another<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>cuteness<span class="token punctuation">,</span> another<span class="token punctuation">.</span>cuteness<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7684<code>API</code>\u4F1A\u8C03\u7528<code>cat-sdk.jar</code>\u4E2D\u5835\u585E\u5F0F\u7684\u63A5\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Api</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Uri</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8D77\u6765\u5F88\u6E05\u6670\u5427\uFF1F\u5F53\u7136\u4E86\uFF0C\u6211\u4EEC\u7EE7\u7EED\u5199\u5BA2\u6237\u7AEF\u7684\u4E1A\u52A1\u903B\u8F91.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>

    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Uri</span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Uri</span> savedUri <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> savedUri<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u4FD7\u6613\u61C2\u3001\u7B80\u5355\u660E\u4E86\uFF0C\u975E\u5E38\u9177\u7684\u4EE3\u7801\u3002\u4E3B\u8981\u7684\u51FD\u6570<code>saveTheCutestCat()</code>\u53EA\u5305\u542B\u4E863\u4E2A\u65B9\u6CD5\u3002\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u7136\u540E\u7B49\u5F85\u65B9\u6CD5\u6267\u884C\u5B8C\u5E76\u63A5\u53D7\u8FD4\u56DE\u503C\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u975E\u5E38\u7B80\u5355\u3001\u6709\u6548\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E00\u4E0B\u8FD9\u79CD\u65B9\u5F0F\u7684\u5176\u4ED6\u4F18\u70B9\u3002</p><h4 id="\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408" aria-hidden="true">#</a> \u7EC4\u5408</h4><p>\u53EF\u4EE5\u770B\u5230\u6211\u4EEC\u7684<code>saveTheCutestCat</code>\u7531\u5176\u4ED6\u4E09\u4E2A\u51FD\u6570\u8C03\u7528\u6240\u7EC4\u6210\u7684\u3002\u6211\u4EEC\u901A\u8FC7\u51FD\u6570\u6765\u628A\u4E00\u4E2A\u5927\u529F\u80FD\u5206\u5272\u4E3A\u6BCF\u4E2A\u5BB9\u6613\u7406\u89E3\u7684\u5C0F\u529F\u80FD\u3002\u901A\u8FC7\u51FD\u6570\u8C03\u7528\u6765\u7EC4\u5408\u4F7F\u7528\u8FD9\u4E9B\u5C0F\u529F\u80FD\u3002\u4F7F\u7528\u548C\u7406\u89E3\u8D77\u6765\u90FD\u76F8\u5F53\u7B80\u5355</p><h4 id="\u5F02\u5E38\u4F20\u9012" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38\u4F20\u9012" aria-hidden="true">#</a> \u5F02\u5E38\u4F20\u9012</h4><p>\u53E6\u5916\u4E00\u4E2A\u4F7F\u7528\u51FD\u6570\u7684\u597D\u5904\u5C31\u662F\u65B9\u4FBF\u5904\u7406\u5F02\u5E38\u3002\u6BCF\u4E2A\u51FD\u6570\u90FD\u53EF\u4EE5\u901A\u8FC7\u629B\u51FA\u5F02\u5E38\u6765\u7ED3\u675F\u8FD0\u884C\u3002\u8BE5\u5F02\u5E38\u53EF\u4EE5\u5728\u629B\u51FA\u5F02\u5E38\u7684\u51FD\u6570\u91CC\u9762\u5904\u7406\uFF0C\u4E5F\u53EF\u4EE5\u5728\u8C03\u7528\u8BE5\u51FD\u6570\u7684\u5916\u9762\u5904\u7406\uFF0C\u6240\u4EE5\u6211\u4EEC\u65E0\u9700\u6BCF\u6B21\u90FD\u5904\u7406\u6BCF\u4E2A\u5F02\u5E38\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u4E00\u4E2A\u5730\u65B9\u5904\u7406\u6240\u6709\u53EF\u80FD\u629B\u51FA\u7684\u5F02\u5E38\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">try</span><span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Uri</span> savedUri <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> savedUri<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> someDefaultValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u5904\u7406\u8FD9\u4E09\u4E2A\u51FD\u6570\u4E2D\u6240\u629B\u51FA\u7684\u4EFB\u4F55\u5F02\u5E38\u4E86\u3002\u5982\u679C\u6CA1\u6709<code>try catch</code>\u8BED\u53E5\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u628A\u5F02\u5E38\u7EE7\u7EED\u4F20\u9012\u4E0B\u53BB\u3002</p><h2 id="\u5411\u5F02\u6B65\u7C97\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5411\u5F02\u6B65\u7C97\u53D1" aria-hidden="true">#</a> \u5411\u5F02\u6B65\u7C97\u53D1</h2><p>\u4F46\u662F\uFF0C\u73B0\u5B9E\u4E16\u754C\u4E2D\u6211\u4EEC\u5F80\u5F80\u6CA1\u6CD5\u7B49\u5F85\u3002\u6709\u4E9B\u65F6\u5019\u4F60\u6CA1\u6CD5\u53EA\u4F7F\u7528\u963B\u585E\u8C03\u7528\u3002\u5728<code>Android</code>\u4E2D\u4F60\u9700\u8981\u5904\u7406\u5404\u79CD\u5F02\u6B65\u64CD\u4F5C\u3002 \u5C31\u90A3<code>Android</code>\u7684<code>OnClickListener</code>\u63A5\u53E3\u6765\u8BF4\u5427\uFF0C\u5982\u679C\u4F60\u9700\u8981\u5904\u7406\u4E00\u4E2A<code>View</code>\u7684\u70B9\u51FB\u4E8B\u4EF6\uFF0C\u4F60\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A\u8BE5<code>Listener</code> \u7684\u5B9E\u73B0\u6765\u5904\u7406\u7528\u6237\u7684\u70B9\u51FB\u4E8B\u4EF6\u3002\u4E0B\u9762\u6765\u770B\u770B\u5982\u4F55\u5904\u7406\u5F02\u6B65\u8C03\u7528\u3002</p><h4 id="\u5F02\u6B65\u7F51\u7EDC\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7F51\u7EDC\u8C03\u7528" aria-hidden="true">#</a> \u5F02\u6B65\u7F51\u7EDC\u8C03\u7528</h4><p>\u5047\u8BBE\u6211\u4EEC\u7684<code>cats-sdk.jar</code>\u4F7F\u7528\u4E86\u5F02\u6B65\u8C03\u7528\u7684<code>API</code>\u6765\u8BBF\u95EE\u7F51\u7EDC\u8D44\u6E90\uFF0C \u8FD9\u6837\u6211\u4EEC\u7684\u65B0<code>API</code>\u63A5\u53E3\u5C31\u53D8\u4E3A\u8FD9\u6837\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Api</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">CatsQueryCallback</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">void</span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">CatsQueryCallback</span> catsQueryCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Uri</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u6211\u4EEC\u67E5\u8BE2\u732B\u7684\u64CD\u4F5C\u5C31\u53D8\u4E3A\u5F02\u6B65\u7684\u4E86\uFF0C \u901A\u8FC7<code>CatsQueryCallback</code>\u56DE\u8C03\u63A5\u53E3\u6765\u7ED3\u675F\u67E5\u8BE2\u7684\u6570\u636E\u548C\u5904\u7406\u5F02\u5E38\u60C5\u51B5\u3002 \u6211\u4EEC\u7684\u4E1A\u52A1\u903B\u8F91\u4E5F\u9700\u8981\u8DDF\u7740\u6539\u53D8\u4E00\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CutestCatCallback</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCutestCatSaved</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">CutestCatCallback</span> cutestCatCallback<span class="token punctuation">)</span><span class="token punctuation">{</span>
        api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>CatsQueryCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Uri</span> savedUri <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onCutestCatSaved</span><span class="token punctuation">(</span>savedUri<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
 
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onQueryFailed</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6CA1\u6CD5\u8BA9<code>saveTheCutestCat</code>\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u503C\u4E86\uFF0C \u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u56DE\u8C03\u63A5\u53E3\u6765\u5F02\u6B65\u7684\u5904\u7406\u7ED3\u679C\u3002 \u8FD9\u91CC\u6211\u4EEC\u518D\u8FDB\u4E00\u6B65\uFF0C\u4F7F\u7528\u4E24\u4E2A\u5F02\u6B65\u64CD\u4F5C\u6765\u5B9E\u73B0\u6211\u4EEC\u7684\u529F\u80FD,\u4F8B\u5982\u6211\u4EEC\u9700\u8981\u4F7F\u7528\u5F02\u6B65<code>IO</code>\u6765\u5199\u6587\u4EF6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Api</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">CatsQueryCallback</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">interface</span> <span class="token class-name">StoreCallback</span><span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCatStored</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onStoreFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
 
    <span class="token keyword">void</span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">CatsQueryCallback</span> catsQueryCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">void</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">,</span> <span class="token class-name">StoreCallback</span> storeCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7684<code>helper</code>\u4F1A\u53D8\u6210:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CutestCatCallback</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">onCutestCatSaved</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">CutestCatCallback</span> cutestCatCallback<span class="token punctuation">)</span><span class="token punctuation">{</span>
        api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>CatsQueryCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>StoreCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatStored</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onCutestCatSaved</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStoreFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u518D\u6765\u770B\u770B\u8FD9\u90E8\u5206\u4EE3\u7801\uFF1F\u8FD8\u662F\u4E4B\u524D\u90A3\u6837\u7B80\u5355\u66B4\u529B\uFF1F\u73B0\u5728\u6709\u592A\u591A\u7684\u5E72\u6270\u4EE3\u7801\u3001\u533F\u540D\u7C7B\uFF0C\u8FD9\u7B80\u76F4\u662F\u592A\u6050\u6016\u4E86\uFF0C\u4F46\u662F\u4ED6\u4EEC\u7684\u4E1A\u52A1\u903B\u8F91\u5176\u5B9E\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u67E5\u8BE2\u732B\u7684\u5217\u8868\u6570\u636E\uFF0C\u7136\u540E\u627E\u51FA\u6700\u53EF\u7231\u7684\u732B\u5E76\u4FDD\u5B58\u5B83\u7684\u56FE\u7247\u3002</p><p>\u4E0A\u9762\u8BF4\u597D\u7684\u7EC4\u5408\u529F\u80FD\u6CA1\u6709\u4E86\uFF0C\u73B0\u5728\u4F60\u6CA1\u6CD5\u50CF\u963B\u585E\u64CD\u4F5C\u4E00\u6837\u6765\u7EC4\u5408\u8C03\u7528\u6BCF\u4E2A\u529F\u80FD\u4E86\uFF0C\u5F02\u6B65\u64CD\u4F5C\u4E2D\uFF0C\u6BCF\u6B21\u4F60\u90FD\u5FC5\u987B\u901A\u8FC7\u56DE\u8C03\u63A5\u53E3\u6765\u624B\u5DE5\u7684\u5904\u7406\u7ED3\u679C\u3002</p><p>\u4E0A\u9762\u8BF4\u597D\u7684\u5F02\u5E38\u5904\u7406\u4E5F\u6CA1\u6709\u4E86\uFF0C\u5F02\u6B65\u4EE3\u7801\u4E2D\u7684\u5F02\u5E38\u4E0D\u4F1A\u81EA\u52A8\u4F20\u9012\uFF0C\u6211\u4EEC\u9700\u8981\u624B\u52A8\u7684\u53BB\u91CD\u65B0\u4F20\u9012\u3002(<code>onStoreFailed()</code>\u548C<code>onQueryFailed()</code>\u5C31\u662F\u5E72\u8FD9\u4E8B\u7684)</p><h4 id="\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u679C" aria-hidden="true">#</a> \u7ED3\u679C\uFF1F</h4><p>\u7136\u540E\u5462\uFF1F\u6211\u4EEC\u53EF\u4EE5\u600E\u4E48\u505A\uFF1F\u6211\u4EEC\u80FD\u4E0D\u80FD\u4F7F\u7528\u65E0\u56DE\u8C03\u7684\u6A21\u5F0F\uFF1F\u6211\u4EEC\u8BD5\u7740\u4FEE\u590D\u4E00\u4E0B\u3002</p><h4 id="\u5954\u5411\u66F4\u597D\u7684\u4E16\u754C" tabindex="-1"><a class="header-anchor" href="#\u5954\u5411\u66F4\u597D\u7684\u4E16\u754C" aria-hidden="true">#</a> \u5954\u5411\u66F4\u597D\u7684\u4E16\u754C</h4><h4 id="\u901A\u7528\u7684\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u901A\u7528\u7684\u56DE\u8C03" aria-hidden="true">#</a> \u901A\u7528\u7684\u56DE\u8C03</h4><p>\u5982\u679C\u6211\u4EEC\u4ED4\u7EC6\u7684\u89C2\u5BDF\u4E0B\u56DE\u8C03\u63A5\u53E3\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u5B83\u4EEC\u7684\u5171\u6027:</p><ul><li>\u5B83\u4EEC\u90FD\u6709\u4E00\u4E2A\u5206\u53D1\u7ED3\u679C\u7684\u65B9\u6CD5(<code>onCutestCatSaved()</code>,<code>onCatListReceived()</code>,<code>onCatStored()</code>)</li><li>\u5B83\u4EEC\u4E2D\u7684\u7EDD\u5927\u90E8\u5206\u90FD\u6709\u4E00\u4E2A\u5904\u7406\u64CD\u4F5C\u8FC7\u7A0B\u4E2D\u5F02\u5E38\u7684\u65B9\u6CD5(<code>onError()</code>, <code>onQueryFailed()</code>, <code>onStoreFailed()</code>)</li></ul><p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u901A\u7528\u7684\u56DE\u8C03\u6765\u53D6\u4EE3\u5B83\u4EEC\u3002\u4F46\u662F\u6211\u4EEC\u65E0\u6CD5\u4FEE\u6539<code>api</code>\u7684\u8C03\u7528\u7ED3\u6784\uFF0C\u6211\u4EEC\u53EA\u80FD\u521B\u5EFA\u4E00\u4E2A\u5305\u88F9\u5C42\u7684\u8C03\u7528\u3002</p><p>\u6211\u4EEC\u901A\u7528\u7684\u56DE\u8C03\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">T</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A<code>ApiWrapper</code>\u7C7B\u6765\u6539\u53D8\u6211\u4EEC\u8C03\u7528\u7684\u7ED3\u6784:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiWrapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsCallback<span class="token punctuation">)</span><span class="token punctuation">{</span>
        api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>CatsQueryCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                catsCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                catsCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> uriCallback<span class="token punctuation">)</span><span class="token punctuation">{</span>
        api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>StoreCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatStored</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                uriCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStoreFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                uriCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u901A\u8FC7\u65B0\u7684\u56DE\u8C03\u6211\u4EEC\u53EF\u4EE5\u51CF\u5C11\u4E00\u6B21\u5904\u7406\u7ED3\u679C\u548C\u5F02\u5E38\u7684\u903B\u8F91\u3002<br> \u6700\u7EC8\uFF0C\u6211\u4EEC\u7684<code>CatsHelper</code>\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span><span class="token punctuation">{</span>

    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">,</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> cutestCatCallback<span class="token punctuation">)</span><span class="token punctuation">{</span>
        apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">,</span> cutestCatCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u597D\u4E86\uFF0C\u73B0\u5728\u6BD4\u4E4B\u524D\u7684\u4EE3\u7801\u7A0D\u5FAE\u7B80\u5355\u70B9\u4E86\u3002\u4F46\u662F\u6211\u4EEC\u80FD\u4E0D\u80FD\u505A\u7684\u66F4\u597D\uFF1F \u5F53\u7136\u53EF\u4EE5\uFF01</p><h4 id="\u4FDD\u6301\u53C2\u6570\u548C\u56DE\u8C03\u7684\u5206\u79BB\u6027" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u6301\u53C2\u6570\u548C\u56DE\u8C03\u7684\u5206\u79BB\u6027" aria-hidden="true">#</a> \u4FDD\u6301\u53C2\u6570\u548C\u56DE\u8C03\u7684\u5206\u79BB\u6027</h4><p>\u770B\u770B\u8FD9\u4E9B\u65B0\u7684\u5F02\u6B65\u64CD\u4F5C(<code>queryCats</code>,<code> store</code>\u548C<code>saveTheCutestCat</code>)\u3002\u8FD9\u4E9B\u51FD\u6570\u90FD\u6709\u540C\u6837\u7684\u6A21\u5F0F\u3002\u4F7F\u7528\u4E00\u4E9B\u53C2\u6570\u6765\u8C03\u7528\u8FD9\u4E9B\u51FD\u6570<code>(query,cat)</code>\uFF0C\u540C\u65F6\u8FD8\u6709\u4E00\u4E2A\u56DE\u8C03\u63A5\u53E3\u4F5C\u4E3A\u53C2\u6570\u3002\u751A\u81F3\uFF0C\u6240\u6709\u7684\u5F02\u6B65\u64CD\u4F5C\u90FD\u5E26\u6709\u4E00\u4E9B\u5E38\u89C4\u53C2\u6570\u548C\u4E00\u4E2A\u989D\u5916\u7684\u56DE\u8C03\u63A5\u53E3\u53C2\u6570\u3002\u5982\u679C\u6211\u4EEC\u628A\u4ED6\u4EEC\u5206\u79BB\u5F00\u4F1A\u5982\u4F55\uFF0C\u8BA9\u6BCF\u4E2A\u5F02\u6B65\u64CD\u4F5C\u53EA\u6709\u4E00\u4E9B\u5E38\u89C4\u53C2\u6570\u800C\u628A\u8FD4\u56DE\u4E00\u4E2A\u4E34\u65F6\u7684\u5BF9\u8C61\u6765\u64CD\u4F5C\u56DE\u8C03\u63A5\u53E3\u3002 \u4E0B\u9762\u6765\u8BD5\u8BD5\u770B\u770B\u8FD9\u79CD\u65B9\u5F0F\u80FD\u5426\u6709\u6548\u3002 \u5982\u679C\u6211\u4EEC\u8FD4\u56DE\u4E00\u4E2A\u4E34\u65F6\u7684\u5BF9\u8C61\u4F5C\u4E3A\u5F02\u6B65\u64CD\u4F5C\u7684\u56DE\u8C03\u63A5\u53E3\u5904\u7406\u65B9\u5F0F\uFF0C\u6211\u4EEC\u9700\u8981\u5148\u5B9A\u4E49\u8FD9\u4E2A\u5BF9\u8C61\u3002\u7531\u4E8E\u5BF9\u8C61\u9075\u5B88\u901A\u7528\u7684\u884C\u4E3A(\u6709\u4E00\u4E2A\u56DE\u8C03\u63A5\u53E3\u53C2\u6570)\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u80FD\u7528\u4E8E\u6240\u6709\u64CD\u4F5C\u7684\u5BF9\u8C61\u3002\u6211\u4EEC\u79F0\u4E4B\u4E3A<code>AsyncJob</code>\u3002</p><blockquote><p>\u6CE8\u610F\uFF1A \u6211\u975E\u5E38\u60F3\u628A\u8FD9\u4E2A\u540D\u5B57\u79F0\u4E4B\u4E3A<code>AsyncTask</code>\u3002\u4F46\u662F\u7531\u4E8E<code>Android</code>\u7CFB\u7EDF\u5DF2\u7ECF\u6709\u4E2A<code>AsyncTask</code>\u7C7B\u4E86\uFF0C \u4E3A\u4E86\u907F\u514D\u6DF7\u6DC6\uFF0C\u6240\u4EE5\u5C31\u7528<code>AsyncJob</code>\u4E86\u3002</p></blockquote><p>\u8BE5\u5BF9\u8C61\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>start()</code>\u51FD\u6570\u6709\u4E2A<code>Callback</code>\u56DE\u8C03\u63A5\u53E3\u53C2\u6570\uFF0C\u5E76\u5F00\u59CB\u6267\u884C\u8BE5\u64CD\u4F5C\u3002 <code>ApiWrapper</code>\u4FEE\u6539\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiWrapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>CatsQueryCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        catsCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        catsCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> uriCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>StoreCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatStored</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        uriCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStoreFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        uriCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76EE\u524D\u770B\u8D77\u6765\u8FD8\u4E0D\u9519\u3002\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528<code>AsyncJob.start()</code>\u6765\u542F\u52A8\u6BCF\u4E2A\u64CD\u4F5C\u4E86\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u4FEE\u6539<code>CatsHelper</code>\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> cutestCatCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span>
                                        <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                            <span class="token annotation punctuation">@Override</span>
                                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                            <span class="token punctuation">}</span>
 
                                            <span class="token annotation punctuation">@Override</span>
                                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                            <span class="token punctuation">}</span>
                                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
 
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8D77\u6765\u6BD4\u524D\u9762\u4E00\u4E2A\u7248\u672C\u66F4\u52A0\u590D\u6742\u554A\uFF0C\u8FD9\u6837\u6709\u5565\u597D\u5904\u554A\uFF1F \u8FD9\u91CC\u5176\u5B9E\u6211\u4EEC\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A<code>AsyncJob</code>\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u548C\u5BA2\u6237\u7AEF\u4EE3\u7801\u7EC4\u5408\u4F7F\u7528\uFF0C\u8FD9\u6837\u5728<code>Activity</code>\u6216\u8005<code>Fragment</code>\u5BA2\u6237\u7AEF\u4EE3\u7801\u4E2D\u5C31\u53EF\u4EE5\u64CD\u4F5C\u8FD9\u4E2A\u8FD4\u56DE\u7684\u5BF9\u8C61\u4E86\u3002 \u4EE3\u7801\u867D\u7136\u76EE\u524D\u770B\u8D77\u6765\u6BD4\u8F83\u590D\u6742\uFF0C\u4E0B\u9762\u6211\u4EEC\u5C31\u6765\u6539\u8FDB\u4E00\u4E0B\u3002</p><h4 id="\u5206\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5206\u89E3" aria-hidden="true">#</a> \u5206\u89E3</h4><p>\u4E0B\u9762\u662F\u6D41\u7A0B\u56FE:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>         <span class="token punctuation">(</span>async<span class="token punctuation">)</span>                 <span class="token punctuation">(</span>sync<span class="token punctuation">)</span>           <span class="token punctuation">(</span>async<span class="token punctuation">)</span>
query <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-&gt;</span> <span class="token class-name">Cat</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Uri</span>
       queryCats              findCutest           store
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8BA9\u4EE3\u7801\u5177\u6709\u53EF\u8BFB\u6027\uFF0C\u6211\u4EEC\u628A\u8FD9\u4E2A\u6D41\u7A0B\u5206\u89E3\u4E3A\u6BCF\u4E2A\u64CD\u4F5C\u3002\u540C\u65F6\u6211\u4EEC\u518D\u8FDB\u4E00\u6B65\u5047\u8BBE\uFF0C\u5982\u679C\u4E00\u4E2A\u64CD\u4F5C\u662F\u5F02\u6B65\u7684\uFF0C\u5219\u6BCF\u4E2A\u8C03\u7528\u8BE5\u5F02\u6B65\u64CD\u4F5C\u7684\u51FD\u6570\u4E5F\u662F\u5F02\u6B65\u7684\u3002\u4F8B\u5982\uFF1A\u5982\u679C\u67E5\u8BE2\u732B\u662F\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5219\u627E\u5230\u6700\u53EF\u7231\u7684\u732B\u64CD\u4F5C\u4E5F\u662F\u5F02\u6B65\u7684\u3002</p><p>\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>AsyncJob</code>\u6765\u628A\u8FD9\u4E9B\u64CD\u4F5C\u5206\u89E3\u4E3A\u4E00\u4E9B\u5C0F\u7684\u64CD\u4F5C\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                catsListAsyncJob<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span><span class="token function">findCutest</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
 
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> cutestCatCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cutest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token annotation punctuation">@Override</span>
                                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
 
                                    <span class="token annotation punctuation">@Override</span>
                                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u4EE3\u7801\u91CF\u591A\u4E86\uFF0C\u4F46\u662F\u770B\u8D77\u6765\u66F4\u52A0\u6E05\u6670\u4E86\u3002 \u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570\u6CA1\u90A3\u4E48\u591A\u5C42\u7EA7\u4E86\uFF0C\u5F02\u6B65\u64CD\u4F5C\u7684\u540D\u5B57\u4E5F\u66F4\u5BB9\u6613\u7406\u89E3\u4E86(<code>catsListAsyncJob</code>,<code>cutestCatAsyncJob</code>, <code>storedUriAsyncJob</code>)\u3002 \u770B\u8D77\u6765\u8FD8\u4E0D\u9519\uFF0C\u4F46\u662F\u8FD8\u53EF\u4EE5\u66F4\u597D\u3002</p><h4 id="\u7B80\u5355\u7684\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u6620\u5C04" aria-hidden="true">#</a> \u7B80\u5355\u7684\u6620\u5C04</h4><p>\u5148\u6765\u770B\u770B\u6211\u4EEC\u521B\u5EFA AsyncJob cutestCatAsyncJob \u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                catsListAsyncJob<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span><span class="token function">findCutest</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9 16 \u884C\u4EE3\u7801\u4E2D\uFF0C\u53EA\u6709\u4E00\u884C\u4EE3\u7801\u662F\u6211\u4EEC\u7684\u4E1A\u52A1\u903B\u8F91\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">findCutest</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4ED6\u7684\u4EE3\u7801\u53EA\u662F\u4E3A\u4E86\u542F\u52A8<code>AsyncJob</code>\u5E76\u63A5\u6536\u7ED3\u679C\u548C\u5904\u7406\u5F02\u5E38\u7684\u5E72\u6270\u4EE3\u7801\u3002 \u4F46\u662F\u8FD9\u4E9B\u4EE3\u7801\u662F\u901A\u7528\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u4ED6\u4EEC\u653E\u5230\u5176\u4ED6\u5730\u65B9\u6765\u8BA9\u6211\u4EEC\u66F4\u52A0\u4E13\u6CE8\u4E1A\u52A1\u903B\u8F91\u4EE3\u7801\u3002 \u90A3\u4E48\u5982\u4F55\u5B9E\u73B0\u5462\uFF1F\u9700\u8981\u505A\u4E24\u4EF6\u4E8B\u60C5\uFF1A</p><ul><li>\u901A\u8FC7<code>AsyncJob</code>\u83B7\u53D6\u9700\u8981\u8F6C\u6362\u7684\u7ED3\u679C</li><li>\u8F6C\u6362\u7684\u51FD\u6570</li></ul><p>\u4F46\u662F\u7531\u4E8E<code>Java</code>\u7684\u9650\u5236\uFF0C\u65E0\u6CD5\u628A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u6240\u4EE5\u9700\u8981\u7528\u4E00\u4E2A\u63A5\u53E3\uFF08\u6216\u8005\u7C7B\uFF09\u5E76\u5728\u91CC\u9762\u5B9A\u4E49\u4E00\u4E2A\u8F6C\u6362\u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">R</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7070\u5E38\u7B80\u5355\u3002 \u6709\u4E24\u4E2A\u6CDB\u578B\u7C7B\u578B\u5B9A\u4E49\uFF0C<code>T</code>\u4EE3\u8868\u53C2\u6570\u7684\u7C7B\u578B\uFF1B<code>R</code>\u4EE3\u8868\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u3002</p><p>\u5F53\u6211\u4EEC\u628A<code>AsyncJob</code>\u7684\u7ED3\u679C\u8F6C\u6362\u4E3A\u5176\u4ED6\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u4E00\u4E2A\u7ED3\u679C\u503C\u6620\u5C04\u4E3A\u53E6\u5916\u4E00\u79CD\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u6211\u4EEC\u79F0\u4E4B\u4E3A<code>map</code>\u3002 \u628A\u8BE5\u51FD\u6570\u5B9A\u4E49\u5230<code>AsyncJob</code>\u7C7B\u4E2D\u6BD4\u8F83\u65B9\u4FBF\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u901A\u8FC7<code>this</code>\u6765\u8BBF\u95EE<code>AsyncJob</code>\u5BF9\u8C61\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> source <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                source<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">T</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">R</span> mapped <span class="token operator">=</span> func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        callback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>mapped<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8D77\u6765\u4E0D\u9519\uFF0C \u73B0\u5728\u7684<code>CatsHelper</code>\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> catsListAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> cutestCatCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cutest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token annotation punctuation">@Override</span>
                                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
 
                                    <span class="token annotation punctuation">@Override</span>
                                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cutestCatCallback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B0\u521B\u5EFA\u7684<code>AsyncJob cutestCatAsyncJob()</code>\u7684\u4EE3\u7801\u53EA\u67096\u884C\uFF0C\u5E76\u4E14\u53EA\u6709\u4E00\u5C42\u5D4C\u5957\u3002</p><h4 id="\u9AD8\u7EA7\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u7EA7\u6620\u5C04" aria-hidden="true">#</a> \u9AD8\u7EA7\u6620\u5C04</h4><p>\u4F46\u662F<code>AsyncJob storedUriAsyncJob()</code>\u770B\u8D77\u6765\u8FD8\u662F\u975E\u5E38\u7CDF\u7CD5\u3002 \u8FD9\u91CC\u4E5F\u80FD\u4F7F\u7528\u6620\u5C04\u5417\uFF1F \u4E0B\u9762\u5C31\u6765\u8BD5\u8BD5\u5427\uFF01</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> catsListAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">,</span> <span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Uri</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \u5C06\u4F1A\u5BFC\u81F4\u65E0\u6CD5\u7F16\u8BD1</span>
        <span class="token comment">//      Incompatible types:</span>
        <span class="token comment">//      Required: Uri</span>
        <span class="token comment">//      Found: AsyncJob&lt;Uri&gt;                </span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u54CE\u3002\u3002\u3002 \u770B\u8D77\u6765\u6CA1\u8FD9\u4E48\u7B80\u5355\u554A\uFF0C \u4E0B\u9762\u4FEE\u590D\u8FD4\u56DE\u7684\u7C7B\u578B\u518D\u8BD5\u4E00\u6B21\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> catsListAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AsyncJob</span><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">,</span> <span class="token class-name">AsyncJob</span><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
        <span class="token comment">//^^^^^^^^^^^^^^^^^^^^^^^ \u5C06\u4F1A\u5BFC\u81F4\u65E0\u6CD5\u7F16\u8BD1</span>
        <span class="token comment">//      Incompatible types:</span>
        <span class="token comment">//      Required: AsyncJob&lt;Uri&gt;</span>
        <span class="token comment">//      Found: AsyncJob&lt;AsyncJob&lt;Uri&gt;&gt;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u53EA\u80FD\u62FF\u5230<code>AsyncJob&lt;AsyncJob&gt;</code> \u3002\u770B\u6765\u8FD8\u9700\u8981\u66F4\u8FDB\u4E00\u6B65\u3002\u6211\u4EEC\u9700\u8981\u538B\u7F29\u4E00\u5C42<code>AsyncJob</code>\uFF0C\u628A\u4E24\u4E2A\u5F02\u6B65\u64CD\u4F5C\u5F53\u505A\u4E00\u4E2A\u5355\u4E00\u7684\u5F02\u6B65\u64CD\u4F5C\u6765\u5BF9\u5F85\u3002 \u73B0\u5728\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u53C2\u6570\u4E3A<code>AsyncJob</code>\u7684<code>map</code>\u8F6C\u6362\u64CD\u4F5C\u800C\u4E0D\u662F<code>R</code>\u3002\u8BE5\u64CD\u4F5C\u7C7B\u4F3C\u4E8E<code>map</code>\uFF0C\u4F46\u662F\u8BE5\u64CD\u4F5C\u4F1A\u628A\u5D4C\u5957\u7684<code>AsyncJob</code>\u538B\u7F29\u4E3A<code>flatten</code>\u4E00\u5C42<code>AsyncJob</code>. \u6211\u4EEC\u79F0\u4E4B\u4E3A<code>flatMap</code>\uFF0C\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> source <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                source<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">T</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">R</span> mapped <span class="token operator">=</span> func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        callback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>mapped<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">AsyncJob</span><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> source <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                source<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">T</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> mapped <span class="token operator">=</span> func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mapped<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">R</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                callback<span class="token punctuation">.</span><span class="token function">onResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
 
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8D77\u6765\u6709\u5F88\u591A\u5E72\u6270\u4EE3\u7801\uFF0C\u4F46\u662F\u8FD8\u597D\u8FD9\u4E9B\u4EE3\u7801\u5728\u5BA2\u6237\u7AEF\u4EE3\u7801\u4E2D\u5E76\u4E0D\u4F1A\u51FA\u73B0\u3002 \u73B0\u5728\u6211\u4EEC\u7684<code>CatsHelper</code>\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> catsListAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">,</span> <span class="token class-name">AsyncJob</span><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u628A\u533F\u540D\u7C7B\u4FEE\u6539\u4E3A<code>Java 8</code>\u7684<code>lambdas</code>\u8868\u8FBE\u5F0F\uFF08\u903B\u8F91\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u662F\u8BA9\u4EE3\u7801\u770B\u8D77\u6765\u66F4\u6E05\u6670\u70B9\uFF09\u5C31\u5F88\u5BB9\u6613\u53D1\u73B0\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListAsyncJob <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatAsyncJob <span class="token operator">=</span> catsListAsyncJob<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>cats <span class="token operator">-&gt;</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AsyncJob</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriAsyncJob <span class="token operator">=</span> cutestCatAsyncJob<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>cat <span class="token operator">-&gt;</span> apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriAsyncJob<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u770B\u8D77\u6765\u662F\u4E0D\u662F\u5C31\u5F88\u6E05\u6670\u4E86\u3002 \u8FD9\u4E2A\u4EE3\u7801\u548C\u521A\u521A\u5F00\u5934\u7684\u963B\u585E\u5F0F\u4EE3\u7801\u662F\u4E0D\u662F\u975E\u5E38\u76F8\u4F3C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">Uri</span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Cat</span> cutest <span class="token operator">=</span> <span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Uri</span> savedUri <span class="token operator">=</span> api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cutest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> savedUri<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u4ED6\u4EEC\u4E0D\u4EC5\u903B\u8F91\u662F\u4E00\u6837\u7684\uFF0C\u8BED\u4E49\u4E0A\u4E5F\u662F\u4E00\u6837\u7684\u3002 \u592A\u68D2\u4E86\uFF01 \u540C\u65F6\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4F7F\u7528\u7EC4\u5408\u64CD\u4F5C\uFF0C\u73B0\u5728\u628A\u4E24\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7EC4\u5408\u4E00\u8D77\u5E76\u8FD4\u8FD8\u53E6\u5916\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u3002 \u5F02\u5E38\u5904\u7406\u4E5F\u4F1A\u4F20\u9012\u5230\u6700\u7EC8\u7684\u56DE\u8C03\u63A5\u53E3\u4E2D\u3002 \u4E0B\u9762\u6765\u770B\u770B<code>RxJava</code>\u5427\u3002 \u4F60\u6CA1\u5FC5\u8981\u628A\u4E0A\u9762\u4EE3\u7801\u5E94\u7528\u5230\u60A8\u7684\u9879\u76EE\u4E2D\u53BB\uFF0C \u8FD9\u4E9B\u7B80\u5355\u7684\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u4EE3\u7801\u53EA\u662F <code>RxJava</code>\u7684\u4E00\u90E8\u5206\u3002 \u53EA\u6709\u4E00\u4E9B\u540D\u5B57\u4E0A\u7684\u4E0D\u540C\uFF1A</p><ul><li><code>AsyncJob</code>\u7B49\u540C\u4E8E<code>Observable</code>\uFF0C\u4E0D\u4EC5\u4EC5\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u7ED3\u679C\uFF0C\u8FD8\u53EF\u4EE5\u8FD4\u56DE\u4E00\u7CFB\u5217\u7684\u7ED3\u679C\uFF0C\u5F53\u7136\u4E5F\u53EF\u80FD\u6CA1\u6709\u7ED3\u679C\u8FD4\u56DE\u3002</li><li><code>Callback</code>\u7B49\u540C\u4E8E<code>Observer</code>\uFF0C\u9664\u4E86<code>onNext(T t)</code>, <code>onError(Throwable t)</code>\u4EE5\u5916\uFF0C\u8FD8\u6709\u4E00\u4E2A<code>onCompleted()</code>\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u5728\u7ED3\u675F\u7EE7\u7EED\u8FD4\u56DE\u7ED3\u679C\u7684\u65F6\u5019\u901A\u77E5<code>Observable</code>\u3002</li><li><code>abstract void start(Callback callback)</code>\u548C<code>Subscription subscribe(final Observer observer)</code>\u7C7B\u4F3C\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>Subscription</code>\uFF0C\u5982\u679C\u4F60\u4E0D\u518D\u9700\u8981\u540E\u9762\u7684\u7ED3\u679C\u4E86\uFF0C\u53EF\u4EE5\u53D6\u6D88\u8BE5\u4EFB\u52A1\u3002</li></ul><p>\u4E0B\u9762\u662F<code>RxJava</code>\u7248\u672C\u7684\u4EE3\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiWrapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">Api</span> api<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryCats</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                api<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>CatsQueryCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatListReceived</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onQueryFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        subscriber<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                api<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Api<span class="token punctuation">.</span>StoreCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCatStored</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
 
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStoreFailed</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        subscriber<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CatsHelper</span> <span class="token punctuation">{</span>
 
    <span class="token class-name">ApiWrapper</span> apiWrapper<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveTheCutestCat</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> catsListObservable <span class="token operator">=</span> apiWrapper<span class="token punctuation">.</span><span class="token function">queryCats</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cutestCatObservable <span class="token operator">=</span> catsListObservable<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Cat</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">CatsHelper</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findCutest</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> storedUriObservable <span class="token operator">=</span> cutestCatObservable<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Uri</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Uri</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Cat</span> cat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> apiWrapper<span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> storedUriObservable<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token class-name">Cat</span> <span class="token function">findCutest</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cat</span><span class="token punctuation">&gt;</span></span> cats<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>cats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A Observable \u66FF\u6362\u4E3A AsyncJob \u540E \u4ED6\u4EEC\u7684\u4EE3\u7801\u662F\u4E00\u6837\u7684\u3002</p><h4 id="\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u8BBA" aria-hidden="true">#</a> \u7ED3\u8BBA</h4><p>\u901A\u8FC7\u7B80\u5355\u7684\u8F6C\u6362\u64CD\u4F5C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u5F02\u6B65\u64CD\u4F5C\u62BD\u8C61\u51FA\u6765\u3002\u8FD9\u79CD\u62BD\u8C61\u7684\u7ED3\u679C\u53EF\u4EE5\u50CF\u64CD\u4F5C\u7B80\u5355\u7684\u963B\u585E\u51FD\u6570\u4E00\u6837\u6765\u64CD\u4F5C\u5F02\u6B65\u64CD\u4F5C\u5E76\u7EC4\u5408\u5F02\u6B65\u64CD\u4F5C\u3002\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u6446\u8131\u5C42\u5C42\u5D4C\u5957\u7684\u56DE\u8C03\u63A5\u53E3\u4E86\uFF0C\u5E76\u4E14\u4E0D\u7528\u624B\u5DE5\u7684\u53BB\u5904\u7406\u6BCF\u6B21\u5F02\u6B65\u64CD\u4F5C\u7684\u5F02\u5E38\u3002</p><p>\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u975E\u5E38\u597D\uFF0C\u5EFA\u8BAE\u591A\u770B\u51E0\u904D\uFF0C\u52A0\u6DF1\u7406\u89E3\uFF0C\u53EF\u80FD\u628A\u8FD9\u4E2A\u4F8B\u5B50\u653E\u5728\u8FD9\u91CC\u5E76\u4E0D\u592A\u597D\uFF0C\u628A\u5B83\u653E\u5230\u5F00\u59CB\u8BB2\u4E4B\u524D\u53EF\u80FD\u66F4\u5BB9\u6613\u7406\u89E3\uFF0C\u4F46\u662F\u6211\u89C9\u5F97\uFF0C\u4ECB\u7ECD\u5B8C\u6982\u5FF5\u3001\u4F7F\u7528\u65B9\u6CD5\u548C\u57FA\u672C\u7684\u64CD\u4F5C\u7B26\u540E\uFF0C\u6211\u4EEC\u53EF\u80FD\u5E76\u4E0D\u80FD\u7406\u89E3\u64CD\u4F5C\u7B26\u7684\u539F\u7406\u548C\u4F5C\u7528\u3002\u4E4B\u524D\u770B\u5B8C\u64CD\u4F5C\u7B26\u539F\u7406\u540E\u8FF7\u8FF7\u7CCA\u7CCA\u7684\u72B6\u6001\u518D\u6765\u770B\u8FD9\u4E2A\u4F8B\u5B50\u4F1A\u8C41\u7136\u5F00\u6717\u3002</p>`,101),k=s("\u8FD9\u91CC\u4E5F\u611F\u8C22\u725B\u903C\u7684\u4F5C\u8005"),d={href:"https://github.com/yarikx",target:"_blank",rel:"noopener noreferrer"},r=s("Yaroslav"),v=s("(\u4E5F\u662F"),m=n("code",null,"RxAndroid",-1),b=s("\u9879\u76EE\u7684\u4E00\u4E2A\u91CD\u8981\u53C2\u4E0E\u8005)\u80FD\u7528\u8FD9\u4E48\u725B\u903C\u7684\u4F8B\u5B50\uFF0C\u8BB2\u89E3\u7684\u5982\u6B64\u900F\u5F7B\u3002"),y=p(`<p>\u5982\u679C\u5ACC\u4E0A\u9762\u7684\u4EE3\u7801\u9EBB\u70E6\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E0B\u9762\u7684\u4F8B\u5B50\u770B:</p><p>\u5047\u8BBE\u6709\u8FD9\u6837\u4E00\u4E2A\u9700\u6C42\uFF1A\u754C\u9762\u4E0A\u6709\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u89C6\u56FE<code>imageCollectorView</code>\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u663E\u793A\u591A\u5F20\u56FE\u7247\uFF0C\u5E76\u80FD\u4F7F\u7528<code>addImage(Bitmap)</code> \u65B9\u6CD5\u6765\u4EFB\u610F\u589E\u52A0\u663E\u793A\u7684\u56FE\u7247\u3002\u73B0\u5728\u9700\u8981\u7A0B\u5E8F\u5C06\u4E00\u4E2A\u7ED9\u51FA\u7684\u76EE\u5F55\u6570\u7EC4<code>File[] folders</code>\u4E2D\u6BCF\u4E2A\u76EE\u5F55\u4E0B\u7684<code>png</code>\u56FE\u7247\u90FD\u52A0\u8F7D\u51FA\u6765\u5E76\u663E\u793A\u5728<code>imageCollectorView</code>\u4E2D\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7531\u4E8E\u8BFB\u53D6\u56FE\u7247\u7684\u8FD9\u4E00\u8FC7\u7A0B\u8F83\u4E3A\u8017\u65F6\uFF0C\u9700\u8981\u653E\u5728\u540E\u53F0\u6267\u884C\uFF0C\u800C\u56FE\u7247\u7684\u663E\u793A\u5219\u5FC5\u987B\u5728<code>UI</code>\u7EBF\u7A0B\u6267\u884C\u3002\u5E38\u7528\u7684\u5B9E\u73B0\u65B9\u5F0F\u6709\u591A\u79CD\uFF0C\u6211\u8FD9\u91CC\u8D34\u51FA\u5176\u4E2D\u4E00\u79CD\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> folder <span class="token operator">:</span> folders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> folder<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token function">getBitmapFromFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">runOnUiThread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            imageCollectorView<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5982\u679C\u4F7F\u7528 RxJava \uFF0C\u5B9E\u73B0\u65B9\u5F0F\u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>folders<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">,</span> <span class="token class-name">Bitmap</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Bitmap</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getBitmapFromFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span><span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span><span class="token class-name">AndroidSchedulers</span><span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bitmap</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Bitmap</span> bitmap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            imageCollectorView<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4F4D\u8BF4\u8BDD\u4E86\uFF1A\u300E\u4F60\u8FD9\u4EE3\u7801\u660E\u660E\u53D8\u591A\u4E86\u554A\uFF01\u7B80\u6D01\u4E2A\u6BDB\u554A\uFF01\u300F\u5927\u5144\u5F1F\u4F60\u6D88\u6D88\u6C14\uFF0C\u6211\u8BF4\u7684\u662F\u903B\u8F91\u7684\u7B80\u6D01\uFF0C\u4E0D\u662F\u5355\u7EAF\u7684\u4EE3\u7801\u91CF\u5C11\uFF08\u903B\u8F91\u7B80\u6D01\u624D\u662F\u63D0\u5347\u8BFB\u5199\u4EE3\u7801\u901F\u5EA6\u7684\u5FC5\u6740\u6280\u5BF9\u4E0D\uFF1F\uFF09\u3002\u89C2\u5BDF\u4E00\u4E0B\u4F60\u4F1A\u53D1\u73B0\uFF0C <code>RxJava</code>\u7684\u8FD9\u4E2A\u5B9E\u73B0\uFF0C\u662F\u4E00\u6761\u4ECE\u4E0A\u5230\u4E0B\u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u6CA1\u6709\u4EFB\u4F55\u5D4C\u5957\uFF0C\u8FD9\u5728\u903B\u8F91\u7684\u7B80\u6D01\u6027\u4E0A\u662F\u5177\u6709\u4F18\u52BF\u7684\u3002\u5F53\u9700\u6C42\u53D8\u5F97\u590D\u6742\u65F6\uFF0C\u8FD9\u79CD\u4F18\u52BF\u5C06\u66F4\u52A0\u660E\u663E\uFF08\u8BD5\u60F3\u5982\u679C\u8FD8\u8981\u6C42\u53EA\u9009\u53D6\u524D<code>10</code>\u5F20\u56FE\u7247\uFF0C\u5E38\u89C4\u65B9\u5F0F\u8981\u600E\u4E48\u529E\uFF1F\u5982\u679C\u6709\u66F4\u591A\u8FD9\u6837\u90A3\u6837\u7684\u8981\u6C42\u5462\uFF1F\u518D\u8BD5\u60F3\uFF0C\u5728\u8FD9\u4E00\u5927\u5806\u9700\u6C42\u5B9E\u73B0\u5B8C\u4E24\u4E2A\u6708\u4E4B\u540E\u9700\u8981\u6539\u529F\u80FD\uFF0C\u5F53\u4F60\u7FFB\u56DE\u8FD9\u91CC\u770B\u5230\u81EA\u5DF1\u5F53\u521D\u5199\u4E0B\u7684\u90A3\u4E00\u7247\u8FF7\u4E4B\u7F29\u8FDB\uFF0C\u4F60\u80FD\u4FDD\u8BC1\u81EA\u5DF1\u5C06\u8FC5\u901F\u770B\u61C2\uFF0C\u800C\u4E0D\u662F\u5BF9\u7740\u4EE3\u7801\u91CD\u65B0\u634B\u4E00\u904D\u601D\u8DEF\uFF1F\uFF09\u3002</p>`,6),g=s("\u66F4\u591A\u5185\u5BB9\u8BF7\u770B\u4E0B\u4E00\u7BC7\u6587\u7AE0"),w={href:"https://github.com/CharonChui/AndroidNote/blob/master/RxJavaPart/RxJava%E8%AF%A6%E8%A7%A3(%E4%B8%8B).md",title:"RxJava\u8BE6\u89E3(\u4E0B)",target:"_blank",rel:"noopener noreferrer"},C=s("RxJava\u8BE6\u89E3(\u4E0B)"),f=n("p",null,"\u53C2\u8003:",-1),h={href:"https://github.com/ReactiveX/RxJava/wiki",target:"_blank",rel:"noopener noreferrer"},A=s("RxJava Wiki"),J={href:"http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/",target:"_blank",rel:"noopener noreferrer"},x=s("Grokking RxJava, Part 1: The Basics"),O={href:"https://yarikx.github.io/NotRxJava/",target:"_blank",rel:"noopener noreferrer"},j=s("NotRxJava"),U={href:"http://tomstechnicalblog.blogspot.hk/2016/07/when-not-to-use-rxjava.html",target:"_blank",rel:"noopener noreferrer"},L=s("When Not to Use RxJava"),R={href:"http://gank.io/post/560e15be2dca930e00da1083",target:"_blank",rel:"noopener noreferrer"},_=s("\u7ED9 Android \u5F00\u53D1\u8005\u7684 RxJava \u8BE6\u89E3"),E={href:"http://blog.chengyunfeng.com/?p=984",target:"_blank",rel:"noopener noreferrer"},q=s("Google Agera \u4ECE\u5165\u95E8\u5230\u653E\u5F03"),F=n("hr",null,null,-1),S=n("ul",null,[n("li",null,"\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com"),n("li",null,"Good Luck!")],-1);function T(W,Q){const a=e("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[k,n("a",d,[r,t(a)]),v,m,b]),y,n("p",null,[g,n("a",w,[C,t(a)])]),f,n("ul",null,[n("li",null,[n("a",h,[A,t(a)])]),n("li",null,[n("a",J,[x,t(a)])]),n("li",null,[n("a",O,[j,t(a)])]),n("li",null,[n("a",U,[L,t(a)])]),n("li",null,[n("a",R,[_,t(a)])]),n("li",null,[n("a",E,[q,t(a)])])]),F,S])}var B=c(i,[["render",T],["__file","RxJava\u8BE6\u89E3(\u4E2D).html.vue"]]);export{B as default};
