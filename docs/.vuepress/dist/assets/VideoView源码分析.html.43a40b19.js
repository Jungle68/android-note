import{_ as n,o as s,c as a,e as t}from"./app.89e8a229.js";const e={},p=t(`<h1 id="videoview\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#videoview\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> VideoView\u6E90\u7801\u5206\u6790</h1><h2 id="videoview" tabindex="-1"><a class="header-anchor" href="#videoview" aria-hidden="true">#</a> VideoView</h2><p>\u57FA\u4E8EAndroid4.4\u6E90\u7801\u8FDB\u884C\u5206\u6790</p><ul><li><p>\u7B80\u4ECB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Displays a video file.  The VideoView class
 * can load images from various sources (such as resources or content
 * providers), takes care of computing its measurement from the video so that
 * it can be used in any layout manager, and provides various display options
 * such as scaling and tinting.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>Note: VideoView does not retain its full state when going into the
 * background.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>  In particular, it does not restore the current play state,
 * play position, selected tracks, or any subtitle tracks added via
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">addSubtitleSource</span></span> addSubtitleSource()<span class="token punctuation">}</span>.  Applications should
 * save and restore these on their own in
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span><span class="token punctuation">#</span><span class="token field">onSaveInstanceState</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span><span class="token punctuation">#</span><span class="token field">onRestoreInstanceState</span></span><span class="token punctuation">}</span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * Also note that the audio session id (from <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getAudioSessionId</span></span><span class="token punctuation">}</span>) may
 * change from its previously returned value when the VideoView is restored.
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5173\u7CFB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VideoView</span> <span class="token keyword">extends</span> <span class="token class-name">SurfaceView</span>
		<span class="token keyword">implements</span> <span class="token class-name">MediaPlayerControl</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u6210\u5458</p><ul><li><p>\u64AD\u653E\u5668\u6240\u6709\u7684\u72B6\u6001</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// all possible internal states</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_ERROR              <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_IDLE               <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PREPARING          <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PREPARED           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PLAYING            <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PAUSED             <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PLAYBACK_COMPLETED <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8BB0\u5F55\u64AD\u653E\u5668\u72B6\u6001</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// mCurrentState is a VideoView object&#39;s current state.</span>
<span class="token comment">// mTargetState is the state that a method caller intends to reach.</span>
<span class="token comment">// For instance, regardless the VideoView object&#39;s current state,</span>
<span class="token comment">// calling pause() intends to bring the object to a target state</span>
<span class="token comment">// of STATE_PAUSED.</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E3B\u8981\u529F\u80FD\u90E8\u5206</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">SurfaceHolder</span> mSurfaceHolder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">// \u663E\u793A\u56FE\u50CF</span>
<span class="token keyword">private</span> <span class="token class-name">MediaPlayer</span> mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u58F0\u97F3\u3001\u64AD\u653E</span>
<span class="token keyword">private</span> <span class="token class-name">MediaController</span> mMediaController<span class="token punctuation">;</span> <span class="token comment">// \u64AD\u653E\u63A7\u5236</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5176\u4ED6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span>         mVideoWidth<span class="token punctuation">;</span>  <span class="token comment">// \u89C6\u9891\u5BBD\u5EA6 \u5728onVideoSizeChanged() \u548C onPrepared() \u4E2D\u53EF\u4EE5\u5F97\u5230\u5177\u4F53\u5927\u5C0F</span>
<span class="token keyword">private</span> <span class="token keyword">int</span>         mVideoHeight<span class="token punctuation">;</span>  <span class="token comment">//\u89C6\u9891\u9AD8\u5EA6</span>
<span class="token keyword">private</span> <span class="token keyword">int</span>         mSurfaceWidth<span class="token punctuation">;</span> <span class="token comment">// Surface\u5BBD\u5EA6  \u5728SurfaceHolder.Callback.surfaceChanged() \u4E2D\u53EF\u4EE5\u5F97\u5230\u5177\u4F53\u5927\u5C0F</span>
<span class="token keyword">private</span> <span class="token keyword">int</span>         mSurfaceHeight<span class="token punctuation">;</span> <span class="token comment">// Surface\u9AD8\u5EA6</span>
<span class="token keyword">private</span> <span class="token keyword">int</span>         mSeekWhenPrepared<span class="token punctuation">;</span>  <span class="token comment">// recording the seek position while preparing</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u5177\u4F53\u5B9E\u73B0</p><ul><li><p>\u6784\u9020\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FDB\u884C\u4E00\u4E9B\u5FC5\u8981\u4FE1\u606F\u7684\u521D\u59CB\u5316\u8BBE\u7F6E</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mVideoWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	mVideoHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	
	<span class="token comment">// \u901A\u8FC7SurfaceHolder\u53BB\u63A7\u5236SurfaceView</span>
	<span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addCallback</span><span class="token punctuation">(</span>mSHCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Deprecated. this is ignored, this value is set automatically when needed.Android3.0\u4EE5\u4E0A\u4F1A\u81EA\u52A8\u8BBE\u7F6E\uFF0C\u4F46\u662F\u4E3A\u4E86\u517C\u5BB9\u8FD8\u9700\u8BBE\u7F6E</span>
	<span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span><span class="token punctuation">.</span>SURFACE_TYPE_PUSH_BUFFERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">setFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// \u5B57\u5E55\u76F8\u5173\uFF0C\u7528\u4E0D\u5230</span>
	mPendingSubtitleTracks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pair</span><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
	mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SurfaceHolder.Callback\u6E90\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span> mSHCallback <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceChanged</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">,</span> <span class="token keyword">int</span> format<span class="token punctuation">,</span>
								<span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		mSurfaceWidth <span class="token operator">=</span> w<span class="token punctuation">;</span>
		mSurfaceHeight <span class="token operator">=</span> h<span class="token punctuation">;</span>
		<span class="token keyword">boolean</span> isValidState <span class="token operator">=</span>  <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">boolean</span> hasValidSize <span class="token operator">=</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">==</span> w <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">==</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> isValidState <span class="token operator">&amp;&amp;</span> hasValidSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mSeekWhenPrepared <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">seekTo</span><span class="token punctuation">(</span>mSeekWhenPrepared<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u5982\u679C\u5F53\u524D\u5DF2\u7ECF\u662F\u64AD\u653E\u72B6\u6001\u7684\u8BDD\u5C31\u8C03\u7528mediaplaer.start() \u65B9\u6CD5\uFF0C\u5E76\u4E14\u628A\u5F53\u524D\u72B6\u6001\u4EE5\u53CA\u76EE\u6807\u72B6\u6001\u8FDB\u884C\u6539\u53D8</span>
			<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceCreated</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		mSurfaceHolder <span class="token operator">=</span> holder<span class="token punctuation">;</span>
		<span class="token comment">// Surface\u521B\u5EFA\u540E\u5C31\u5F00\u59CB\u8C03\u7528\u64AD\u653E</span>
		<span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceDestroyed</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// after we return from this we can&#39;t use the surface any more</span>
		mSurfaceHolder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">release</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u91CD\u5199onMeasure()\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoHeight<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// ....\u6839\u636E\u89C6\u9891\u7684\u5BBD\u9AD8\u6BD4\u8FDB\u884C\u5904\u7406\uFF0C \u4E3A\u4E86\u66F4\u597D\u7684\u5BBD\u5C55\uFF0C\u63D0\u4F9B\u4E00\u4E9B\u7528\u6237\u80FD\u81EA\u5DF1\u9009\u62E9\u7684\u6A21\u5F0F\uFF0C\u4E00\u822C\u4F1A\u53E6\u5916\u63D0\u4F9B\u65B9\u6CD5, \u8FD9\u90E8\u5206\u4EE3\u7801\u53EF\u4EE5\u5148\u4E0D\u770B start</span>
	<span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoHeight<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span> widthSpecMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> widthSpecSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> heightSpecMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> heightSpecSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY <span class="token operator">&amp;&amp;</span> heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// the size is fixed</span>
            width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
            height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>

            <span class="token comment">// for compatibility, we adjust size based on aspect ratio</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> mVideoWidth <span class="token operator">*</span> height  <span class="token operator">&lt;</span> width <span class="token operator">*</span> mVideoHeight <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Log.i(&quot;@@@&quot;, &quot;image too wide, correcting&quot;);</span>
                width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> mVideoWidth <span class="token operator">*</span> height  <span class="token operator">&gt;</span> width <span class="token operator">*</span> mVideoHeight <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Log.i(&quot;@@@&quot;, &quot;image too tall, correcting&quot;);</span>
                height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// only the width is fixed, adjust the height to match aspect ratio if possible</span>
            width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
            height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;</span> heightSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// couldn&#39;t match aspect ratio within the constraints</span>
                height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// only the height is fixed, adjust the width to match aspect ratio if possible</span>
            height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
            width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> width <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// couldn&#39;t match aspect ratio within the constraints</span>
                width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// neither the width nor the height are fixed, try to use actual video size</span>
            width <span class="token operator">=</span> mVideoWidth<span class="token punctuation">;</span>
            height <span class="token operator">=</span> mVideoHeight<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;</span> heightSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// too tall, decrease both width and height</span>
                height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
                width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> width <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// too wide, decrease both width and height</span>
                width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
                height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// no size yet, just adopt the given spec sizes</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// end</span>
	
    <span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9644\u4E0AgetDefaultSize()\u6E90\u7801<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Utility to return a default size. Uses the supplied size if the
 * MeasureSpec imposed no constraints. Will get larger if allowed
 * by the MeasureSpec.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">size</span> Default size for this view
 * <span class="token keyword">@param</span> <span class="token parameter">measureSpec</span> Constraints imposed by the parent
 * <span class="token keyword">@return</span> The size this view should be.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">,</span> <span class="token keyword">int</span> measureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> size<span class="token punctuation">;</span>
	<span class="token keyword">int</span> specMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>measureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> specSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>measureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">switch</span> <span class="token punctuation">(</span>specMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>UNSPECIFIED<span class="token operator">:</span>
		result <span class="token operator">=</span> size<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token operator">:</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token operator">:</span>
		result <span class="token operator">=</span> specSize<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u5916\u90E8\u8FDB\u884C\u64AD\u653E\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">setVideoURI</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@hide</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mUri <span class="token operator">=</span> uri<span class="token punctuation">;</span>
	mHeaders <span class="token operator">=</span> headers<span class="token punctuation">;</span>
	mSeekWhenPrepared <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	
	<span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>openVide() \u6E90\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mUri <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mSurfaceHolder <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// not ready for playback just yet, will try again later</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">// Tell the music playback service to pause</span>
	<span class="token comment">// TODO: these constants need to be published somewhere in the framework.</span>
	<span class="token class-name">Intent</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.music.musicservicecommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	i<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;command&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mContext<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// we shouldn&#39;t clear the target state, because somebody might have</span>
	<span class="token comment">// called start() previously // \u5148\u628A\u5DF2\u7ECF\u5B58\u5728\u7684MediaPlayer\u91CA\u653E\u6389\uFF0C\u7136\u540E\u91CD\u65B0\u521B\u5EFA\u4E00\u4E2A, \u4E0D\u4E00\u5B9A\u53EA\u5728SetVideoPath() \u4E2D\u8C03\u7528\uFF0C\u5728\u5176\u4ED6\u5730\u65B9\u4E5F\u4F1A\u8C03\u7528</span>
	<span class="token function">release</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u521B\u5EFA\u4E00\u4E2AMediaPlayer</span>
		mMediaPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// TODO: create SubtitleController in MediaPlayer, but we need</span>
		<span class="token comment">// a context for the subtitle renderers</span>
		<span class="token keyword">final</span> <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">SubtitleController</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubtitleController</span><span class="token punctuation">(</span>
				context<span class="token punctuation">,</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getMediaTimeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
		controller<span class="token punctuation">.</span><span class="token function">registerRenderer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebVttRenderer</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setSubtitleAnchor</span><span class="token punctuation">(</span>controller<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAudioSession <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mMediaPlayer<span class="token punctuation">.</span><span class="token function">setAudioSessionId</span><span class="token punctuation">(</span>mAudioSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			mAudioSession <span class="token operator">=</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token comment">// \u8BBE\u7F6E\u4E00\u4E9B\u5FC5\u8981\u7684\u76D1\u542C</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnPreparedListener</span><span class="token punctuation">(</span>mPreparedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnVideoSizeChangedListener</span><span class="token punctuation">(</span>mSizeChangedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnCompletionListener</span><span class="token punctuation">(</span>mCompletionListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnErrorListener</span><span class="token punctuation">(</span>mErrorListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnInfoListener</span><span class="token punctuation">(</span>mInfoListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnBufferingUpdateListener</span><span class="token punctuation">(</span>mBufferingUpdateListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mCurrentBufferPercentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BA9MediaPlayer\u8FDB\u884C\u64AD\u653E</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> mUri<span class="token punctuation">,</span> mHeaders<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BA9SurfaceView\u8FDB\u884C\u753B\u9762\u663E\u793A</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setDisplay</span><span class="token punctuation">(</span>mSurfaceHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BBE\u7F6E\u97F3\u9891\u7C7B\u578B</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setAudioStreamType</span><span class="token punctuation">(</span><span class="token class-name">AudioManager</span><span class="token punctuation">.</span>STREAM_MUSIC<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u64AD\u653E\u65F6\u5C4F\u5E55\u5E38\u4EAE</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">setScreenOnWhilePlaying</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// Prepares the player for playback, asynchronously. After setting the datasource and the display surface, you need to either call prepare() or prepareAsync(). For streams, you should call prepareAsync(), </span>
		<span class="token comment">// which returns immediately, rather than blocking until enough data has been buffered.</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">prepareAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span><span class="token punctuation">&gt;</span></span> pending<span class="token operator">:</span> mPendingSubtitleTracks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				mMediaPlayer<span class="token punctuation">.</span><span class="token function">addSubtitleSource</span><span class="token punctuation">(</span>pending<span class="token punctuation">.</span>first<span class="token punctuation">,</span> pending<span class="token punctuation">.</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mInfoListener<span class="token punctuation">.</span><span class="token function">onInfo</span><span class="token punctuation">(</span>
						mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_INFO_UNSUPPORTED_SUBTITLE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// we don&#39;t set the target state here either, but preserve the</span>
		<span class="token comment">// target state that was there before.</span>
		mCurrentState <span class="token operator">=</span> STATE_PREPARING<span class="token punctuation">;</span>
		<span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u8C03\u7528\u8FC7SetMediaController() \u65B9\u6CD5\uFF0C\u8FD9\u91CC\u4F1A\u76F4\u63A5\u663E\u793A</span>
		<span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Unable to open content: &quot;</span> <span class="token operator">+</span> mUri<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mCurrentState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
		mTargetState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
		mErrorListener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_ERROR_UNKNOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Unable to open content: &quot;</span> <span class="token operator">+</span> mUri<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mCurrentState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
		mTargetState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
		mErrorListener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_ERROR_UNKNOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		mPendingSubtitleTracks<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>release() \u65B9\u6CD5,\u5728\u5F00\u59CB\u64AD\u653E\u4E00\u4E2A\u89C6\u9891\u7684\u65F6\u5019\u4F1A\u5148\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF0C\u7136\u540E\u91CD\u65B0\u521B\u5EFA\u4E00\u4E2A\uFF0C\u5728SurfaceView\u9500\u6BC1\u7684\u65F6\u5019\u4E5F\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
 * release the media player in any state
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> cleartargetstate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		mPendingSubtitleTracks<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>cleartargetstate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5916\u90E8\u505C\u6B62\u64AD\u653E\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stopPlayback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
		mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5916\u90E8\u8BBE\u7F6E\u63A7\u5236\u680F\u90E8\u5206</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMediaController</span><span class="token punctuation">(</span><span class="token class-name">MediaController</span> controller<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	mMediaController <span class="token operator">=</span> controller<span class="token punctuation">;</span>
	<span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// setMediaPlayer(MediaPlayerControl player), \u8BA9MediaPlayer\u76F8\u5E94\u7684\u63A7\u5236\u90E8\u5206\u8C03\u7528\u672C\u7C7B\u4E2D\u7684\u5B9E\u73B0\u65B9\u6CD5</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">setMediaPlayer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">View</span> anchorView <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">View</span> <span class="token operator">?</span>
				<span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
				
		<span class="token comment">// \u521B\u5EFAController\u5E76\u4E14\u4F9D\u636EAnchorView\u7684\u4F4D\u7F6E\u8FDB\u884C\u663E\u793A</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">setAnchorView</span><span class="token punctuation">(</span>anchorView<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>MediaPlayer\u5FC5\u8981\u76D1\u542C</p><ul><li><p>OnVideoSizeChangedListener</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span> mSizeChangedListener <span class="token operator">=</span>
	<span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onVideoSizeChanged</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mVideoWidth <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			mVideoHeight <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u662F\u8BBE\u7F6ESurface\u5206\u8FA8\u7387\uFF0C\u800C\u4E0D\u662F\u8BBE\u7F6E\u89C6\u9891\u64AD\u653E\u7A97\u53E3\u7684\u5927\u5C0F\uFF0C\u89C6\u9891\u64AD\u653E\u7A97\u53E3\u5927\u5C0F\u662F\u7531SurfaceView\u7684\u5E03\u5C40\u63A7\u5236\uFF0C\u8981\u5206\u6E05Surface\u4E0ESurfaceView\u7684\u533A\u522B\uFF0CSurface\u662FWindow\u4E2D\u6574\u4E2A\u7684\u4E00\u4E2A\u63A7\u4EF6(\u53E5\u67C4),</span>
				<span class="token comment">// \u800CSurfaceView\u662F\u4E00\u4E2A\u5305\u542BSurface\u7684View\uFF0CSurfaceView\u8986\u76D6\u5230Surface\u4E0A(\u53EF\u4EE5\u8FD9\u6837\u7406\u89E3)\uFF0C\u6211\u4EEC\u53EA\u80FD\u901A\u8FC7SurfaceView\u6765\u770BSurface\u4E2D\u7684\u5185\u5BB9,\u81F3\u4E8E\u5728SurfaceView\u663E\u793A\u4E4B\u5916\u7684Surface\u6211\u4EEC\u662F\u4E0D\u53EF\u89C1\u7684.</span>
				<span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> mVideoHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>OnPreparedListener</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span> mPreparedListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mCurrentState <span class="token operator">=</span> STATE_PREPARED<span class="token punctuation">;</span>

		<span class="token comment">// Get the capabilities of the player for this stream</span>
		<span class="token class-name">Metadata</span> data <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>METADATA_ALL<span class="token punctuation">,</span>
								  <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>BYPASS_METADATA_FILTER<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mCanPause <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>PAUSE_AVAILABLE<span class="token punctuation">)</span>
					<span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>PAUSE_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mCanSeekBack <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_BACKWARD_AVAILABLE<span class="token punctuation">)</span>
					<span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_BACKWARD_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mCanSeekForward <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_FORWARD_AVAILABLE<span class="token punctuation">)</span>
					<span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_FORWARD_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			mCanPause <span class="token operator">=</span> mCanSeekBack <span class="token operator">=</span> mCanSeekForward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mOnPreparedListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mOnPreparedListener<span class="token punctuation">.</span><span class="token function">onPrepared</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mMediaController<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mVideoWidth <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mVideoHeight <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> seekToPosition <span class="token operator">=</span> mSeekWhenPrepared<span class="token punctuation">;</span>  <span class="token comment">// mSeekWhenPrepared may be changed after seekTo() call</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>seekToPosition <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">seekTo</span><span class="token punctuation">(</span>seekToPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">//Log.i(&quot;@@@@&quot;, &quot;video size: &quot; + mVideoWidth +&quot;/&quot;+ mVideoHeight);</span>
			<span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> mVideoHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mSurfaceWidth <span class="token operator">==</span> mVideoWidth <span class="token operator">&amp;&amp;</span> mSurfaceHeight <span class="token operator">==</span> mVideoHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// We didn&#39;t actually change the size (it was already at the size</span>
				<span class="token comment">// we need), so we won&#39;t get a &quot;surface changed&quot; callback, so</span>
				<span class="token comment">// start the video here instead of in the callback.</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
						   <span class="token punctuation">(</span>seekToPosition <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				   <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					   <span class="token comment">// Show the media controls when we&#39;re paused into a video and make &#39;em stick.</span>
					   mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				   <span class="token punctuation">}</span>
			   <span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// We don&#39;t know the video size yet, but should start anyway.</span>
			<span class="token comment">// The video size might be reported to us later.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>OnCompletionListener</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnCompletionListener</span> mCompletionListener <span class="token operator">=</span>
	<span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnCompletionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompletion</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mCurrentState <span class="token operator">=</span> STATE_PLAYBACK_COMPLETED<span class="token punctuation">;</span>
		mTargetState <span class="token operator">=</span> STATE_PLAYBACK_COMPLETED<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mOnCompletionListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mOnCompletionListener<span class="token punctuation">.</span><span class="token function">onCompletion</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Touch\u4EE5\u53CAKey\u7684\u76D1\u542C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u63A7\u5236MediaController\u7684\u663E\u793A\u4E0E\u9690\u85CF</span>
		<span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>toggleMediaControlsVisiblity</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController<span class="token punctuation">.</span><span class="token function">isShowing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Key</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onKeyDown</span><span class="token punctuation">(</span><span class="token keyword">int</span> keyCode<span class="token punctuation">,</span> <span class="token class-name">KeyEvent</span> event<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">boolean</span> isKeyCodeSupported <span class="token operator">=</span> keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_BACK <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_UP <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_DOWN <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_MUTE <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MENU <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_CALL <span class="token operator">&amp;&amp;</span>
								 keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_ENDCALL<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isKeyCodeSupported <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_HEADSETHOOK <span class="token operator">||</span>
				keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY_PAUSE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_STOP
				<span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PAUSE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onKeyDown</span><span class="token punctuation">(</span>keyCode<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><h1 id="\u534E\u4E3D\u4E3D\u7684\u5206\u5272\u7EBF-\u4E0A\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u534E\u4E3D\u4E3D\u7684\u5206\u5272\u7EBF-\u4E0A\u6E90\u7801" aria-hidden="true">#</a> \u534E\u4E3D\u4E3D\u7684\u5206\u5272\u7EBF \u4E0A\u6E90\u7801</h1><hr><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</span>

<span class="token doc-comment comment">/**
 * Displays a video file.  The VideoView class
 * can load images from various sources (such as resources or content
 * providers), takes care of computing its measurement from the video so that
 * it can be used in any layout manager, and provides various display options
 * such as scaling and tinting.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>Note: VideoView does not retain its full state when going into the
 * background.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>  In particular, it does not restore the current play state,
 * play position, selected tracks, or any subtitle tracks added via
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">addSubtitleSource</span></span> addSubtitleSource()<span class="token punctuation">}</span>.  Applications should
 * save and restore these on their own in
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span><span class="token punctuation">#</span><span class="token field">onSaveInstanceState</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span><span class="token class-name">Activity</span><span class="token punctuation">#</span><span class="token field">onRestoreInstanceState</span></span><span class="token punctuation">}</span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * Also note that the audio session id (from <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getAudioSessionId</span></span><span class="token punctuation">}</span>) may
 * change from its previously returned value when the VideoView is restored.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VideoView</span> <span class="token keyword">extends</span> <span class="token class-name">SurfaceView</span>
        <span class="token keyword">implements</span> <span class="token class-name">MediaPlayerControl</span><span class="token punctuation">,</span> <span class="token class-name">SubtitleController<span class="token punctuation">.</span>Anchor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> TAG <span class="token operator">=</span> <span class="token string">&quot;VideoView&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// settable by the client</span>
    <span class="token keyword">private</span> <span class="token class-name">Uri</span>         mUri<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> mHeaders<span class="token punctuation">;</span>

    <span class="token comment">// all possible internal states</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_ERROR              <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_IDLE               <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PREPARING          <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PREPARED           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PLAYING            <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PAUSED             <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STATE_PLAYBACK_COMPLETED <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token comment">// mCurrentState is a VideoView object&#39;s current state.</span>
    <span class="token comment">// mTargetState is the state that a method caller intends to reach.</span>
    <span class="token comment">// For instance, regardless the VideoView object&#39;s current state,</span>
    <span class="token comment">// calling pause() intends to bring the object to a target state</span>
    <span class="token comment">// of STATE_PAUSED.</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>

    <span class="token comment">// All the stuff we need for playing and showing a video</span>
    <span class="token keyword">private</span> <span class="token class-name">SurfaceHolder</span> mSurfaceHolder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer</span> mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mAudioSession<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mVideoWidth<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mVideoHeight<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mSurfaceWidth<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mSurfaceHeight<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MediaController</span> mMediaController<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">OnCompletionListener</span> mOnCompletionListener<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span> mOnPreparedListener<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mCurrentBufferPercentage<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">OnErrorListener</span> mOnErrorListener<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">OnInfoListener</span>  mOnInfoListener<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>         mSeekWhenPrepared<span class="token punctuation">;</span>  <span class="token comment">// recording the seek position while preparing</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     mCanPause<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     mCanSeekBack<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     mCanSeekForward<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** Subtitle rendering widget overlaid on top of the video. */</span>
    <span class="token keyword">private</span> <span class="token class-name">RenderingWidget</span> mSubtitleWidget<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** Listener for changes to subtitle data, used to redraw when needed. */</span>
    <span class="token keyword">private</span> <span class="token class-name">RenderingWidget<span class="token punctuation">.</span>OnChangedListener</span> mSubtitlesChangedListener<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">VideoView</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//Log.i(&quot;@@@@&quot;, &quot;onMeasure(&quot; + MeasureSpec.toString(widthMeasureSpec) + &quot;, &quot;</span>
        <span class="token comment">//        + MeasureSpec.toString(heightMeasureSpec) + &quot;)&quot;);</span>

        <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>mVideoHeight<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">int</span> widthSpecMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> widthSpecSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> heightSpecMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> heightSpecSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY <span class="token operator">&amp;&amp;</span> heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// the size is fixed</span>
                width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
                height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>

                <span class="token comment">// for compatibility, we adjust size based on aspect ratio</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span> mVideoWidth <span class="token operator">*</span> height  <span class="token operator">&lt;</span> width <span class="token operator">*</span> mVideoHeight <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//Log.i(&quot;@@@&quot;, &quot;image too wide, correcting&quot;);</span>
                    width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> mVideoWidth <span class="token operator">*</span> height  <span class="token operator">&gt;</span> width <span class="token operator">*</span> mVideoHeight <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//Log.i(&quot;@@@&quot;, &quot;image too tall, correcting&quot;);</span>
                    height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// only the width is fixed, adjust the height to match aspect ratio if possible</span>
                width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
                height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;</span> heightSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// couldn&#39;t match aspect ratio within the constraints</span>
                    height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// only the height is fixed, adjust the width to match aspect ratio if possible</span>
                height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
                width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> width <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// couldn&#39;t match aspect ratio within the constraints</span>
                    width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// neither the width nor the height are fixed, try to use actual video size</span>
                width <span class="token operator">=</span> mVideoWidth<span class="token punctuation">;</span>
                height <span class="token operator">=</span> mVideoHeight<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;</span> heightSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// too tall, decrease both width and height</span>
                    height <span class="token operator">=</span> heightSpecSize<span class="token punctuation">;</span>
                    width <span class="token operator">=</span> height <span class="token operator">*</span> mVideoWidth <span class="token operator">/</span> mVideoHeight<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST <span class="token operator">&amp;&amp;</span> width <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// too wide, decrease both width and height</span>
                    width <span class="token operator">=</span> widthSpecSize<span class="token punctuation">;</span>
                    height <span class="token operator">=</span> width <span class="token operator">*</span> mVideoHeight <span class="token operator">/</span> mVideoWidth<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// no size yet, just adopt the given spec sizes</span>
        <span class="token punctuation">}</span>
        <span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInitializeAccessibilityEvent</span><span class="token punctuation">(</span><span class="token class-name">AccessibilityEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onInitializeAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token class-name">VideoView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInitializeAccessibilityNodeInfo</span><span class="token punctuation">(</span><span class="token class-name">AccessibilityNodeInfo</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onInitializeAccessibilityNodeInfo</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token class-name">VideoView</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">resolveAdjustedSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> desiredSize<span class="token punctuation">,</span> <span class="token keyword">int</span> measureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span>desiredSize<span class="token punctuation">,</span> measureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initVideoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mVideoWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        mVideoHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addCallback</span><span class="token punctuation">(</span>mSHCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span><span class="token punctuation">.</span>SURFACE_TYPE_PUSH_BUFFERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mPendingSubtitleTracks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pair</span><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
        mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setVideoURI</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@hide</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVideoURI</span><span class="token punctuation">(</span><span class="token class-name">Uri</span> uri<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mUri <span class="token operator">=</span> uri<span class="token punctuation">;</span>
        mHeaders <span class="token operator">=</span> headers<span class="token punctuation">;</span>
        mSeekWhenPrepared <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Adds an external subtitle source file (from the provided input stream.)
     *
     * Note that a single external subtitle source may contain multiple or no
     * supported tracks in it. If the source contained at least one track in
     * it, one will receive an <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MediaPlayer</span><span class="token punctuation">#</span><span class="token field">MEDIA_INFO_METADATA_UPDATE</span></span><span class="token punctuation">}</span>
     * info message. Otherwise, if reading the source takes excessive time,
     * one will receive a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MediaPlayer</span><span class="token punctuation">#</span><span class="token field">MEDIA_INFO_SUBTITLE_TIMED_OUT</span></span><span class="token punctuation">}</span>
     * message. If the source contained no supported track (including an empty
     * source file or null input stream), one will receive a <span class="token punctuation">{</span><span class="token keyword">@link</span>
     * <span class="token reference"><span class="token class-name">MediaPlayer</span><span class="token punctuation">#</span><span class="token field">MEDIA_INFO_UNSUPPORTED_SUBTITLE</span></span><span class="token punctuation">}</span> message. One can find the
     * total number of available tracks using <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MediaPlayer</span><span class="token punctuation">#</span><span class="token function">getTrackInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * to see what additional tracks become available after this method call.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">is</span>     input stream containing the subtitle data.  It will be
     *               closed by the media framework.
     * <span class="token keyword">@param</span> <span class="token parameter">format</span> the format of the subtitle track(s).  Must contain at least
     *               the mime type (<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MediaFormat</span><span class="token punctuation">#</span><span class="token field">KEY_MIME</span></span><span class="token punctuation">}</span>) and the
     *               language (<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MediaFormat</span><span class="token punctuation">#</span><span class="token field">KEY_LANGUAGE</span></span><span class="token punctuation">}</span>) of the file.
     *               If the file itself contains the language information,
     *               specify &quot;und&quot; for the language.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addSubtitleSource</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> is<span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span> format<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPendingSubtitleTracks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                mMediaPlayer<span class="token punctuation">.</span><span class="token function">addSubtitleSource</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mInfoListener<span class="token punctuation">.</span><span class="token function">onInfo</span><span class="token punctuation">(</span>
                        mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_INFO_UNSUPPORTED_SUBTITLE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pair</span><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> mPendingSubtitleTracks<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stopPlayback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
            mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mUri <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mSurfaceHolder <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// not ready for playback just yet, will try again later</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Tell the music playback service to pause</span>
        <span class="token comment">// TODO: these constants need to be published somewhere in the framework.</span>
        <span class="token class-name">Intent</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.music.musicservicecommand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;command&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pause&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mContext<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// we shouldn&#39;t clear the target state, because somebody might have</span>
        <span class="token comment">// called start() previously</span>
        <span class="token function">release</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mMediaPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// TODO: create SubtitleController in MediaPlayer, but we need</span>
            <span class="token comment">// a context for the subtitle renderers</span>
            <span class="token keyword">final</span> <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">SubtitleController</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubtitleController</span><span class="token punctuation">(</span>
                    context<span class="token punctuation">,</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getMediaTimeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            controller<span class="token punctuation">.</span><span class="token function">registerRenderer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebVttRenderer</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setSubtitleAnchor</span><span class="token punctuation">(</span>controller<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>mAudioSession <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mMediaPlayer<span class="token punctuation">.</span><span class="token function">setAudioSessionId</span><span class="token punctuation">(</span>mAudioSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                mAudioSession <span class="token operator">=</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnPreparedListener</span><span class="token punctuation">(</span>mPreparedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnVideoSizeChangedListener</span><span class="token punctuation">(</span>mSizeChangedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnCompletionListener</span><span class="token punctuation">(</span>mCompletionListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnErrorListener</span><span class="token punctuation">(</span>mErrorListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnInfoListener</span><span class="token punctuation">(</span>mInfoListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setOnBufferingUpdateListener</span><span class="token punctuation">(</span>mBufferingUpdateListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentBufferPercentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> mUri<span class="token punctuation">,</span> mHeaders<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setDisplay</span><span class="token punctuation">(</span>mSurfaceHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setAudioStreamType</span><span class="token punctuation">(</span><span class="token class-name">AudioManager</span><span class="token punctuation">.</span>STREAM_MUSIC<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">setScreenOnWhilePlaying</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">prepareAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">,</span> <span class="token class-name">MediaFormat</span><span class="token punctuation">&gt;</span></span> pending<span class="token operator">:</span> mPendingSubtitleTracks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    mMediaPlayer<span class="token punctuation">.</span><span class="token function">addSubtitleSource</span><span class="token punctuation">(</span>pending<span class="token punctuation">.</span>first<span class="token punctuation">,</span> pending<span class="token punctuation">.</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mInfoListener<span class="token punctuation">.</span><span class="token function">onInfo</span><span class="token punctuation">(</span>
                            mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_INFO_UNSUPPORTED_SUBTITLE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// we don&#39;t set the target state here either, but preserve the</span>
            <span class="token comment">// target state that was there before.</span>
            mCurrentState <span class="token operator">=</span> STATE_PREPARING<span class="token punctuation">;</span>
            <span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Unable to open content: &quot;</span> <span class="token operator">+</span> mUri<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            mTargetState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            mErrorListener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_ERROR_UNKNOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Unable to open content: &quot;</span> <span class="token operator">+</span> mUri<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            mTargetState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            mErrorListener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">,</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_ERROR_UNKNOWN<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mPendingSubtitleTracks<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMediaController</span><span class="token punctuation">(</span><span class="token class-name">MediaController</span> controller<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mMediaController <span class="token operator">=</span> controller<span class="token punctuation">;</span>
        <span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">attachMediaController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">setMediaPlayer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">View</span> anchorView <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">View</span> <span class="token operator">?</span>
                    <span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">setAnchorView</span><span class="token punctuation">(</span>anchorView<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span> mSizeChangedListener <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onVideoSizeChanged</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mVideoWidth <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mVideoHeight <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> mVideoHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span> mPreparedListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mCurrentState <span class="token operator">=</span> STATE_PREPARED<span class="token punctuation">;</span>

            <span class="token comment">// Get the capabilities of the player for this stream</span>
            <span class="token class-name">Metadata</span> data <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getMetadata</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>METADATA_ALL<span class="token punctuation">,</span>
                                      <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>BYPASS_METADATA_FILTER<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mCanPause <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>PAUSE_AVAILABLE<span class="token punctuation">)</span>
                        <span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>PAUSE_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                mCanSeekBack <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_BACKWARD_AVAILABLE<span class="token punctuation">)</span>
                        <span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_BACKWARD_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                mCanSeekForward <span class="token operator">=</span> <span class="token operator">!</span>data<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_FORWARD_AVAILABLE<span class="token punctuation">)</span>
                        <span class="token operator">||</span> data<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">Metadata</span><span class="token punctuation">.</span>SEEK_FORWARD_AVAILABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                mCanPause <span class="token operator">=</span> mCanSeekBack <span class="token operator">=</span> mCanSeekForward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnPreparedListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mOnPreparedListener<span class="token punctuation">.</span><span class="token function">onPrepared</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mMediaController<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mVideoWidth <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mVideoHeight <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getVideoHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">int</span> seekToPosition <span class="token operator">=</span> mSeekWhenPrepared<span class="token punctuation">;</span>  <span class="token comment">// mSeekWhenPrepared may be changed after seekTo() call</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>seekToPosition <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">seekTo</span><span class="token punctuation">(</span>seekToPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Log.i(&quot;@@@@&quot;, &quot;video size: &quot; + mVideoWidth +&quot;/&quot;+ mVideoHeight);</span>
                <span class="token function">getHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFixedSize</span><span class="token punctuation">(</span>mVideoWidth<span class="token punctuation">,</span> mVideoHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mSurfaceWidth <span class="token operator">==</span> mVideoWidth <span class="token operator">&amp;&amp;</span> mSurfaceHeight <span class="token operator">==</span> mVideoHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// We didn&#39;t actually change the size (it was already at the size</span>
                    <span class="token comment">// we need), so we won&#39;t get a &quot;surface changed&quot; callback, so</span>
                    <span class="token comment">// start the video here instead of in the callback.</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                               <span class="token punctuation">(</span>seekToPosition <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                           <span class="token comment">// Show the media controls when we&#39;re paused into a video and make &#39;em stick.</span>
                           mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                       <span class="token punctuation">}</span>
                   <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// We don&#39;t know the video size yet, but should start anyway.</span>
                <span class="token comment">// The video size might be reported to us later.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnCompletionListener</span> mCompletionListener <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnCompletionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompletion</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mCurrentState <span class="token operator">=</span> STATE_PLAYBACK_COMPLETED<span class="token punctuation">;</span>
            mTargetState <span class="token operator">=</span> STATE_PLAYBACK_COMPLETED<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnCompletionListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mOnCompletionListener<span class="token punctuation">.</span><span class="token function">onCompletion</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnInfoListener</span> mInfoListener <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnInfoListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span>  <span class="token keyword">boolean</span> <span class="token function">onInfo</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">,</span> <span class="token keyword">int</span> arg1<span class="token punctuation">,</span> <span class="token keyword">int</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnInfoListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mOnInfoListener<span class="token punctuation">.</span><span class="token function">onInfo</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnErrorListener</span> mErrorListener <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnErrorListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">,</span> <span class="token keyword">int</span> framework_err<span class="token punctuation">,</span> <span class="token keyword">int</span> impl_err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Error: &quot;</span> <span class="token operator">+</span> framework_err <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> impl_err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            mTargetState <span class="token operator">=</span> STATE_ERROR<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">/* If an error handler has been supplied, use it and finish. */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnErrorListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnErrorListener<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">,</span> framework_err<span class="token punctuation">,</span> impl_err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">/* Otherwise, pop up an error dialog so the user knows that
             * something bad has happened. Only try and pop up the dialog
             * if we&#39;re attached to a window. When we&#39;re going away and no
             * longer have a window, don&#39;t bother showing the user an error.
             */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getWindowToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Resources</span> r <span class="token operator">=</span> mContext<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> messageId<span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>framework_err <span class="token operator">==</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">.</span>MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    messageId <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>VideoView_error_text_invalid_progressive_playback<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    messageId <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>VideoView_error_text_unknown<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>messageId<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>VideoView_error_button<span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> whichButton<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        <span class="token comment">/* If we get here, there is no onError listener, so
                                         * at least inform them that the video is over.
                                         */</span>
                                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mOnCompletionListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                            mOnCompletionListener<span class="token punctuation">.</span><span class="token function">onCompletion</span><span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                        <span class="token punctuation">}</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnBufferingUpdateListener</span> mBufferingUpdateListener <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnBufferingUpdateListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBufferingUpdate</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer</span> mp<span class="token punctuation">,</span> <span class="token keyword">int</span> percent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mCurrentBufferPercentage <span class="token operator">=</span> percent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Register a callback to be invoked when the media file
     * is loaded and ready to go.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">l</span> The callback that will be run
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnPreparedListener</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span> l<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mOnPreparedListener <span class="token operator">=</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Register a callback to be invoked when the end of a media file
     * has been reached during playback.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">l</span> The callback that will be run
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnCompletionListener</span><span class="token punctuation">(</span><span class="token class-name">OnCompletionListener</span> l<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mOnCompletionListener <span class="token operator">=</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Register a callback to be invoked when an error occurs
     * during playback or setup.  If no listener is specified,
     * or if the listener returned false, VideoView will inform
     * the user of any errors.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">l</span> The callback that will be run
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnErrorListener</span><span class="token punctuation">(</span><span class="token class-name">OnErrorListener</span> l<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mOnErrorListener <span class="token operator">=</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Register a callback to be invoked when an informational event
     * occurs during playback or setup.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">l</span> The callback that will be run
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnInfoListener</span><span class="token punctuation">(</span><span class="token class-name">OnInfoListener</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mOnInfoListener <span class="token operator">=</span> l<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span> mSHCallback <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceChanged</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">,</span> <span class="token keyword">int</span> format<span class="token punctuation">,</span>
                                    <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            mSurfaceWidth <span class="token operator">=</span> w<span class="token punctuation">;</span>
            mSurfaceHeight <span class="token operator">=</span> h<span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> isValidState <span class="token operator">=</span>  <span class="token punctuation">(</span>mTargetState <span class="token operator">==</span> STATE_PLAYING<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> hasValidSize <span class="token operator">=</span> <span class="token punctuation">(</span>mVideoWidth <span class="token operator">==</span> w <span class="token operator">&amp;&amp;</span> mVideoHeight <span class="token operator">==</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> isValidState <span class="token operator">&amp;&amp;</span> hasValidSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mSeekWhenPrepared <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">seekTo</span><span class="token punctuation">(</span>mSeekWhenPrepared<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceCreated</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            mSurfaceHolder <span class="token operator">=</span> holder<span class="token punctuation">;</span>
            <span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">surfaceDestroyed</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder</span> holder<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// after we return from this we can&#39;t use the surface any more</span>
            mSurfaceHolder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">release</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/*
     * release the media player in any state
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> cleartargetstate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mMediaPlayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            mPendingSubtitleTracks<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cleartargetstate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mTargetState  <span class="token operator">=</span> STATE_IDLE<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTrackballEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onKeyDown</span><span class="token punctuation">(</span><span class="token keyword">int</span> keyCode<span class="token punctuation">,</span> <span class="token class-name">KeyEvent</span> event<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> isKeyCodeSupported <span class="token operator">=</span> keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_BACK <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_UP <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_DOWN <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_MUTE <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MENU <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_CALL <span class="token operator">&amp;&amp;</span>
                                     keyCode <span class="token operator">!=</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_ENDCALL<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isKeyCodeSupported <span class="token operator">&amp;&amp;</span> mMediaController <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_HEADSETHOOK <span class="token operator">||</span>
                    keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY_PAUSE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_STOP
                    <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PAUSE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onKeyDown</span><span class="token punctuation">(</span>keyCode<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">toggleMediaControlsVisiblity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaController<span class="token punctuation">.</span><span class="token function">isShowing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mMediaController<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCurrentState <span class="token operator">=</span> STATE_PLAYING<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mTargetState <span class="token operator">=</span> STATE_PLAYING<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mMediaPlayer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mCurrentState <span class="token operator">=</span> STATE_PAUSED<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        mTargetState <span class="token operator">=</span> STATE_PAUSED<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">suspend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">release</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">openVideo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">seekTo</span><span class="token punctuation">(</span><span class="token keyword">int</span> msec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMediaPlayer<span class="token punctuation">.</span><span class="token function">seekTo</span><span class="token punctuation">(</span>msec<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mSeekWhenPrepared <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mSeekWhenPrepared <span class="token operator">=</span> msec<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mMediaPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBufferPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mCurrentBufferPercentage<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isInPlaybackState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>mMediaPlayer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                mCurrentState <span class="token operator">!=</span> STATE_ERROR <span class="token operator">&amp;&amp;</span>
                mCurrentState <span class="token operator">!=</span> STATE_IDLE <span class="token operator">&amp;&amp;</span>
                mCurrentState <span class="token operator">!=</span> STATE_PREPARING<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCanPause<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canSeekBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCanSeekBack<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canSeekForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCanSeekForward<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAudioSession <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MediaPlayer</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mAudioSession <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            foo<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mAudioSession<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mSubtitleWidget<span class="token punctuation">.</span><span class="token function">onAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDetachedFromWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDetachedFromWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mSubtitleWidget<span class="token punctuation">.</span><span class="token function">onDetachedFromWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> changed<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token punctuation">,</span> left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">measureAndLayoutSubtitleWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> saveCount <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token function">getPaddingLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mSubtitleWidget<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
            canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>saveCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Forces a measurement and layout pass for all overlaid views.
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">setSubtitleWidget</span><span class="token punctuation">(</span><span class="token class-name">RenderingWidget</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">measureAndLayoutSubtitleWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mSubtitleWidget<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/** <span class="token keyword">@hide</span> */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSubtitleWidget</span><span class="token punctuation">(</span><span class="token class-name">RenderingWidget</span> subtitleWidget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">==</span> subtitleWidget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token keyword">boolean</span> attachedToWindow <span class="token operator">=</span> <span class="token function">isAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>attachedToWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mSubtitleWidget<span class="token punctuation">.</span><span class="token function">onDetachedFromWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            mSubtitleWidget<span class="token punctuation">.</span><span class="token function">setOnChangedListener</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mSubtitleWidget <span class="token operator">=</span> subtitleWidget<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>subtitleWidget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mSubtitlesChangedListener <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mSubtitlesChangedListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RenderingWidget<span class="token punctuation">.</span>OnChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChanged</span><span class="token punctuation">(</span><span class="token class-name">RenderingWidget</span> renderingWidget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">setWillNotDraw</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            subtitleWidget<span class="token punctuation">.</span><span class="token function">setOnChangedListener</span><span class="token punctuation">(</span>mSubtitlesChangedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>attachedToWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                subtitleWidget<span class="token punctuation">.</span><span class="token function">onAttachedToWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">setWillNotDraw</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/** <span class="token keyword">@hide</span> */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Looper</span> <span class="token function">getSubtitleLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Looper</span><span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mediaplayercontrol" tabindex="-1"><a class="header-anchor" href="#mediaplayercontrol" aria-hidden="true">#</a> MediaPlayerControl</h2><p>\u901A\u8FC7\u8BE5\u63A5\u53E3\u6765\u6253\u901AMediaController\u4EE5\u53CAVideoView</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MediaPlayerControl</span> <span class="token punctuation">{</span>
   <span class="token keyword">void</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">void</span>    <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span>     <span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span>     <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">void</span>    <span class="token function">seekTo</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> <span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">int</span>     <span class="token function">getBufferPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> <span class="token function">canPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> <span class="token function">canSeekBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">boolean</span> <span class="token function">canSeekForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token doc-comment comment">/**
    * Get the audio session id for the player used by this VideoView. This can be used to
    * apply audio effects to the audio track of a video.
    * <span class="token keyword">@return</span> The audio session, or 0 if there was an error.
    */</span>
   <span class="token keyword">int</span>     <span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mediacontroller" tabindex="-1"><a class="header-anchor" href="#mediacontroller" aria-hidden="true">#</a> MediaController</h2><ul><li><p>\u7B80\u4ECB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* A view containing controls for a MediaPlayer. Typically contains the
* buttons like &quot;Play/Pause&quot;, &quot;Rewind&quot;, &quot;Fast Forward&quot; and a progress
* slider. It takes care of synchronizing the controls with the state
* of the MediaPlayer.
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
* The way to use this class is to instantiate it programatically.
* The MediaController will create a default set of controls
* and put them in a window floating above your application. Specifically,
* the controls will float above the view specified with setAnchorView().
* The window will disappear if left idle for three seconds and reappear
* when the user touches the anchor view.
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
* Functions like show() and hide() have no effect when MediaController
* is created in an xml layout.
* 
* MediaController will hide and
* show the buttons according to these rules:
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;previous&quot; and &quot;next&quot; buttons are hidden until setPrevNextListeners()
*   has been called
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;previous&quot; and &quot;next&quot; buttons are visible but disabled if
*   setPrevNextListeners() was called with null listeners
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;rewind&quot; and &quot;fastforward&quot; buttons are shown unless requested
*   otherwise by using the MediaController(Context, boolean) constructor
*   with the boolean set to false
* <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5173\u7CFB</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MediaController</span> <span class="token keyword">extends</span> <span class="token class-name">FrameLayout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u6210\u5458</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4E00\u4E9B\u63A7\u5236\u529F\u80FD\u7684\u63A5\u53E3</span>
<span class="token keyword">private</span> <span class="token class-name">MediaPlayerControl</span>  mPlayer<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Context</span>             mContext<span class="token punctuation">;</span>
<span class="token comment">// VideoView\u4E2D\u8C03\u7528setAnchorView()\u8BBE\u7F6E\u8FDB\u6765\u7684View\uFF0CMediaController\u663E\u793A\u7684\u65F6\u5019\u4F1A\u611F\u89C9\u8BE5AnchorView\u7684\u4F4D\u7F6E\u8FDB\u884C\u663E\u793A</span>
<span class="token keyword">private</span> <span class="token class-name">View</span>                mAnchor<span class="token punctuation">;</span>
<span class="token comment">// MediaController\u6700\u5916\u5C42\u7684\u6839\u5E03\u5C40</span>
<span class="token keyword">private</span> <span class="token class-name">View</span>                mRoot<span class="token punctuation">;</span>

<span class="token comment">// \u901A\u8FC7Window\u7684\u65B9\u5F0F\u6765\u663E\u793AMediaController\uFF0CMediaController\u662F\u4E00\u4E2A\u586B\u5145\u5C4F\u5E55\u7684\u5E03\u5C40\uFF0C\u4F46\u662F\u80CC\u666F\u662F\u900F\u660E\u7684</span>
<span class="token keyword">private</span> <span class="token class-name">WindowManager</span>       mWindowManager<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Window</span>              mWindow<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">View</span>                mDecor<span class="token punctuation">;</span>
<span class="token comment">// \u7406\u89E3\u4E3A\u5F53\u524D\u6574\u4E2AMediaController\u7684\u5E03\u5C40</span>
<span class="token keyword">private</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> mDecorLayoutParams<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ProgressBar</span>         mProgress<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">TextView</span>            mEndTime<span class="token punctuation">,</span> mCurrentTime<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span>             mShowing<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span>             mDragging<span class="token punctuation">;</span>
<span class="token comment">// \u9ED8\u8BA4\u81EA\u52A8\u6D88\u5931\u7684\u65F6\u95F4</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    sDefaultTimeout <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    FADE_OUT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    SHOW_PROGRESS <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span>             mUseFastForward<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span>             mFromXml<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span>             mListenersSet<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> mNextListener<span class="token punctuation">,</span> mPrevListener<span class="token punctuation">;</span>
<span class="token class-name">StringBuilder</span>               mFormatBuilder<span class="token punctuation">;</span>
<span class="token class-name">Formatter</span>                   mFormatter<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mPauseButton<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mFfwdButton<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mRewButton<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mNextButton<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mPrevButton<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u6784\u9020\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mRoot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
    mUseFastForward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    mFromXml <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFinishInflate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mRoot <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token function">initControllerView</span><span class="token punctuation">(</span>mRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token keyword">boolean</span> useFastForward<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
    mUseFastForward <span class="token operator">=</span> useFastForward<span class="token punctuation">;</span>
	<span class="token comment">// \u521B\u5EFA\u8BE5MediaController\u7684\u5E03\u5C40</span>
    <span class="token function">initFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">initFloatingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>initFloatingWindowLayout</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Allocate and initialize the static parts of mDecorLayoutParams. Must</span>
<span class="token comment">// also call updateFloatingWindowLayout() to fill in the dynamic parts</span>
<span class="token comment">// (y and width) before mDecorLayoutParams can be used.</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mDecorLayoutParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> p <span class="token operator">=</span> mDecorLayoutParams<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>gravity <span class="token operator">=</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>TOP <span class="token operator">|</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>LEFT<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>format <span class="token operator">=</span> <span class="token class-name">PixelFormat</span><span class="token punctuation">.</span>TRANSLUCENT<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>TYPE_APPLICATION_PANEL<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>flags <span class="token operator">|=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_ALT_FOCUSABLE_IM
			<span class="token operator">|</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_NOT_TOUCH_MODAL
			<span class="token operator">|</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_SPLIT_TOUCH<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>token <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>windowAnimations <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// android.R.style.DropDownAnimationDown;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>initFloatingWindow</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFloatingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Android\u5185\u6838\u5256\u6790 \u4E2D\u6709\u4ECB\u7ECD</span>
	mWindowManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WindowManager</span><span class="token punctuation">)</span>mContext<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span>WINDOW_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mWindow <span class="token operator">=</span> <span class="token class-name">PolicyManager</span><span class="token punctuation">.</span><span class="token function">makeNewWindow</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mWindow<span class="token punctuation">.</span><span class="token function">setWindowManager</span><span class="token punctuation">(</span>mWindowManager<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mWindow<span class="token punctuation">.</span><span class="token function">requestFeature</span><span class="token punctuation">(</span><span class="token class-name">Window</span><span class="token punctuation">.</span>FEATURE_NO_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u901A\u8FC7WindowManager\u53BBadd\u8BE5Decor\u4EE5\u53CAremove\u6765\u5B9E\u73B0MediaController\u7684\u663E\u793A\u4E0E\u9690\u85CF</span>
	mDecor <span class="token operator">=</span> mWindow<span class="token punctuation">.</span><span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mDecor<span class="token punctuation">.</span><span class="token function">setOnTouchListener</span><span class="token punctuation">(</span>mTouchListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mWindow<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mWindow<span class="token punctuation">.</span><span class="token function">setBackgroundDrawableResource</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>color<span class="token punctuation">.</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// While the media controller is up, the volume control keys should</span>
	<span class="token comment">// affect the media stream type</span>
	mWindow<span class="token punctuation">.</span><span class="token function">setVolumeControlStream</span><span class="token punctuation">(</span><span class="token class-name">AudioManager</span><span class="token punctuation">.</span>STREAM_MUSIC<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">setFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">setDescendantFocusability</span><span class="token punctuation">(</span><span class="token class-name">ViewGroup</span><span class="token punctuation">.</span>FOCUS_AFTER_DESCENDANTS<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mTouchListener</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">OnTouchListener</span> mTouchListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnTouchListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>setMediaPlayer VideoView\u8C03\u7528setMediaController\u7684\u65F6\u5019\u4F1A\u8C03\u7528\u5230\u8BE5\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMediaPlayer</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayerControl</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mPlayer <span class="token operator">=</span> player<span class="token punctuation">;</span>
	<span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>setAnchorView VideoView\u8C03\u7528setMediaController\u7684\u65F6\u5019\u4F1A\u8C03\u7528\u5230\u8BE5\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Set the view that acts as the anchor for the control view.
 * This can for example be a VideoView, or your Activity&#39;s main view.
 * When VideoView calls this method, it will use the VideoView&#39;s parent
 * as the anchor.
 * <span class="token keyword">@param</span> <span class="token parameter">view</span> The view to which to anchor the controller when it is visible.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAnchorView</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mAnchor<span class="token punctuation">.</span><span class="token function">removeOnLayoutChangeListener</span><span class="token punctuation">(</span>mLayoutChangeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	mAnchor <span class="token operator">=</span> view<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mAnchor<span class="token punctuation">.</span><span class="token function">addOnLayoutChangeListener</span><span class="token punctuation">(</span>mLayoutChangeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">FrameLayout<span class="token punctuation">.</span>LayoutParams</span> frameParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FrameLayout<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span>
			<span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">,</span>
			<span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT
	<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">View</span> v <span class="token operator">=</span> <span class="token function">makeControllerView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> frameParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>mLayoutChangeListener</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// This is called whenever mAnchor&#39;s layout bound changes</span>
<span class="token keyword">private</span> <span class="token class-name">OnLayoutChangeListener</span> mLayoutChangeListener <span class="token operator">=</span>
		<span class="token keyword">new</span> <span class="token class-name">OnLayoutChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLayoutChange</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span>
			<span class="token keyword">int</span> bottom<span class="token punctuation">,</span> <span class="token keyword">int</span> oldLeft<span class="token punctuation">,</span> <span class="token keyword">int</span> oldTop<span class="token punctuation">,</span> <span class="token keyword">int</span> oldRight<span class="token punctuation">,</span>
			<span class="token keyword">int</span> oldBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u66F4\u65B0\u5E03\u5C40</span>
		<span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mWindowManager<span class="token punctuation">.</span><span class="token function">updateViewLayout</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">,</span> mDecorLayoutParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>updateFloatingWindowLayout<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Update the dynamic parts of mDecorLayoutParams</span>
<span class="token comment">// Must be called with mAnchor != NULL.</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> anchorPos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	mAnchor<span class="token punctuation">.</span><span class="token function">getLocationOnScreen</span><span class="token punctuation">(</span>anchorPos<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// we need to know the size of the controller so we can properly position it</span>
	<span class="token comment">// within its space</span>
	mDecor<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> p <span class="token operator">=</span> mDecorLayoutParams<span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>width <span class="token operator">=</span> mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>x <span class="token operator">=</span> anchorPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> p<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
	p<span class="token punctuation">.</span>y <span class="token operator">=</span> anchorPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> mAnchor<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mDecor<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>makeControllerView</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Create the view that holds the widgets that control playback.
 * Derived classes can override this to create their own.
 * <span class="token keyword">@return</span> The controller view.
 * <span class="token keyword">@hide</span> This doesn&#39;t work as advertised
 */</span>
<span class="token keyword">protected</span> <span class="token class-name">View</span> <span class="token function">makeControllerView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">LayoutInflater</span> inflate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span><span class="token punctuation">)</span> mContext<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span>LAYOUT_INFLATER_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mRoot <span class="token operator">=</span> inflate<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>media_controller<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5BF9Controller\u4E2D\u7684\u4E00\u4E9B\u6309\u94AE\u3001\u529F\u80FD\u8FDB\u884C\u4E8B\u4EF6\u8BBE\u7F6E</span>
	<span class="token function">initControllerView</span><span class="token punctuation">(</span>mRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> mRoot<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>touch\u4E8B\u4EF6\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8FDB\u5EA6\u7684\u5904\u7406</p><ul><li><p>seekBar\u7684\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// There are two scenarios that can trigger the seekbar listener to trigger:</span>
<span class="token comment">//</span>
<span class="token comment">// The first is the user using the touchpad to adjust the posititon of the</span>
<span class="token comment">// seekbar&#39;s thumb. In this case onStartTrackingTouch is called followed by</span>
<span class="token comment">// a number of onProgressChanged notifications, concluded by onStopTrackingTouch.</span>
<span class="token comment">// We&#39;re setting the field &quot;mDragging&quot; to true for the duration of the dragging</span>
<span class="token comment">// session to avoid jumps in the position in case of ongoing playback.</span>
<span class="token comment">//</span>
<span class="token comment">// The second scenario involves the user operating the scroll ball, in this</span>
<span class="token comment">// case there WON&#39;T BE onStartTrackingTouch/onStopTrackingTouch notifications,</span>
<span class="token comment">// we will simply apply the updated position without suspending regular updates.</span>
<span class="token keyword">private</span> <span class="token class-name">OnSeekBarChangeListener</span> mSeekListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnSeekBarChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStartTrackingTouch</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">show</span><span class="token punctuation">(</span><span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		mDragging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

		<span class="token comment">// By removing these pending progress messages we make sure</span>
		<span class="token comment">// that a) we won&#39;t update the progress while the user adjusts</span>
		<span class="token comment">// the seekbar and b) once the user is done dragging the thumb</span>
		<span class="token comment">// we will post one of these messages to the queue again and</span>
		<span class="token comment">// this ensures that there will be exactly one message queued up.</span>
		mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onProgressChanged</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">,</span> <span class="token keyword">int</span> progress<span class="token punctuation">,</span> <span class="token keyword">boolean</span> fromuser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fromuser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// We&#39;re not interested in programmatically generated changes to</span>
			<span class="token comment">// the progress bar&#39;s position.</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">long</span> duration <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> newposition <span class="token operator">=</span> <span class="token punctuation">(</span>duration <span class="token operator">*</span> progress<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000L</span><span class="token punctuation">;</span>
		mPlayer<span class="token punctuation">.</span><span class="token function">seekTo</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> newposition<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mCurrentTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
			mCurrentTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> newposition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStopTrackingTouch</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mDragging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Ensure that progress is properly updated in the future,</span>
		<span class="token comment">// the call to show() does not guarantee this because it is a</span>
		<span class="token comment">// no-op if we are already showing.</span>
		mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>SetProgress</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mPlayer <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mDragging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">int</span> position <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> duration <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mProgress <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>duration <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// use long to avoid overflow</span>
			<span class="token keyword">long</span> pos <span class="token operator">=</span> <span class="token number">1000L</span> <span class="token operator">*</span> position <span class="token operator">/</span> duration<span class="token punctuation">;</span>
			mProgress<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">int</span> percent <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getBufferPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mProgress<span class="token punctuation">.</span><span class="token function">setSecondaryProgress</span><span class="token punctuation">(</span>percent <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mEndTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
		mEndTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mCurrentTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
		mCurrentTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> position<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>show</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Show the controller on screen. It will go away
 * automatically after &#39;timeout&#39; milliseconds of inactivity.
 * <span class="token keyword">@param</span> <span class="token parameter">timeout</span> The timeout in milliseconds. Use 0 to show
 * the controller until hide() is called.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mShowing <span class="token operator">&amp;&amp;</span> mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5148\u53BB\u8BBE\u7F6E\u4E00\u4E0B\u8FDB\u5EA6</span>
        <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">disableUnsupportedButtons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindowManager<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">,</span> mDecorLayoutParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mShowing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// cause the progress bar to be updated even if mShowing</span>
    <span class="token comment">// was already true.  This happens, for example, if we&#39;re</span>
    <span class="token comment">// paused with the progress bar showing the user hits play.</span>
	<span class="token comment">// \u53D1\u9001\u5B9A\u671F\u66F4\u65B0\u8FDB\u5EA6\u7684\u6D88\u606F</span>
    mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Message</span> msg <span class="token operator">=</span> mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>FADE_OUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>FADE_OUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mHandler<span class="token punctuation">.</span><span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>hide</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Remove the controller from the screen.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u79FB\u9664\u5B9A\u671F\u66F4\u65B0\u6D88\u606F</span>
			mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mWindowManager<span class="token punctuation">.</span><span class="token function">removeView</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot;MediaController&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;already removed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mShowing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><h1 id="\u4E0A\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u6E90\u7801" aria-hidden="true">#</a> \u4E0A\u6E90\u7801</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</span>

<span class="token keyword">package</span> <span class="token namespace">android<span class="token punctuation">.</span>widget</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">PixelFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>media<span class="token punctuation">.</span></span><span class="token class-name">AudioManager</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Handler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">AttributeSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">Gravity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">KeyEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">LayoutInflater</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">MotionEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">ViewGroup</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">Window</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">WindowManager</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>accessibility<span class="token punctuation">.</span></span><span class="token class-name">AccessibilityEvent</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>accessibility<span class="token punctuation">.</span></span><span class="token class-name">AccessibilityNodeInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span><span class="token class-name">SeekBar</span><span class="token punctuation">.</span><span class="token class-name">OnSeekBarChangeListener</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>policy<span class="token punctuation">.</span></span><span class="token class-name">PolicyManager</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Formatter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Locale</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * A view containing controls for a MediaPlayer. Typically contains the
 * buttons like &quot;Play/Pause&quot;, &quot;Rewind&quot;, &quot;Fast Forward&quot; and a progress
 * slider. It takes care of synchronizing the controls with the state
 * of the MediaPlayer.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * The way to use this class is to instantiate it programatically.
 * The MediaController will create a default set of controls
 * and put them in a window floating above your application. Specifically,
 * the controls will float above the view specified with setAnchorView().
 * The window will disappear if left idle for three seconds and reappear
 * when the user touches the anchor view.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * Functions like show() and hide() have no effect when MediaController
 * is created in an xml layout.
 * 
 * MediaController will hide and
 * show the buttons according to these rules:
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;previous&quot; and &quot;next&quot; buttons are hidden until setPrevNextListeners()
 *   has been called
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;previous&quot; and &quot;next&quot; buttons are visible but disabled if
 *   setPrevNextListeners() was called with null listeners
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> The &quot;rewind&quot; and &quot;fastforward&quot; buttons are shown unless requested
 *   otherwise by using the MediaController(Context, boolean) constructor
 *   with the boolean set to false
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MediaController</span> <span class="token keyword">extends</span> <span class="token class-name">FrameLayout</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">MediaPlayerControl</span>  mPlayer<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Context</span>             mContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View</span>                mAnchor<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View</span>                mRoot<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">WindowManager</span>       mWindowManager<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Window</span>              mWindow<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View</span>                mDecor<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> mDecorLayoutParams<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ProgressBar</span>         mProgress<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">TextView</span>            mEndTime<span class="token punctuation">,</span> mCurrentTime<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>             mShowing<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>             mDragging<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    sDefaultTimeout <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    FADE_OUT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>    SHOW_PROGRESS <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>             mUseFastForward<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>             mFromXml<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span>             mListenersSet<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> mNextListener<span class="token punctuation">,</span> mPrevListener<span class="token punctuation">;</span>
    <span class="token class-name">StringBuilder</span>               mFormatBuilder<span class="token punctuation">;</span>
    <span class="token class-name">Formatter</span>                   mFormatter<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mPauseButton<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mFfwdButton<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mRewButton<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mNextButton<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ImageButton</span>         mPrevButton<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">AttributeSet</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mRoot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
        mUseFastForward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        mFromXml <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFinishInflate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mRoot <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">initControllerView</span><span class="token punctuation">(</span>mRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token keyword">boolean</span> useFastForward<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
        mUseFastForward <span class="token operator">=</span> useFastForward<span class="token punctuation">;</span>
        <span class="token function">initFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initFloatingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFloatingWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mWindowManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WindowManager</span><span class="token punctuation">)</span>mContext<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span>WINDOW_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindow <span class="token operator">=</span> <span class="token class-name">PolicyManager</span><span class="token punctuation">.</span><span class="token function">makeNewWindow</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindow<span class="token punctuation">.</span><span class="token function">setWindowManager</span><span class="token punctuation">(</span>mWindowManager<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindow<span class="token punctuation">.</span><span class="token function">requestFeature</span><span class="token punctuation">(</span><span class="token class-name">Window</span><span class="token punctuation">.</span>FEATURE_NO_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mDecor <span class="token operator">=</span> mWindow<span class="token punctuation">.</span><span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mDecor<span class="token punctuation">.</span><span class="token function">setOnTouchListener</span><span class="token punctuation">(</span>mTouchListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindow<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mWindow<span class="token punctuation">.</span><span class="token function">setBackgroundDrawableResource</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>color<span class="token punctuation">.</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// While the media controller is up, the volume control keys should</span>
        <span class="token comment">// affect the media stream type</span>
        mWindow<span class="token punctuation">.</span><span class="token function">setVolumeControlStream</span><span class="token punctuation">(</span><span class="token class-name">AudioManager</span><span class="token punctuation">.</span>STREAM_MUSIC<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setDescendantFocusability</span><span class="token punctuation">(</span><span class="token class-name">ViewGroup</span><span class="token punctuation">.</span>FOCUS_AFTER_DESCENDANTS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Allocate and initialize the static parts of mDecorLayoutParams. Must</span>
    <span class="token comment">// also call updateFloatingWindowLayout() to fill in the dynamic parts</span>
    <span class="token comment">// (y and width) before mDecorLayoutParams can be used.</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mDecorLayoutParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> p <span class="token operator">=</span> mDecorLayoutParams<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>gravity <span class="token operator">=</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>TOP <span class="token operator">|</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>LEFT<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>format <span class="token operator">=</span> <span class="token class-name">PixelFormat</span><span class="token punctuation">.</span>TRANSLUCENT<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>TYPE_APPLICATION_PANEL<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>flags <span class="token operator">|=</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_ALT_FOCUSABLE_IM
                <span class="token operator">|</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_NOT_TOUCH_MODAL
                <span class="token operator">|</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>FLAG_SPLIT_TOUCH<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>token <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>windowAnimations <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// android.R.style.DropDownAnimationDown;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Update the dynamic parts of mDecorLayoutParams</span>
    <span class="token comment">// Must be called with mAnchor != NULL.</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> anchorPos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        mAnchor<span class="token punctuation">.</span><span class="token function">getLocationOnScreen</span><span class="token punctuation">(</span>anchorPos<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// we need to know the size of the controller so we can properly position it</span>
        <span class="token comment">// within its space</span>
        mDecor<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> p <span class="token operator">=</span> mDecorLayoutParams<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>width <span class="token operator">=</span> mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>x <span class="token operator">=</span> anchorPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>mAnchor<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> p<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>y <span class="token operator">=</span> anchorPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> mAnchor<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mDecor<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// This is called whenever mAnchor&#39;s layout bound changes</span>
    <span class="token keyword">private</span> <span class="token class-name">OnLayoutChangeListener</span> mLayoutChangeListener <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">OnLayoutChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLayoutChange</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span>
                <span class="token keyword">int</span> bottom<span class="token punctuation">,</span> <span class="token keyword">int</span> oldLeft<span class="token punctuation">,</span> <span class="token keyword">int</span> oldTop<span class="token punctuation">,</span> <span class="token keyword">int</span> oldRight<span class="token punctuation">,</span>
                <span class="token keyword">int</span> oldBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mWindowManager<span class="token punctuation">.</span><span class="token function">updateViewLayout</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">,</span> mDecorLayoutParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">OnTouchListener</span> mTouchListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnTouchListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">,</span> <span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMediaPlayer</span><span class="token punctuation">(</span><span class="token class-name">MediaPlayerControl</span> player<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPlayer <span class="token operator">=</span> player<span class="token punctuation">;</span>
        <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Set the view that acts as the anchor for the control view.
     * This can for example be a VideoView, or your Activity&#39;s main view.
     * When VideoView calls this method, it will use the VideoView&#39;s parent
     * as the anchor.
     * <span class="token keyword">@param</span> <span class="token parameter">view</span> The view to which to anchor the controller when it is visible.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAnchorView</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mAnchor<span class="token punctuation">.</span><span class="token function">removeOnLayoutChangeListener</span><span class="token punctuation">(</span>mLayoutChangeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mAnchor <span class="token operator">=</span> view<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mAnchor<span class="token punctuation">.</span><span class="token function">addOnLayoutChangeListener</span><span class="token punctuation">(</span>mLayoutChangeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">FrameLayout<span class="token punctuation">.</span>LayoutParams</span> frameParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FrameLayout<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span>
                <span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">,</span>
                <span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">View</span> v <span class="token operator">=</span> <span class="token function">makeControllerView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> frameParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Create the view that holds the widgets that control playback.
     * Derived classes can override this to create their own.
     * <span class="token keyword">@return</span> The controller view.
     * <span class="token keyword">@hide</span> This doesn&#39;t work as advertised
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name">View</span> <span class="token function">makeControllerView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LayoutInflater</span> inflate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span><span class="token punctuation">)</span> mContext<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span>LAYOUT_INFLATER_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mRoot <span class="token operator">=</span> inflate<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>media_controller<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">initControllerView</span><span class="token punctuation">(</span>mRoot<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> mRoot<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initControllerView</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPauseButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>pause<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>mPauseListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mFfwdButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>ffwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mFfwdButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mFfwdButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>mFfwdListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mFromXml<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mFfwdButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>mUseFastForward <span class="token operator">?</span> <span class="token class-name">View</span><span class="token punctuation">.</span>VISIBLE <span class="token operator">:</span> <span class="token class-name">View</span><span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        mRewButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>rew<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mRewButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mRewButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>mRewListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mFromXml<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mRewButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>mUseFastForward <span class="token operator">?</span> <span class="token class-name">View</span><span class="token punctuation">.</span>VISIBLE <span class="token operator">:</span> <span class="token class-name">View</span><span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// By default these are hidden. They will be enabled when setPrevNextListeners() is called </span>
        mNextButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mNextButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mFromXml <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mListenersSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mNextButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mPrevButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPrevButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mFromXml <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mListenersSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPrevButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mProgress <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ProgressBar</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>mediacontroller_progress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mProgress <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mProgress <span class="token keyword">instanceof</span> <span class="token class-name">SeekBar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SeekBar</span> seeker <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SeekBar</span><span class="token punctuation">)</span> mProgress<span class="token punctuation">;</span>
                seeker<span class="token punctuation">.</span><span class="token function">setOnSeekBarChangeListener</span><span class="token punctuation">(</span>mSeekListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mProgress<span class="token punctuation">.</span><span class="token function">setMax</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mEndTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mCurrentTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TextView</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>time_current<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mFormatBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mFormatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Formatter</span><span class="token punctuation">(</span>mFormatBuilder<span class="token punctuation">,</span> <span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">installPrevNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Show the controller on screen. It will go away
     * automatically after 3 seconds of inactivity.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Disable pause or seek buttons if the stream cannot be paused or seeked.
     * This requires the control interface to be a MediaPlayerControlExt
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">disableUnsupportedButtons</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mPlayer<span class="token punctuation">.</span><span class="token function">canPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPauseButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mRewButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mPlayer<span class="token punctuation">.</span><span class="token function">canSeekBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mRewButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mFfwdButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mPlayer<span class="token punctuation">.</span><span class="token function">canSeekForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mFfwdButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncompatibleClassChangeError</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// We were given an old version of the interface, that doesn&#39;t have</span>
            <span class="token comment">// the canPause/canSeekXYZ methods. This is OK, it just means we</span>
            <span class="token comment">// assume the media can be paused and seeked, and so we don&#39;t disable</span>
            <span class="token comment">// the buttons.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Show the controller on screen. It will go away
     * automatically after &#39;timeout&#39; milliseconds of inactivity.
     * <span class="token keyword">@param</span> <span class="token parameter">timeout</span> The timeout in milliseconds. Use 0 to show
     * the controller until hide() is called.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mShowing <span class="token operator">&amp;&amp;</span> mAnchor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPauseButton<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">disableUnsupportedButtons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">updateFloatingWindowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mWindowManager<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">,</span> mDecorLayoutParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mShowing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// cause the progress bar to be updated even if mShowing</span>
        <span class="token comment">// was already true.  This happens, for example, if we&#39;re</span>
        <span class="token comment">// paused with the progress bar showing the user hits play.</span>
        mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Message</span> msg <span class="token operator">=</span> mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>FADE_OUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>FADE_OUT<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mHandler<span class="token punctuation">.</span><span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isShowing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mShowing<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Remove the controller from the screen.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAnchor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mShowing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                mWindowManager<span class="token punctuation">.</span><span class="token function">removeView</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot;MediaController&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;already removed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mShowing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Handler</span> mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> pos<span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> FADE_OUT<span class="token operator">:</span>
                    <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> SHOW_PROGRESS<span class="token operator">:</span>
                    pos <span class="token operator">=</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mDragging <span class="token operator">&amp;&amp;</span> mShowing <span class="token operator">&amp;&amp;</span> mPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        msg <span class="token operator">=</span> <span class="token function">obtainMessage</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">-</span> <span class="token punctuation">(</span>pos <span class="token operator">%</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">stringForTime</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeMs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> totalSeconds <span class="token operator">=</span> timeMs <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> seconds <span class="token operator">=</span> totalSeconds <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> minutes <span class="token operator">=</span> <span class="token punctuation">(</span>totalSeconds <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> hours   <span class="token operator">=</span> totalSeconds <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">;</span>

        mFormatBuilder<span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>hours <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mFormatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d:%02d:%02d&quot;</span><span class="token punctuation">,</span> hours<span class="token punctuation">,</span> minutes<span class="token punctuation">,</span> seconds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mFormatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%02d:%02d&quot;</span><span class="token punctuation">,</span> minutes<span class="token punctuation">,</span> seconds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPlayer <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mDragging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> position <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> duration <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mProgress <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>duration <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// use long to avoid overflow</span>
                <span class="token keyword">long</span> pos <span class="token operator">=</span> <span class="token number">1000L</span> <span class="token operator">*</span> position <span class="token operator">/</span> duration<span class="token punctuation">;</span>
                mProgress<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">int</span> percent <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getBufferPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mProgress<span class="token punctuation">.</span><span class="token function">setSecondaryProgress</span><span class="token punctuation">(</span>percent <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mEndTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            mEndTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurrentTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            mCurrentTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> position<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTrackballEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchKeyEvent</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> keyCode <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getKeyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> uniqueDown <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getRepeatCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
                <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span>  <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_HEADSETHOOK
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY_PAUSE
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_SPACE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">doPauseResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mPauseButton<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PLAY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueDown <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_STOP
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MEDIA_PAUSE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueDown <span class="token operator">&amp;&amp;</span> mPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPlayer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_DOWN
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_UP
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_VOLUME_MUTE
                <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_CAMERA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// don&#39;t show the controls for volume adjustment</span>
            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispatchKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_BACK <span class="token operator">||</span> keyCode <span class="token operator">==</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">.</span>KEYCODE_MENU<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueDown<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispatchKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> mPauseListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">doPauseResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mRoot <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> mPauseButton <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_media_pause<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_media_play<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doPauseResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPlayer<span class="token punctuation">.</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPlayer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mPlayer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// There are two scenarios that can trigger the seekbar listener to trigger:</span>
    <span class="token comment">//</span>
    <span class="token comment">// The first is the user using the touchpad to adjust the posititon of the</span>
    <span class="token comment">// seekbar&#39;s thumb. In this case onStartTrackingTouch is called followed by</span>
    <span class="token comment">// a number of onProgressChanged notifications, concluded by onStopTrackingTouch.</span>
    <span class="token comment">// We&#39;re setting the field &quot;mDragging&quot; to true for the duration of the dragging</span>
    <span class="token comment">// session to avoid jumps in the position in case of ongoing playback.</span>
    <span class="token comment">//</span>
    <span class="token comment">// The second scenario involves the user operating the scroll ball, in this</span>
    <span class="token comment">// case there WON&#39;T BE onStartTrackingTouch/onStopTrackingTouch notifications,</span>
    <span class="token comment">// we will simply apply the updated position without suspending regular updates.</span>
    <span class="token keyword">private</span> <span class="token class-name">OnSeekBarChangeListener</span> mSeekListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OnSeekBarChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStartTrackingTouch</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            mDragging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            <span class="token comment">// By removing these pending progress messages we make sure</span>
            <span class="token comment">// that a) we won&#39;t update the progress while the user adjusts</span>
            <span class="token comment">// the seekbar and b) once the user is done dragging the thumb</span>
            <span class="token comment">// we will post one of these messages to the queue again and</span>
            <span class="token comment">// this ensures that there will be exactly one message queued up.</span>
            mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onProgressChanged</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">,</span> <span class="token keyword">int</span> progress<span class="token punctuation">,</span> <span class="token keyword">boolean</span> fromuser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fromuser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// We&#39;re not interested in programmatically generated changes to</span>
                <span class="token comment">// the progress bar&#39;s position.</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">long</span> duration <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> newposition <span class="token operator">=</span> <span class="token punctuation">(</span>duration <span class="token operator">*</span> progress<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000L</span><span class="token punctuation">;</span>
            mPlayer<span class="token punctuation">.</span><span class="token function">seekTo</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> newposition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mCurrentTime <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                mCurrentTime<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">stringForTime</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> newposition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStopTrackingTouch</span><span class="token punctuation">(</span><span class="token class-name">SeekBar</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mDragging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">updatePausePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Ensure that progress is properly updated in the future,</span>
            <span class="token comment">// the call to show() does not guarantee this because it is a</span>
            <span class="token comment">// no-op if we are already showing.</span>
            mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span>SHOW_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPauseButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPauseButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mFfwdButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mFfwdButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mRewButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mRewButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mNextButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mNextButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled <span class="token operator">&amp;&amp;</span> mNextListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPrevButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPrevButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled <span class="token operator">&amp;&amp;</span> mPrevListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mProgress <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mProgress<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">disableUnsupportedButtons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInitializeAccessibilityEvent</span><span class="token punctuation">(</span><span class="token class-name">AccessibilityEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onInitializeAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token class-name">MediaController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInitializeAccessibilityNodeInfo</span><span class="token punctuation">(</span><span class="token class-name">AccessibilityNodeInfo</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onInitializeAccessibilityNodeInfo</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token class-name">MediaController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> mRewListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> pos <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pos <span class="token operator">-=</span> <span class="token number">5000</span><span class="token punctuation">;</span> <span class="token comment">// milliseconds</span>
            mPlayer<span class="token punctuation">.</span><span class="token function">seekTo</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> mFfwdListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> pos <span class="token operator">=</span> mPlayer<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pos <span class="token operator">+=</span> <span class="token number">15000</span><span class="token punctuation">;</span> <span class="token comment">// milliseconds</span>
            mPlayer<span class="token punctuation">.</span><span class="token function">seekTo</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">show</span><span class="token punctuation">(</span>sDefaultTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">installPrevNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mNextButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mNextButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>mNextListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mNextButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>mNextListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPrevButton <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mPrevButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>mPrevListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mPrevButton<span class="token punctuation">.</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>mPrevListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrevNextListeners</span><span class="token punctuation">(</span><span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> next<span class="token punctuation">,</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span> prev<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mNextListener <span class="token operator">=</span> next<span class="token punctuation">;</span>
        mPrevListener <span class="token operator">=</span> prev<span class="token punctuation">;</span>
        mListenersSet <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mRoot <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">installPrevNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mNextButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mFromXml<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mNextButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mPrevButton <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mFromXml<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPrevButton<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MediaPlayerControl</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span>    <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span>     <span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span>     <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span>    <span class="token function">seekTo</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> <span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span>     <span class="token function">getBufferPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> <span class="token function">canPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> <span class="token function">canSeekBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> <span class="token function">canSeekForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * Get the audio session id for the player used by this VideoView. This can be used to
         * apply audio effects to the audio track of a video.
         * <span class="token keyword">@return</span> The audio session, or 0 if there was an error.
         */</span>
        <span class="token keyword">int</span>     <span class="token function">getAudioSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,16),o=[p];function c(i,l){return s(),a("div",null,o)}var k=n(e,[["render",c],["__file","VideoView\u6E90\u7801\u5206\u6790.html.vue"]]);export{k as default};
