import{_ as p,r as e,o,c,a as n,b as a,e as l,d as t}from"./app.e2a3b496.js";const i={},u=l(`<h1 id="retrofit\u8BE6\u89E3-\u4E0B" tabindex="-1"><a class="header-anchor" href="#retrofit\u8BE6\u89E3-\u4E0B" aria-hidden="true">#</a> Retrofit\u8BE6\u89E3(\u4E0B)</h1><p>\u4E0A\u4E00\u7BC7\u6587\u4EF6\u4ECB\u7ECD\u4E86<code>Retrofit</code>\u7684\u57FA\u672C\u4F7F\u7528\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u901A\u8FC7\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u5206\u6790\u4E00\u4E0B<code>Retrofit</code>\u7684\u5B9E\u73B0\u3002</p><p>\u9996\u5148\u770B\u4E00\u4E0B\u5B83\u7684\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1</span>
<span class="token class-name">Retrofit</span> retrofit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Retrofit<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.github.com/&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addConverterFactory</span><span class="token punctuation">(</span><span class="token class-name">GsonConverterFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2</span>
<span class="token class-name">GitHubService</span> gitHubService <span class="token operator">=</span> retrofit<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">GitHubService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3</span>
<span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> call <span class="token operator">=</span> gitHubService<span class="token punctuation">.</span><span class="token function">listRepos</span><span class="token punctuation">(</span><span class="token string">&quot;CharonChui&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 4</span>
call<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> call<span class="token punctuation">,</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">&quot;@@@&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data size : &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;null&quot;</span> <span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> call<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u628A\u4E0A\u9762\u4E3B\u8981\u5206\u4E3A4\u4E2A\u90E8\u5206\uFF0C\u63A5\u4E0B\u6765\u9010\u4E00\u5206\u6790:</p><ol><li>\u521B\u5EFA<code>Retrofit</code>\u5E76\u8FDB\u884C\u914D\u7F6E\u3002</li></ol><hr><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Retrofit</span> retrofit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Retrofit<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.github.com/&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addConverterFactory</span><span class="token punctuation">(</span><span class="token class-name">GsonConverterFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u7684\u4E00\u53E5\u8BDD\uFF0C\u5374\u57CB\u85CF\u4E86\u5F88\u591A\u3002</p><p>\u8FD9\u662F\u5178\u578B\u7684<em><strong>\u5EFA\u9020\u8005\u6A21\u5F0F\u3001\u5916\u89C2\u6A21\u5F0F</strong></em></p><p>\u5C31\u60F3\u5E73\u65F6\u6211\u4EEC\u5199\u7684\u4E0B\u8F7D\u6A21\u5757\uFF0C\u4F5C\u4E3A\u4E00\u4E2A\u516C\u5171\u7684\u6A21\u5757\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u5916\u63D0\u4F9B\u4E00\u4E2A<code>DownloadManager</code>\u4F9B\u5916\u754C\u4F7F\u7528\uFF0C\u800C\u5BF9\u4E8E\u91CC\u9762\u7684\u5B9E\u73B0\u6211\u4EEC\u5B8C\u5168\u53EF\u4EE5\u95ED\u95E8\u9020\u8F66\u3002</p><p>\u5177\u4F53<code>baseUrl()</code>\u3001<code>addConverterFactory()</code>\u65B9\u6CD5\u91CC\u9762\u7684\u5177\u4F53\u5B9E\u73B0\u5C31\u4E0D\u53BB\u770B\u4E86\uFF0C\u6BD4\u8F83\u7B80\u5355\u3002\u5F53\u7136\u8FD9\u91CC\u4E5F\u7528\u5230\u4E86<em><strong>\u5DE5\u5382\u8BBE\u8BA1\u6A21\u5F0F</strong></em>\u3002</p><ol start="2"><li>\u521B\u5EFA\u5BF9\u5E94\u7684\u670D\u52A1\u7C7B</li></ol><hr><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">GitHubService</span> gitHubService <span class="token operator">=</span> retrofit<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">GitHubService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E00\u90E8\u5206\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u5462\uFF1F\u6211\u4EEC\u770B\u4E00\u4E0B<code>retrofit.create()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">validateServiceInterface</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>validateEagerly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">eagerlyValidateMethods</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> service <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD9\u91CC\u7684Platform\u4E3B\u8981\u662F\u4E3A\u4E86\u68C0\u6D4B\u5F53\u524D\u7684\u8FD0\u884C\u5E73\u53F0\uFF0C\u662Fjava\u8FD8\u662Fandroid\uFF0C\u4F1A\u6839\u636E\u5F53\u524D\u7684\u5E73\u53F0\u6765\u8FD4\u56DE\u9ED8\u8BA4\u7684CallAdapter</span>
          <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Platform</span> platform <span class="token operator">=</span> <span class="token class-name">Platform</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span>
              <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
            <span class="token comment">// If the method is a method from Object then defer to normal invocation.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u4EE3\u7406\u8C03\u7528</span>
              <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>platform<span class="token punctuation">.</span><span class="token function">isDefaultMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> platform<span class="token punctuation">.</span><span class="token function">invokeDefaultMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> service<span class="token punctuation">,</span> proxy<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 1\uFF0C\u6839\u636E\u52A8\u6001\u4EE3\u7406\u7684\u65B9\u6CD5\u53BB\u751F\u6210ServiceMethod\u8FD9\u91CC\u52A8\u6001\u4EE3\u7406\u7684\u65B9\u6CD5\u5C31\u662FlistRepos\u65B9\u6CD5</span>
            <span class="token class-name">ServiceMethod</span> serviceMethod <span class="token operator">=</span> <span class="token function">loadServiceMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2\uFF0C\u6839\u7EDDServiceMethod\u548C\u53C2\u6570\u53BB\u751F\u6210OkHttpCall\uFF0C\u8FD9\u91CCargs\u662FCharonChui</span>
            <span class="token class-name">OkHttpCall</span> okHttpCall <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpCall</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>serviceMethod<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 3, serviceMethod\u53BB\u8FDB\u884C\u5904\u7406\u5E76\u8FD4\u56DECall\u5BF9\u8C61\uFF0C\u62FF\u5230\u8FD9\u4E2ACall\u5BF9\u8C61\u624D\u80FD\u53BB\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42\u3002</span>
            <span class="token keyword">return</span> serviceMethod<span class="token punctuation">.</span>callAdapter<span class="token punctuation">.</span><span class="token function">adapt</span><span class="token punctuation">(</span>okHttpCall<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230<code>Proxy.newProxyInstance()</code>\u5C31\u660E\u767D\u4E86\uFF0C\u8FD9\u91CC\u4F7F\u7528\u4E86<em><strong>\u52A8\u6001\u4EE3\u7406</strong></em>\u3002\u7B80\u5355\u7684\u8BF4\u52A8\u6001\u4EE3\u7406\u662F\u5728\u4F60\u8981\u8C03\u7528\u67D0\u4E2A<code>Class</code>\u7684\u65B9\u6CD5\u524D\u6216\u540E\uFF0C\u63D2\u5165\u4F60\u60F3\u8981\u6267\u884C\u7684\u4EE3\u7801\u3002\u90A3\u8FD9\u91CC\u8981\u4EE3\u7406\u7684\u662F\u4EC0\u4E48\u65B9\u6CD5\uFF1F <code>Call&lt;List&lt;Repo&gt;&gt; call = gitHubService.listRepos(&quot;CharonChui&quot;);</code>\uFF0C\u8FD9\u91CC\u5C31\u662F<code>listRepos()</code>\u65B9\u6CD5\u3002 \u5C31\u662F\u8BF4\u5728\u8C03\u7528<code>listRepos()</code>\u65B9\u6CD5\u65F6\u4F1A\u88AB\u52A8\u6001\u4EE3\u7406\u6240\u62E6\u622A\uFF0C\u7136\u540E\u6267\u884C<code>Proxy.newProxyInstance()</code>\u91CC\u9762\u7684<code>InvocationHandler.invoke()</code>\u4E2D\u7684\u90E8\u5206\u3002 \u800C<code>invoke()</code>\u65B9\u6CD5\u7684\u4E09\u4E2A\u53C2\u6570\u5206\u522B\u662F\u5565\uFF1F \u5206\u522B\u662F<code>Object proxy</code>: \u4EE3\u7406\u5BF9\u8C61\uFF0C<code>Method method</code>\uFF1A\u8C03\u7528\u7684\u65B9\u6CD5\uFF0C\u5C31\u662F<code>listRepos()</code>\u65B9\u6CD5\uFF0C<code>Object... args</code>\uFF1A\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u8FD9\u91CC\u662F<code>CharonChui</code>\u3002</p><p>\u6709\u5173\u52A8\u6001\u4EE3\u7406\u4ECB\u7ECD\u53EF\u4EE5\u770B<a href="">\u5F20\u5B5D\u7965\u8001\u5E08\u7684java1.5\u9AD8\u65B0\u6280\u672F\u7CFB\u5217\u4E2D\u7684\u52A8\u6001\u4EE3\u7406</a></p><p>\u8FD9\u91CC\u5C31\u4E0D\u4ED4\u7EC6\u4ECB\u7ECD\u52A8\u6001\u4EE3\u7406\u4E86\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u53C8\u5206\u4E3A\u4E09\u90E8\u5206:</p><ul><li><code>loadServiceMethod()</code></li><li><code>new OkHttpCall()</code></li><li><code>serviceMethod.callAdapter.adapt()</code></li></ul><p>\u6211\u4EEC\u8FD9\u91CC\u5206\u522B\u6765\u8FDB\u884C\u5206\u6790\u3002</p><ul><li><p><code>loadServiceMethod()</code> \u5B9E\u73B0\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ServiceMethod</span> <span class="token function">loadServiceMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ServiceMethod</span> result<span class="token punctuation">;</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>serviceMethodCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ServiceMethod\u5305\u542B\u4E86\u8BF7\u6C42\u7684\u6240\u6709\u76F8\u5173\u6570\u636E\uFF0C\u4EE5\u53CA\u83B7\u53D6\u8BF7\u6C42\u7684request\u548C\u628A\u8BF7\u6C42\u7ED3\u679C\u8F6C\u6362\u6210java\u5BF9\u8C61\uFF0C\u6240\u4EE5\u76F8\u6BD4\u8F83\u800C\u8A00\u8F83\u91CD\uFF0C\u7528\u7F13\u5B58\u6765\u63D0\u9AD8\u6548\u7387\u3002</span>
      result <span class="token operator">=</span> serviceMethodCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// build</span>
        result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServiceMethod<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serviceMethodCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F1A\u901A\u8FC7\u7F13\u5B58\u7684\u65B9\u5F0F\u6765\u83B7\u53D6\u4E00\u4E2A<code>ServiceMethod</code>\u7C7B\u3002\u901A\u8FC7\u7F13\u5B58\u6765\u4FDD\u8BC1\u540C\u4E00\u4E2A<code>API</code>\u7684\u540C\u4E00\u4E2A\u65B9\u6CD5\u53EA\u4F1A\u521B\u5EFA\u4E00\u6B21\u3002 \u6709\u5173<code>ServiceMethod</code>\u7C7B\u7684\u6587\u6863\u4ECB\u7ECD\u662F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Adapts</span> an invocation of an <span class="token keyword">interface</span> method into an HTTP call<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5927\u4F53\u7FFB\u8BD1\u4E00\u4E0B\u5C31\u662F\u5C06\u4E00\u4E2A\u8BF7\u6C42\u63A5\u53E3\u7684\u65B9\u6CD5\u8F6C\u6362\u5230<code>Http Call</code>\u4E2D\u8C03\u7528\u3002</p><p>\u800C\u4E0A\u9762\u7B2C\u4E00\u6B21\u4F7F\u7528\u7684\u65F6\u5019\u4F1A\u901A\u8FC7<code>new ServiceMethod.Builder(this, method).build()</code>\u521B\u5EFA\uFF0C\u90A3\u6211\u4EEC\u770B\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ServiceMethod</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u521B\u5EFACallAdapter\u7528\u6765\u4EE3\u7406Call</span>
      callAdapter <span class="token operator">=</span> <span class="token function">createCallAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      responseType <span class="token operator">=</span> callAdapter<span class="token punctuation">.</span><span class="token function">responseType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType <span class="token operator">==</span> <span class="token class-name">Response</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">||</span> responseType <span class="token operator">==</span> <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Response</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span>
            <span class="token operator">+</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">getRawType</span><span class="token punctuation">(</span>responseType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">+</span> <span class="token string">&quot;&#39; is not a valid response body type. Did you mean ResponseBody?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// responseConverter\u7528\u6765\u89E3\u6790\u7ED3\u679C\u5C06json\u7B49\u8FD4\u56DE\u7ED3\u679C\u89E3\u6790\u6210java\u5BF9\u8C61</span>
      responseConverter <span class="token operator">=</span> <span class="token function">createResponseConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Annotation</span> annotation <span class="token operator">:</span> methodAnnotations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">parseMethodAnnotation</span><span class="token punctuation">(</span>annotation<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>httpMethod <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP method annotation is required (e.g., @GET, @POST, etc.).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isMultipart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span>
              <span class="token string">&quot;Multipart can only be specified on HTTP methods with request body (e.g., @POST).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isFormEncoded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;FormUrlEncoded can only be specified on HTTP methods with &quot;</span>
              <span class="token operator">+</span> <span class="token string">&quot;request body (e.g., @POST).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">int</span> parameterCount <span class="token operator">=</span> parameterAnnotationsArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      parameterHandlers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParameterHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>parameterCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> parameterCount<span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Type</span> parameterType <span class="token operator">=</span> parameterTypes<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">hasUnresolvableType</span><span class="token punctuation">(</span>parameterType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token function">parameterError</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">&quot;Parameter type must not include a type variable or wildcard: %s&quot;</span><span class="token punctuation">,</span>
              parameterType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		<span class="token comment">//  \u89E3\u6790\u5BF9\u5E94method\u7684\u6CE8\u89E3\uFF0C\u8FD9\u91CC\u662FlistRepos\u65B9\u6CD5\u7684\u6CE8\u89E3\u3002</span>
        <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterAnnotations <span class="token operator">=</span> parameterAnnotationsArray<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parameterAnnotations <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token function">parameterError</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">&quot;No Retrofit annotation found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u901A\u8FC7\u6CE8\u89E3\u548C\u53C2\u6570\u7C7B\u578B\uFF0C\u89E3\u6790\u5E76\u8D4B\u503C\u5230parameterHandlers\u4E2D</span>
        parameterHandlers<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseParameter</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> parameterType<span class="token punctuation">,</span> parameterAnnotations<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>relativeUrl <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>gotUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;Missing either @%s URL or @Url parameter.&quot;</span><span class="token punctuation">,</span> httpMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isFormEncoded <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isMultipart <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hasBody <span class="token operator">&amp;&amp;</span> gotBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;Non-body HTTP method cannot contain @Body.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isFormEncoded <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>gotField<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;Form-encoded method must contain at least one @Field.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isMultipart <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>gotPart<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">methodError</span><span class="token punctuation">(</span><span class="token string">&quot;Multipart method must contain at least one @Part.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u521B\u5EFA\`ServiceMethod()\`\u5BF9\u8C61</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServiceMethod</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u8D77\u6765\u8BF4\uFF0C\u5C31\u662F\u521B\u5EFA<code>CallAdapter</code>\u3001<code>responseConverter</code>\u3001\u89E3\u6790\u6CE8\u89E3\u3001\u8BBE\u7F6E\u53C2\u6570\uFF0C\u7136\u540E\u521B\u5EFA<code>ServiceMethod</code>\u5BF9\u8C61\u3002</p><p>\u800C<code>ServiceMethod</code>\u7684\u6784\u9020\u51FD\u6570\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ServiceMethod</span><span class="token punctuation">(</span><span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callFactory <span class="token operator">=</span> builder<span class="token punctuation">.</span>retrofit<span class="token punctuation">.</span><span class="token function">callFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>callAdapter <span class="token operator">=</span> builder<span class="token punctuation">.</span>callAdapter<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> builder<span class="token punctuation">.</span>retrofit<span class="token punctuation">.</span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>responseConverter <span class="token operator">=</span> builder<span class="token punctuation">.</span>responseConverter<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>httpMethod <span class="token operator">=</span> builder<span class="token punctuation">.</span>httpMethod<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>relativeUrl <span class="token operator">=</span> builder<span class="token punctuation">.</span>relativeUrl<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>headers <span class="token operator">=</span> builder<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>contentType <span class="token operator">=</span> builder<span class="token punctuation">.</span>contentType<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>hasBody <span class="token operator">=</span> builder<span class="token punctuation">.</span>hasBody<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isFormEncoded <span class="token operator">=</span> builder<span class="token punctuation">.</span>isFormEncoded<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isMultipart <span class="token operator">=</span> builder<span class="token punctuation">.</span>isMultipart<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parameterHandlers <span class="token operator">=</span> builder<span class="token punctuation">.</span>parameterHandlers<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u5417\uFF1F \u8FD9\u4E00\u90E8\u5206\u6211\u4EEC\u5E94\u8BE5\u90FD\u7A0D\u5FAE\u6709\u70B9\u5370\u8C61\uFF0C\u56E0\u4E3A\u5728\u4E0A\u4E00\u7BC7\u6587\u7AE0\u4ECB\u7ECD\u4F7F\u7528\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u57FA\u672C\u4F1A\u7528\u5230\u8FD9\u91CC\u3002</p></li></ul><p>\u81F3\u4E8E\u8FD9\u91CC\u7684<code>CallAdapter</code>\u3001<code>ResponseConverter</code>\u3001<code>Headers</code>\u3001<code>ParamterHandlers</code>\u7B49\u8FD9\u91CC\u5C31\u4E0D\u5206\u6790\u4E86\uFF0C\u6700\u540E\u6211\u4EEC\u518D\u7B80\u5355\u4ECB\u7ECD\u4E0B\u3002</p><ul><li><p>\u521B\u5EFA<code>OkHttpCall</code></p><p>\u63A5\u4E0B\u6765\u4F1A\u521B\u5EFA<code>OkHttpCall</code>\uFF0C\u800C<code>OkHttpCall</code>\u662F<code>Call</code>\u7684\u5B50\u7C7B\uFF0C\u90A3<code>Call</code>\u662F\u4EC0\u4E48\u9B3C\uFF1F \u5B83\u662F\u5177\u4F53\u7684\u7F51\u7EDC\u8BF7\u6C42\u7C7B\u3002</p><p>\u6587\u6863\u4E2D\u5BF9<code>Call</code>\u7C7B\u7684\u4ECB\u7ECD\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * An invocation of a Retrofit method that sends a request to a webserver and returns a response.
 * Each call yields its own HTTP request and response pair. Use <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">clone</span></span><span class="token punctuation">}</span> to make multiple
 * calls with the same parameters to the same webserver; this may be used to implement polling or
 * to retry a failed call.
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Calls may be executed synchronously with <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">execute</span></span><span class="token punctuation">}</span>, or asynchronously with <span class="token punctuation">{</span><span class="token keyword">@link</span>
 * <span class="token reference"><span class="token punctuation">#</span><span class="token field">enqueue</span></span><span class="token punctuation">}</span>. In either case the call can be canceled at any time with <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">cancel</span></span><span class="token punctuation">}</span>. A call that
 * is busy writing its request or reading its response may receive a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">IOException</span></span><span class="token punctuation">}</span>; this is
 * working as designed.
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> Successful response body type.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Cloneable</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u8FD9\u91CC\u6211\u7279\u5730\u628A\u8FD9\u53E5\u8BDD\u653E\u4E0A\uFF0CCall\u96C6\u6210\u4E86Cloneable\u63A5\u53E3\u3002</span>
	<span class="token comment">// \u6BCF\u4E00\u4E2A call \u5BF9\u8C61\u5B9E\u4F8B\u53EA\u80FD\u88AB\u7528\u4E00\u6B21\uFF0C\u6240\u4EE5\u8BF4 request \u548C response \u90FD\u662F\u4E00\u4E00\u5BF9\u5E94\u7684\u3002\u4F60\u5176\u5B9E\u53EF\u4EE5\u901A\u8FC7 Clone \u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A\u4E00\u6A21\u4E00\u6837\u7684\u5B9E\u4F8B\uFF0C\u8FD9\u4E2A\u5F00\u9500\u662F\u5F88\u5C0F\u7684\u3002\u6BD4\u5982\u8BF4\uFF1A\u4F60\u53EF\u4EE5\u5728\u6BCF\u6B21\u51B3\u5B9A\u53D1\u8BF7\u6C42\u524D clone \u4E00\u4E2A\u4E4B\u524D\u7684\u5B9E\u4F8B\u3002</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Retrofit</code>\u5E95\u5C42\u9ED8\u8BA4\u4F7F\u7528<code>OkHttp</code>\uFF0C\u6240\u4EE5\u5F53\u7136\u8981\u521B\u5EFA<code>OkHttpCall</code>\u4E86\u3002</p><ul><li><code>serviceMethod.callAdapter.adapt(okHttpCall)</code></li></ul><p>\u8FD9\u4E2A<code>CallApdater</code>\u662F\u4EC0\u4E48\u9B3C\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Adapts a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Call</span></span><span class="token punctuation">}</span> into the type of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">T</span></span></span><span class="token punctuation">}</span>. Instances are created by <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Factory</span></span> a
 * factory<span class="token punctuation">}</span> which is <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token class-name">Retrofit</span><span class="token punctuation">.</span><span class="token class-name">Builder</span><span class="token punctuation">#</span><span class="token function">addCallAdapterFactory</span><span class="token punctuation">(</span><span class="token class-name">Factory</span><span class="token punctuation">)</span></span> installed<span class="token punctuation">}</span> into
 * the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Retrofit</span></span><span class="token punctuation">}</span> instance.
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u5F88\u7B80\u5355\u7684\u770B\u51FA\u6765\u8FD9\u662F\u4E00\u4E2A\u7ED3\u679C\u7C7B\u578B\u8F6C\u6362\u7684\u7C7B\u3002\u5C31\u662F<code>Call</code>\u7684\u9002\u914D\u5668\uFF0C\u4F5C\u7528\u5C31\u662F\u521B\u5EFA/\u8F6C\u6362<code>Call</code>\u5BF9\u8C61\uFF0C\u628A<code>Call</code>\u8F6C\u6362\u6210\u9884\u671F\u7684\u683C\u5F0F\u3002<code>CallAdatper</code>\u521B\u5EFA\u662F\u901A\u8FC7<code>CallAdapter.factory</code>\u5DE5\u5382\u7C7B\u8FDB\u884C\u7684\u3002<code>DefaultCallAdapter</code>\u4E3A<code>Retrofit2</code>\u81EA\u5E26\u9ED8\u8BA4<code>Call</code>\u8F6C\u6362\u5668\uFF0C\u7528\u6765\u751F\u6210<code>OKHTTP</code>\u7684<code>call</code>\u8BF7\u6C42\u8C03\u7528\u3002</p><p>\u800C\u5B83\u91CC\u9762\u7684<code>adapt()</code>\u65B9\u6CD5\u7684\u4F5C\u7528\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
   * Returns an instance of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">T</span></span></span><span class="token punctuation">}</span> which delegates to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">call</span></span><span class="token punctuation">}</span>.
   * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
   * For example, given an instance for a hypothetical utility, <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">Async</span></span></span><span class="token punctuation">}</span>, this instance would
   * return a new <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">Async</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span></span></span><span class="token punctuation">}</span> which invoked <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">call</span></span><span class="token punctuation">}</span> when run.
   * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>
   <span class="token code-section">* <span class="token line"><span class="token entity" title="@">&amp;#64;</span><span class="token code language-java"><span class="token class-name">Override</span></span></span>
   * <span class="token line"><span class="token code language-java"><span class="token keyword">public</span> </span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">R</span></span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token code language-java"> <span class="token class-name">Async</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">R</span></span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token code language-java"> <span class="token function">adapt</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Call</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">R</span></span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token code language-java"> call<span class="token punctuation">)</span> <span class="token punctuation">{</span></span></span>
   *   <span class="token line"><span class="token code language-java"><span class="token keyword">return</span> <span class="token class-name">Async</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">Response</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">R</span></span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token code language-java"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span></span>
   *     <span class="token line"><span class="token entity" title="@">&amp;#64;</span><span class="token code language-java"><span class="token class-name">Override</span></span></span>
   *     <span class="token line"><span class="token code language-java"><span class="token keyword">public</span> <span class="token class-name">Response</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span><span class="token code language-java"><span class="token class-name">R</span></span><span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token code language-java"> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span></span>
   *       <span class="token line"><span class="token code language-java"><span class="token keyword">return</span> call<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>
   *     <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span></span></span>
   *   <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>
   * <span class="token line"><span class="token code language-java"><span class="token punctuation">}</span></span></span>
   *</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
   */</span>
  <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">adapt</span><span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> call<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\u5206\u6790\u5230\u8FD9\u91CC\u6211\u4EEC\u57FA\u672C\u660E\u767D\u4E86<code>retrofit.create()</code>\u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u5C31\u662F\u5C06\u8BF7\u6C42\u63A5\u53E3\u7684\u670D\u52A1\u7C7B\u8F6C\u6362\u6210<code>Call</code>\uFF0C\u7136\u540E\u5C06<code>Call</code>\u7684\u7ED3\u679C\u8F6C\u6362\u6210\u5B9E\u4F53\u7C7B\u3002</p></li></ul><ol start="3"><li>\u8C03\u7528\u65B9\u6CD5\uFF0C\u5F97\u5230<code>Call</code>\u5BF9\u8C61</li></ol><hr><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Call</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Repo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> call <span class="token operator">=</span> gitHubService<span class="token punctuation">.</span><span class="token function">listRepos</span><span class="token punctuation">(</span><span class="token string">&quot;CharonChui&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5C31\u4E0D\u5206\u6790\u4E86\uFF0C\u5C31\u662F\u5728<code>ServiceMethod</code>\u4E2D\u8FD4\u56DE\u7684<code>Call</code>\u3002</p><ol start="4"><li>\u8C03\u7528<code>Call.enqueue()</code></li></ol><hr><p>\u5728\u4E0A\u9762\u5206\u6790\u4E86\uFF0C\u8FD9\u4E2A<code>Call</code>\u5176\u5B9E\u662F<code>OkHttpCall</code>\uFF0C\u90A3\u6211\u4EEC\u6765\u770B\u4E00\u4E0B<code>OkHttpCall.enqueue()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Callback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;callback == null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Call</span> call<span class="token punctuation">;</span>
    <span class="token class-name">Throwable</span> failure<span class="token punctuation">;</span>

    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>executed<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Already executed.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      executed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

      call <span class="token operator">=</span> rawCall<span class="token punctuation">;</span>
      failure <span class="token operator">=</span> creationFailure<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>call <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> failure <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8C03\u7528createRawCall()\u65B9\u6CD5\u521B\u5EFACall</span>
          call <span class="token operator">=</span> rawCall <span class="token operator">=</span> <span class="token function">createRawCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          failure <span class="token operator">=</span> creationFailure <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>failure <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      callback<span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> failure<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>canceled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      call<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u628A\u8BF7\u6C42\u4EFB\u52A1\u52A0\u5165\u5230okhttp\u7684\u8BF7\u6C42\u961F\u5217\u4E2D\uFF0C\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u6CE8\u610F\u8FD9\u91CC\u7684Call\u662Fokhttp3.Call</span>
    call<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Call</span> call<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Response</span> rawResponse<span class="token punctuation">)</span>
          <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> response<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u89E3\u6790\u7ED3\u679C\uFF0C\u8BE5\u65B9\u6CD5\u5185\u90E8\u4F1A\u5C06OkHttp\u4E2DRequest\u7684\u6267\u884C\u7ED3\u679C\u8F6C\u6362\u6210\u5BF9\u5E94\u7684Java\u5BF9\u8C61\u3002</span>
          response <span class="token operator">=</span> <span class="token function">parseResponse</span><span class="token punctuation">(</span>rawResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">callFailure</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">callSuccess</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Call</span> call<span class="token punctuation">,</span> <span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          callback<span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">OkHttpCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">callFailure</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          callback<span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">OkHttpCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">callSuccess</span><span class="token punctuation">(</span><span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          callback<span class="token punctuation">.</span><span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token class-name">OkHttpCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u90E8\u5206\u4E5F\u4E3B\u8981\u5206\u4E3A\u4E09\u90E8\u5206:</p><ul><li>\u521B\u5EFACall</li><li>\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42</li><li>\u89E3\u6790\u7ED3\u679C</li></ul><h4 id="\u7B2C\u4E00\u90E8\u5206-\u521B\u5EFAcall" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u90E8\u5206-\u521B\u5EFAcall" aria-hidden="true">#</a> \u7B2C\u4E00\u90E8\u5206\uFF1A\u521B\u5EFA<code>Call</code></h4><p>\u6211\u4EEC\u5206\u522B\u8FDB\u884C\u5206\u6790\uFF0C\u9996\u5148\u662F<code>createRawCall()</code>\u65B9\u6CD5\u7684\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Call</span> <span class="token function">createRawCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token comment">// ServiceMethod.toRequest()\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u5C06ServiceMethod\u4E2D\u7684\u7F51\u7EDC\u8BF7\u6C42\u76F8\u5173\u7684\u6570\u636E\u8F6C\u6362\u6210\u4E00\u4E2AOkHttp\u7684\u7F51\u7EDC\u8BF7\u6C42\u6240\u9700\u8981\u7684Request\u5BF9\u8C61\u3002\u56E0\u4E3A\u4E4B\u524D\u5206\u6790\u8FC7\u6240\u6709Retrofit\u89E3\u6790\u7684\u7F51\u7EDC\u8BF7\u6C42\u76F8\u5173\u7684\u6570\u636E\u90FD\u662F\u5728ServiceMethod\u4E2D</span>
  <span class="token class-name">Request</span> request <span class="token operator">=</span> serviceMethod<span class="token punctuation">.</span><span class="token function">toRequest</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8C03\u7528Factory.newCall\u65B9\u6CD5</span>
  <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>Call</span> call <span class="token operator">=</span> serviceMethod<span class="token punctuation">.</span>callFactory<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>call <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;Call.Factory returned null.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> call<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u770B\u4E00\u4E0B<code>Factory.newCall()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>
    <span class="token class-name">Call</span> <span class="token function">newCall</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u7684\u5B9E\u73B0\u7C7B\u662F<code>OkHttpClient</code>\u7C7B\u4E2D\u7684<code>newCall()</code>\u65B9\u6CD5\uFF0C\u5E76\u4E14\u521B\u5EFA<code>RealCall</code>\u5BF9\u8C61:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">Call</span> <span class="token function">newCall</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RealCall</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7B2C\u4E8C\u90E8\u5206-\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u90E8\u5206-\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42" aria-hidden="true">#</a> \u7B2C\u4E8C\u90E8\u5206\uFF1A\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42</h4><p>\u8FD9\u4E00\u90E8\u5206\u662F\u5728<code>call.enqueue()</code>\u65B9\u6CD5\u4E2D\u6267\u884C\u7684\uFF0C\u4E0A\u9762\u6211\u4EEC\u5206\u6790\u4E86\u521B\u5EFA\u7684<code>Call</code>\u6700\u7EC8\u662F<code>RealCall</code>\u7C7B\uFF0C\u6240\u4EE5\u8FD9\u91CC\u76F4\u63A5\u5230\u770B<code>RealCall.enqueue()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token class-name">Callback</span> responseCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">enqueue</span><span class="token punctuation">(</span>responseCallback<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">void</span> <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token class-name">Callback</span> responseCallback<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>executed<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Already Executed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      executed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8C03\u7528OkHttpClient\u4E2D\u7684Dispatcher\u4E2D\u7684enqueue\u65B9\u6CD5</span>
    client<span class="token punctuation">.</span><span class="token function">dispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AsyncCall</span><span class="token punctuation">(</span>responseCallback<span class="token punctuation">,</span> forWebSocket<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u63A5\u7740\u770B<code>client.dispatcher().enqueue()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token class-name">AsyncCall</span> call<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// maxRequests\u7684\u4E2A\u6570\u662F64;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>runningAsyncCalls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> maxRequests <span class="token operator">&amp;&amp;</span> <span class="token function">runningCallsForHost</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span> <span class="token operator">&lt;</span> maxRequestsPerHost<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      runningAsyncCalls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u7EBF\u7A0B\u6C60\u6267\u884C</span>
      <span class="token function">executorService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      readyAsyncCalls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u8FD9\u4E2A\u53C2\u6570<code>AsyncCall</code>\u662F\u4EC0\u4E48\u9B3C\uFF1F \u5B83\u662F<code>RealCall</code>\u7684\u5185\u90E8\u7C7B\uFF0C\u5B83\u91CC\u9762\u7684<code>execute()</code>\u65B9\u6CD5\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1F \u53EA\u8981\u627E\u5230\u8BE5\u65B9\u6CD5\u7684\u5B9E\u73B0\u5C31\u7B97\u662F\u5B8C\u6210\u4E86\u3002</p><p>\u9996\u5148\u770B\u4E00\u4E0B<code>AsyncCall</code>\u7684\u58F0\u660E\u548C\u6784\u9020:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">AsyncCall</span> <span class="token keyword">extends</span> <span class="token class-name">NamedRunnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Callback</span> responseCallback<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">AsyncCall</span><span class="token punctuation">(</span><span class="token class-name">Callback</span> responseCallback<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;OkHttp %s&quot;</span><span class="token punctuation">,</span> <span class="token function">redactedUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>responseCallback <span class="token operator">=</span> responseCallback<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>forWebSocket <span class="token operator">=</span> forWebSocket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NamedRunnable</code>\u662F<code>Runnable</code>\u7684\u5B9E\u73B0\u7C7B\u3002\u6211\u4EEC\u770B\u4E00\u4E0B\u5B83\u7684<code>execute()</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">boolean</span> signalledCallback <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u8BF7\u6C42\u7ED3\u679C</span>
        <span class="token class-name">Response</span> response <span class="token operator">=</span> <span class="token function">getResponseWithInterceptorChain</span><span class="token punctuation">(</span>forWebSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>canceled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          signalledCallback <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          responseCallback<span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">RealCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;Canceled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          signalledCallback <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5C06\u54CD\u5E94\u7ED3\u679C\u8BBE\u7F6E\u7ED9\u4E4B\u524D\u6784\u9020\u51FD\u6570\u4F20\u9012\u56DE\u6765\u7684\u56DE\u8C03</span>
          responseCallback<span class="token punctuation">.</span><span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token class-name">RealCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>signalledCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// Do not signal the callback twice!</span>
          <span class="token class-name">Platform</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>INFO<span class="token punctuation">,</span> <span class="token string">&quot;Callback failure for &quot;</span> <span class="token operator">+</span> <span class="token function">toLoggableString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          responseCallback<span class="token punctuation">.</span><span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">RealCall</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        client<span class="token punctuation">.</span><span class="token function">dispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finished</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u770B\u4E00\u4E0B<code>RealCall.getResponseWithInterceptorChain()</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Response</span> <span class="token function">getResponseWithInterceptorChain</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Interceptor<span class="token punctuation">.</span>Chain</span> chain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationInterceptorChain</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> originalRequest<span class="token punctuation">,</span> forWebSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span>originalRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">class</span> <span class="token class-name">ApplicationInterceptorChain</span> <span class="token keyword">implements</span> <span class="token class-name">Interceptor<span class="token punctuation">.</span>Chain</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> index<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Request</span> request<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">;</span>

    <span class="token class-name">ApplicationInterceptorChain</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>index <span class="token operator">=</span> index<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>request <span class="token operator">=</span> request<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>forWebSocket <span class="token operator">=</span> forWebSocket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">Request</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> request<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">Response</span> <span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
      <span class="token comment">// If there&#39;s another interceptor in the chain, call that.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> client<span class="token punctuation">.</span><span class="token function">interceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Interceptor<span class="token punctuation">.</span>Chain</span> chain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationInterceptorChain</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> request<span class="token punctuation">,</span> forWebSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Interceptor</span> interceptor <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">interceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Response</span> interceptedResponse <span class="token operator">=</span> interceptor<span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span>chain<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>interceptedResponse <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;application interceptor &quot;</span> <span class="token operator">+</span> interceptor
              <span class="token operator">+</span> <span class="token string">&quot; returned null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> interceptedResponse<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// No more interceptors. Do HTTP.</span>
      <span class="token keyword">return</span> <span class="token function">getResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> forWebSocket<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53C8\u4F1A\u8C03\u7528<code>getResponse()</code>\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
   * Performs the request and returns the response. May return null if this call was canceled.
   */</span>
  <span class="token class-name">Response</span> <span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token keyword">boolean</span> forWebSocket<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// Copy body metadata to the appropriate request headers.</span>
    <span class="token class-name">RequestBody</span> body <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>body <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span> requestBuilder <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">MediaType</span> contentType <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>contentType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        requestBuilder<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> contentType<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">long</span> contentLength <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLength <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        requestBuilder<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>contentLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestBuilder<span class="token punctuation">.</span><span class="token function">removeHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Transfer-Encoding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        requestBuilder<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Transfer-Encoding&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;chunked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestBuilder<span class="token punctuation">.</span><span class="token function">removeHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      request <span class="token operator">=</span> requestBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Create the initial HTTP engine. Retries and redirects need new engine for each attempt.</span>
    engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEngine</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> forWebSocket<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> followUpCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>canceled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        engine<span class="token punctuation">.</span><span class="token function">releaseStreamAllocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;Canceled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">boolean</span> releaseConnection <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        engine<span class="token punctuation">.</span><span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        engine<span class="token punctuation">.</span><span class="token function">readResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        releaseConnection <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RequestException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The attempt to interpret the request failed. Give up.</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RouteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The attempt to connect via a route failed. The request will not have been sent.</span>
        <span class="token class-name">HttpEngine</span> retryEngine <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">recover</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getLastConnectException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retryEngine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          releaseConnection <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          engine <span class="token operator">=</span> retryEngine<span class="token punctuation">;</span>
          <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Give up; recovery is not possible.</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">getLastConnectException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// An attempt to communicate with a server failed. The request may have been sent.</span>
        <span class="token class-name">HttpEngine</span> retryEngine <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">recover</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retryEngine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          releaseConnection <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          engine <span class="token operator">=</span> retryEngine<span class="token punctuation">;</span>
          <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Give up; recovery is not possible.</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment">// We&#39;re throwing an unchecked exception. Release any resources.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>releaseConnection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">StreamAllocation</span> streamAllocation <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          streamAllocation<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token class-name">Response</span> response <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Request</span> followUp <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">followUpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>followUp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>forWebSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          engine<span class="token punctuation">.</span><span class="token function">releaseStreamAllocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token class-name">StreamAllocation</span> streamAllocation <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>followUpCount <span class="token operator">&gt;</span> MAX_FOLLOW_UPS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        streamAllocation<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ProtocolException</span><span class="token punctuation">(</span><span class="token string">&quot;Too many follow-up requests: &quot;</span> <span class="token operator">+</span> followUpCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>engine<span class="token punctuation">.</span><span class="token function">sameConnection</span><span class="token punctuation">(</span>followUp<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        streamAllocation<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        streamAllocation <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>streamAllocation<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Closing the body of &quot;</span> <span class="token operator">+</span> response
            <span class="token operator">+</span> <span class="token string">&quot; didn&#39;t close its backing stream. Bad interceptor?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      request <span class="token operator">=</span> followUp<span class="token punctuation">;</span>
      engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEngine</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> forWebSocket<span class="token punctuation">,</span> streamAllocation<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
          response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u4E86\u6CA1\u6709\uFF1F \u5B8C\u4E86....</p><p>\u4E0A\u9762\u53EA\u662F\u7B80\u5355\u7684\u5206\u6790\u4E86\u4E0B\u5927\u4F53\u7684\u8C03\u7528\u6D41\u7A0B\u548C\u4E3B\u8981\u7684\u7C7B\uFF0C\u4F46\u662F\u597D\u50CF\u5E76\u6CA1\u6709\u4EC0\u4E48\u4E71\u7528\uFF0C\u56E0\u4E3A\u6CA1\u6709\u5177\u4F53\u7684\u53BB\u5206\u6790\u91CC\u9762\u5404\u90E8\u5206\u7684\u5B9E\u73B0\uFF0C\u5982\u679C\u90FD\u5206\u6790\u4E0B\u6765\u5185\u5BB9\u592A\u591A\u4E86\u3002\u8FD9\u91CC\u5C31\u4E0D\u4ED4\u7EC6\u770B\u4E86\uFF0C\u5927\u4F53\u603B\u7ED3\u4E00\u4E0B\u3002</p><p>\u901A\u8FC7\u4E0A\u9762\u7684\u5206\u6790\uFF0C\u6700\u7EC8\u7684\u7F51\u7EDC\u8BF7\u6C42\u662F\u5728<code>OkHttp</code>\u7684<code>Call</code>\u4E2D\u53BB\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u8BF4<code>Retrofit</code>\u5176\u5B9E\u662F\u5C06\u4E00\u4E2A<code>Java</code>\u63A5\u53E3\u901A\u8FC7\u6CE8\u89E3\u7B49\u65B9\u5F0F\u6765\u89E3\u6790\u53C2\u6570\u7B49\u7136\u540E\u8F6C\u6362\u6210\u4E00\u4E2A\u8BF7\u6C42\u4EA4\u7ED9<code>OkHttp</code>\u53BB\u6267\u884C\uFF0C\u7136\u540E\u5C06\u6267\u884C\u7ED3\u679C\u8FDB\u884C\u89E3\u6790\u8F6C\u6362\u66B4\u9732\u7ED9\u4E0A\u5C42\u8C03\u7528\u8005\u3002 \u800C\u8FD9\u4E00\u5207\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u5462\uFF1F <code>Retrofit</code>\u975E\u5E38\u5DE7\u5999\u7684\u7528\u6CE8\u89E3\u6765\u63CF\u8FF0\u4E00\u4E2A<code>HTTP</code>\u8BF7\u6C42\uFF0C\u5C06\u4E00\u4E2A<code>HTTP</code>\u8BF7\u6C42\u62BD\u8C61\u6210\u4E00\u4E2A<code>Java</code>\u63A5\u53E3\uFF0C\u7136\u540E\u7528\u4E86<code>\u52A8\u6001\u4EE3\u7406</code>\u7684\u65B9\u5F0F\uFF0C\u52A8\u6001\u7684\u5C06\u8FD9\u4E2A\u63A5\u53E3\u7684\u6CE8\u89E3\u8F6C\u6362\u6210\u4E00\u4E2A<code>HTTP</code>\u8BF7\u6C42\uFF0C\u7136\u540E\u518D\u5C06\u8FD9\u4E2A<code>Http</code>\u8BF7\u6C42\u4EA4\u7ED9<code>OkHttp</code>\u6267\u884C\u3002</p><p>\u52A8\u6001\u4EE3\u7406\u7528\u7684\u592A\u5999\uFF0C\u800C\u5B83\u7684\u8FC7\u7A0B\u4E2D\u4E5F\u4F7F\u7528\u4E86\u5927\u91CF\u7684\u5DE5\u5382\u6A21\u5F0F\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5206\u6790\u4E86\u3002</p><p>\u53C2\u8003:</p>`,61),k={href:"https://realm.io/news/droidcon-jake-wharton-simple-http-retrofit-2",target:"_blank",rel:"noopener noreferrer"},r=t("simple-http-retrofit-2"),d={href:"http://square.github.io/retrofit/2.x/retrofit/",target:"_blank",rel:"noopener noreferrer"},v=t("Retrofit API"),m=n("hr",null,null,-1),b=n("ul",null,[n("li",null,"\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com"),n("li",null,"Good Luck!")],-1);function y(w,g){const s=e("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[r,a(s)])]),n("li",null,[n("a",d,[v,a(s)])])]),m,b])}var f=p(i,[["render",y],["__file","Retrofit\u8BE6\u89E3(\u4E0B).html.vue"]]);export{f as default};
