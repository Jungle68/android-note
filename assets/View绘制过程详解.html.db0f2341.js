import{_ as n,o as s,c as a,e as t}from"./app.e2a3b496.js";const p={},e=t(`<h1 id="view\u7ED8\u5236\u8FC7\u7A0B\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#view\u7ED8\u5236\u8FC7\u7A0B\u8BE6\u89E3" aria-hidden="true">#</a> View\u7ED8\u5236\u8FC7\u7A0B\u8BE6\u89E3</h1><p>\u754C\u9762\u7A97\u53E3\u7684\u6839\u5E03\u5C40\u662F<code>DecorView</code>\uFF0C\u8BE5\u7C7B\u7EE7\u627F\u81EA<code>FrameLayout</code>.\u8BF4\u5230<code>View</code>\u7ED8\u5236\uFF0C\u60F3\u5230\u7684\u5C31\u662F\u4ECE\u8FD9\u91CC\u5165\u624B\uFF0C\u800C<code>FrameLayout</code>\u7EE7\u627F\u81EA<code>ViewGroup</code>\u3002\u611F\u89C9\u7ED8\u5236\u80AF\u5B9A\u4F1A\u5728<code>ViewGroup</code>\u6216\u8005<code>View</code>\u4E2D\uFF0C \u4F46\u662F\u6728\u6709\u627E\u5230\u3002\u53D1\u73B0<code>ViewGroup</code>\u5B9E\u73B0<code>ViewParent</code>\u63A5\u53E3\uFF0C\u800C<code>ViewParent</code>\u6709\u4E00\u4E2A\u5B9E\u73B0\u7C7B\u662F<code>ViewRootImpl</code>\uFF0C <code>ViewGruop</code>\u4E2D\u4F1A\u4F7F\u7528<code>ViewRootImpl</code>...</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The top of a view hierarchy, implementing the needed protocol between View
 * and the WindowManager.  This is for the most part an internal implementation
 * detail of <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">WindowManagerGlobal</span></span><span class="token punctuation">}</span>.
 *
 * <span class="token punctuation">{</span><span class="token keyword">@hide</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;EmptyCatchBlock&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PointlessBooleanExpression&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ViewRootImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ViewParent</span><span class="token punctuation">,</span>
        <span class="token class-name">View<span class="token punctuation">.</span>AttachInfo<span class="token punctuation">.</span>Callbacks</span><span class="token punctuation">,</span> <span class="token class-name">HardwareRenderer<span class="token punctuation">.</span>HardwareDrawCallbacks</span> <span class="token punctuation">{</span>
		
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>View</code>\u7684\u7ED8\u5236\u8FC7\u7A0B\u4ECE<code>ViewRootImpl.performTraversals()</code>\u65B9\u6CD5\u5F00\u59CB\u3002 \u9996\u5148\u5148\u8BF4\u660E\u4E00\u4E0B\uFF0C\u8FD9\u90E8\u5206\u4EE3\u7801\u6BD4\u8F83\u591A\uFF0C\u903B\u8F91\u4E5F\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u5F88\u5BB9\u6613\u5F04\u6655\uFF0C\u5982\u679C\u611F\u89C9\u770B\u8D77\u6765\u8D39\u52B2\uFF0C\u5C31\u8DF3\u8FC7\u8FD9\u4E00\u5757\uFF0C\u76F4\u63A5\u5230\u4E0B\u9762\u7684Measure\u3001Layout\u3001Draw\u90E8\u5206\u5F00\u59CB\u770B\u3002 \u6211\u4E5F\u6CA1\u6709\u5168\u90E8\u5F04\u6E05\u695A\uFF0C\u6211\u53EA\u662F\u628A\u91CC\u9762\u7684\u6B65\u9AA4\u6807\u6CE8\u4E86\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performTraversals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// ... \u6B64\u5904\u7701\u7565\u6E90\u4EE3\u7801N\u884C</span>

	<span class="token comment">// \u662F\u5426\u9700\u8981Measure</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mStopped<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> focusChangedDueToTouchMode <span class="token operator">=</span> <span class="token function">ensureTouchModeLocally</span><span class="token punctuation">(</span>
				<span class="token punctuation">(</span>relayoutResult<span class="token operator">&amp;</span><span class="token class-name">WindowManagerGlobal</span><span class="token punctuation">.</span>RELAYOUT_RES_IN_TOUCH_MODE<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>focusChangedDueToTouchMode <span class="token operator">||</span> mWidth <span class="token operator">!=</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token operator">||</span> mHeight <span class="token operator">!=</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> contentInsetsChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u8FD9\u91CC\u662F\u83B7\u53D6widthMeasureSpec,\u8FD9\u4FE9\u53C2\u6570\u4E0D\u662F\u4E00\u822C\u7684\u5C3A\u5BF8\u6570\u503C\uFF0C\u800C\u662F\u5C06\u6A21\u5F0F\u548C\u5C3A\u5BF8\u7EC4\u5408\u5728\u4E00\u8D77\u7684\u6570\u503C.</span>
			<span class="token comment">// getRootMeasureSpec\u65B9\u6CD5\u5185\u90E8\u4F1A\u4F7F\u7528MeasureSpec.makeMeasureSpec()\u65B9\u6CD5\u6765\u7EC4\u88C5\u4E00\u4E2AMeasureSpec\uFF0C</span>
			<span class="token comment">// \u5F53lp.width\u53C2\u6570\u7B49\u4E8EMATCH_PARENT\u7684\u65F6\u5019\uFF0CMeasureSpec\u7684specMode\u5C31\u7B49\u4E8EEXACTLY\uFF0C\u5F53lp.width\u7B49\u4E8EWRAP_CONTENT\u7684\u65F6\u5019\uFF0CMeasureSpec\u7684specMode\u5C31\u7B49\u4E8EAT_MOST\u3002</span>
			<span class="token comment">// \u5E76\u4E14MATCH_PARENT\u548CWRAP_CONTENT\u65F6\u7684specSize\u90FD\u662F\u7B49\u4E8EwindowSize\u7684\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u6839\u89C6\u56FE\u603B\u662F\u4F1A\u5145\u6EE1\u5168\u5C4F\u7684\u3002</span>
			<span class="token keyword">int</span> childWidthMeasureSpec <span class="token operator">=</span> <span class="token function">getRootMeasureSpec</span><span class="token punctuation">(</span>mWidth<span class="token punctuation">,</span> lp<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> childHeightMeasureSpec <span class="token operator">=</span> <span class="token function">getRootMeasureSpec</span><span class="token punctuation">(</span>mHeight<span class="token punctuation">,</span> lp<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_LAYOUT<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Ooops, something changed!  mWidth=&quot;</span>
					<span class="token operator">+</span> mWidth <span class="token operator">+</span> <span class="token string">&quot; measuredWidth=&quot;</span> <span class="token operator">+</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">+</span> <span class="token string">&quot; mHeight=&quot;</span> <span class="token operator">+</span> mHeight
					<span class="token operator">+</span> <span class="token string">&quot; measuredHeight=&quot;</span> <span class="token operator">+</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">+</span> <span class="token string">&quot; coveredInsetsChanged=&quot;</span> <span class="token operator">+</span> contentInsetsChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
			
			<span class="token comment">// \u8C03\u7528PerformMeasure\u65B9\u6CD5\u3002</span>
			 <span class="token comment">// Ask host how big it wants to be</span>
			<span class="token function">performMeasure</span><span class="token punctuation">(</span>childWidthMeasureSpec<span class="token punctuation">,</span> childHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Implementation of weights from WindowManager.LayoutParams</span>
			<span class="token comment">// We just grow the dimensions as needed and re-measure if</span>
			<span class="token comment">// needs be</span>
			<span class="token keyword">int</span> width <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> height <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">boolean</span> measureAgain <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>lp<span class="token punctuation">.</span>horizontalWeight <span class="token operator">&gt;</span> <span class="token number">0.0f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				width <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mWidth <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">*</span> lp<span class="token punctuation">.</span>horizontalWeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
				childWidthMeasureSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>
						<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
				measureAgain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>lp<span class="token punctuation">.</span>verticalWeight <span class="token operator">&gt;</span> <span class="token number">0.0f</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				height <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mHeight <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">*</span> lp<span class="token punctuation">.</span>verticalWeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
				childHeightMeasureSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span>
						<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
				measureAgain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>measureAgain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_LAYOUT<span class="token punctuation">)</span> <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>
						<span class="token string">&quot;And hey let&#39;s measure once more: width=&quot;</span> <span class="token operator">+</span> width
						<span class="token operator">+</span> <span class="token string">&quot; height=&quot;</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">performMeasure</span><span class="token punctuation">(</span>childWidthMeasureSpec<span class="token punctuation">,</span> childHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			layoutRequested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> didLayout <span class="token operator">=</span> layoutRequested <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mStopped<span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> triggerGlobalLayoutListener <span class="token operator">=</span> didLayout
			<span class="token operator">||</span> mAttachInfo<span class="token punctuation">.</span>mRecomputeGlobalAttributes<span class="token punctuation">;</span>
	<span class="token comment">// \u662F\u5426\u9700\u8981Layout</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>didLayout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u8C03\u7528performLayout\u65B9\u6CD5\u3002</span>
		<span class="token function">performLayout</span><span class="token punctuation">(</span>lp<span class="token punctuation">,</span> desiredWindowWidth<span class="token punctuation">,</span> desiredWindowHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// By this point all views have been sized and positioned</span>
		<span class="token comment">// We can compute the transparent area</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token class-name">View</span><span class="token punctuation">.</span>PFLAG_REQUEST_TRANSPARENT_REGIONS<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// start out transparent</span>
			<span class="token comment">// TODO: AVOID THAT CALL BY CACHING THE RESULT?</span>
			host<span class="token punctuation">.</span><span class="token function">getLocationInWindow</span><span class="token punctuation">(</span>mTmpLocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mTransparentRegion<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>mTmpLocation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mTmpLocation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
					mTmpLocation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> host<span class="token punctuation">.</span>mRight <span class="token operator">-</span> host<span class="token punctuation">.</span>mLeft<span class="token punctuation">,</span>
					mTmpLocation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> host<span class="token punctuation">.</span>mBottom <span class="token operator">-</span> host<span class="token punctuation">.</span>mTop<span class="token punctuation">)</span><span class="token punctuation">;</span>

			host<span class="token punctuation">.</span><span class="token function">gatherTransparentRegion</span><span class="token punctuation">(</span>mTransparentRegion<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mTranslator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mTranslator<span class="token punctuation">.</span><span class="token function">translateRegionInWindowToScreen</span><span class="token punctuation">(</span>mTransparentRegion<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mTransparentRegion<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mPreviousTransparentRegion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mPreviousTransparentRegion<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>mTransparentRegion<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mFullRedrawNeeded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				<span class="token comment">// reconfigure window manager</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					mWindowSession<span class="token punctuation">.</span><span class="token function">setTransparentRegion</span><span class="token punctuation">(</span>mWindow<span class="token punctuation">,</span> mTransparentRegion<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>DBG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;======================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;performTraversals -- after setFrame&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			host<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u662F\u5426\u9700\u8981Draw</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cancelDraw <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newSurface<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>skipDraw <span class="token operator">||</span> mReportNextDraw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mPendingTransitions <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mPendingTransitions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mPendingTransitions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mPendingTransitions<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startChangingAnimations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				mPendingTransitions<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u8C03\u7528performDraw\u65B9\u6CD5</span>
			<span class="token function">performDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>viewVisibility <span class="token operator">==</span> <span class="token class-name">View</span><span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Try again</span>
			<span class="token function">scheduleTraversals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mPendingTransitions <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mPendingTransitions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mPendingTransitions<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mPendingTransitions<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endChangingAnimations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mPendingTransitions<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	mIsInTraversal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u6E90\u7801\u53EF\u4EE5\u770B\u51FA,<code>performTraversals()</code>\u65B9\u6CD5\u4E2D\u4F1A\u4F9D\u6B21\u505A\u4E09\u4EF6\u4E8B\uFF1A</p><ul><li><code>performMeasure()</code>, \u5185\u90E8\u662F<code> mView.measure(childWidthMeasureSpec, childHeightMeasureSpec);</code>\u6D4B\u91CF<code>View</code>\u5927\u5C0F\u3002\u8FD9\u91CC\u987A\u4FBF\u63D0\u4E00\u4E0B\uFF0C\u8FD9\u4E2A<code>mView</code>\u662F\u4EC0\u4E48\uFF1F\u5B83\u5C31\u662F<code>Window</code>\u6700\u9876\u6210\u7684<code>View(DecorView)</code>,\u5B83\u662F<code>FrameLayout</code>\u7684\u5B50\u7C7B\u3002</li><li><code>performLayout()</code>, \u5185\u90E8\u662F<code>mView.layout(0, 0, host.getMeasuredWidth(), host.getMeasuredHeight());</code>\u89C6\u56FE\u5E03\u5C40\uFF0C\u786E\u5B9A<code>View</code>\u4F4D\u7F6E\u3002</li><li><code>performDraw()</code>, \u5185\u90E8\u662F<code>draw(fullRedrawNeeded);</code> \u7ED8\u5236\u754C\u9762\u3002</li></ul><p>\u81F3\u6B64<code>View</code>\u7ED8\u5236\u7684\u4E09\u4E2A\u8FC7\u7A0B\u5DF2\u7ECF\u5C55\u73B0\uFF1A</p><h1 id="measure" tabindex="-1"><a class="header-anchor" href="#measure" aria-hidden="true">#</a> <code>Measure</code></h1><p><code>performMeasure</code>\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> childWidthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> childHeightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token string">&quot;measure&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		mView<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>childWidthMeasureSpec<span class="token punctuation">,</span> childHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>performMeasure()</code>\u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528<code>View.measure()</code>\u65B9\u6CD5\uFF0C \u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * This is called to find out how big a view should be. The parent
 * supplies constraint information in the width and height parameters.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * The actual measurement work of a view is performed in
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>, called by this method. Therefore, only
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> can and must be overridden by subclasses.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 *
 * <span class="token keyword">@param</span> <span class="token parameter">widthMeasureSpec</span> Horizontal space requirements as imposed by the
 *        parent
 * <span class="token keyword">@param</span> <span class="token parameter">heightMeasureSpec</span> Vertical space requirements as imposed by the
 *        parent
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">measure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">boolean</span> optical <span class="token operator">=</span> <span class="token function">isLayoutModeOptical</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>optical <span class="token operator">!=</span> <span class="token function">isLayoutModeOptical</span><span class="token punctuation">(</span>mParent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Insets</span> insets <span class="token operator">=</span> <span class="token function">getOpticalInsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> oWidth  <span class="token operator">=</span> insets<span class="token punctuation">.</span>left <span class="token operator">+</span> insets<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
		<span class="token keyword">int</span> oHeight <span class="token operator">=</span> insets<span class="token punctuation">.</span>top  <span class="token operator">+</span> insets<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>
		widthMeasureSpec  <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">adjust</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span>  optical <span class="token operator">?</span> <span class="token operator">-</span>oWidth  <span class="token operator">:</span> oWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
		heightMeasureSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">adjust</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">,</span> optical <span class="token operator">?</span> <span class="token operator">-</span>oHeight <span class="token operator">:</span> oHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Suppress sign extension for the low bytes</span>
	<span class="token keyword">long</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> widthMeasureSpec <span class="token operator">&lt;&lt;</span> <span class="token number">32</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> heightMeasureSpec <span class="token operator">&amp;</span> <span class="token number">0</span>xffffffffL<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mMeasureCache <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> mMeasureCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongSparseLongArray</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_FORCE_LAYOUT<span class="token punctuation">)</span> <span class="token operator">==</span> PFLAG_FORCE_LAYOUT <span class="token operator">||</span>
			widthMeasureSpec <span class="token operator">!=</span> mOldWidthMeasureSpec <span class="token operator">||</span>
			heightMeasureSpec <span class="token operator">!=</span> mOldHeightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// first clears the measured dimension flag</span>
		mPrivateFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG_MEASURED_DIMENSION_SET<span class="token punctuation">;</span>

		<span class="token function">resolveRtlPropertiesIfNeeded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> cacheIndex <span class="token operator">=</span> <span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_FORCE_LAYOUT<span class="token punctuation">)</span> <span class="token operator">==</span> PFLAG_FORCE_LAYOUT <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span>
				mMeasureCache<span class="token punctuation">.</span><span class="token function">indexOfKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>cacheIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> sIgnoreMeasureCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u8C03\u7528onMeasure\u65B9\u6CD5</span>
			<span class="token comment">// measure ourselves, this should set the measured dimension flag back</span>
			<span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mPrivateFlags3 <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">long</span> value <span class="token operator">=</span> mMeasureCache<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>cacheIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// Casting a long to int drops the high 32 bits, no mask needed</span>
			<span class="token function">setMeasuredDimensionRaw</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mPrivateFlags3 <span class="token operator">|=</span> PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// flag not set, setMeasuredDimension() was not invoked, we raise</span>
		<span class="token comment">// an exception to warn the developer</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_MEASURED_DIMENSION_SET<span class="token punctuation">)</span> <span class="token operator">!=</span> PFLAG_MEASURED_DIMENSION_SET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u91CD\u5199onMeausre\u65B9\u6CD5\u7684\u65F6\uFF0C\u5FC5\u987B\u8C03\u7528setMeasuredDimension\u6216\u8005super.onMeasure\u65B9\u6CD5\uFF0C\u4E0D\u7136\u5C31\u4F1A\u8D70\u5230\u8FD9\u91CC\u62A5\u9519\u3002</span>
			<span class="token comment">// setMeasuredDimension\u4E2D\u56DE\u53BB\u6539\u53D8mPrivateFlags\u7684\u503C</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;onMeasure() did not set the&quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot; measured dimension by calling&quot;</span>
					<span class="token operator">+</span> <span class="token string">&quot; setMeasuredDimension()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		mPrivateFlags <span class="token operator">|=</span> PFLAG_LAYOUT_REQUIRED<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	mOldWidthMeasureSpec <span class="token operator">=</span> widthMeasureSpec<span class="token punctuation">;</span>
	mOldHeightMeasureSpec <span class="token operator">=</span> heightMeasureSpec<span class="token punctuation">;</span>

	mMeasureCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> mMeasuredWidth<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">32</span> <span class="token operator">|</span>
			<span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> mMeasuredHeight <span class="token operator">&amp;</span> <span class="token number">0</span>xffffffffL<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// suppress sign extension</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>measure</code>\u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528<code>onMeasure</code>\u65B9\u6CD5\u3002<code>ViewGroup</code>\u7684\u5B50\u7C7B\u4F1A\u91CD\u5199\u8BE5\u65B9\u6CD5\u6765\u8FDB\u884C\u6D4B\u91CF\u5927\u5C0F\uFF0C\u56E0\u4E3A<code>mView</code>\u662F<code>DecorView</code>\uFF0C \u800C<code>DecorView</code>\u662F<code>FrameLayout</code>\u7684\u5B50\u7C7B\u3002\u6240\u4EE5\u6211\u4EEC\u770B\u4E00\u4E0B<code>FrameLayout.onMeasure</code>\u65B9\u6CD5\uFF1A <code>FrameLayout.onMeasure</code>\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> measureMatchParentChildren <span class="token operator">=</span>
			<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY <span class="token operator">||</span>
			<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">;</span>
	mMatchParentChildren<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> maxHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> maxWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> childState <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mMeasureAllChildren <span class="token operator">||</span> child<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> GONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u8C03\u7528\u8BE5\u65B9\u6CD5\u53BB\u6D4B\u91CF\u6BCF\u4E2A\u5B50View</span>
			<span class="token function">measureChildWithMargins</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token class-name">LayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			maxWidth <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">,</span>
					child<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> lp<span class="token punctuation">.</span>leftMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>rightMargin<span class="token punctuation">)</span><span class="token punctuation">;</span>
			maxHeight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">,</span>
					child<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> lp<span class="token punctuation">.</span>topMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>bottomMargin<span class="token punctuation">)</span><span class="token punctuation">;</span>
			childState <span class="token operator">=</span> <span class="token function">combineMeasuredStates</span><span class="token punctuation">(</span>childState<span class="token punctuation">,</span> child<span class="token punctuation">.</span><span class="token function">getMeasuredState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>measureMatchParentChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>lp<span class="token punctuation">.</span>width <span class="token operator">==</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT <span class="token operator">||</span>
						lp<span class="token punctuation">.</span>height <span class="token operator">==</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					mMatchParentChildren<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Account for padding too</span>
	maxWidth <span class="token operator">+=</span> <span class="token function">getPaddingLeftWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingRightWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	maxHeight <span class="token operator">+=</span> <span class="token function">getPaddingTopWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingBottomWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Check against our minimum height and width</span>
	maxHeight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">,</span> <span class="token function">getSuggestedMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	maxWidth <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">,</span> <span class="token function">getSuggestedMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Check against our foreground&#39;s minimum height and width</span>
	<span class="token keyword">final</span> <span class="token class-name">Drawable</span> drawable <span class="token operator">=</span> <span class="token function">getForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>drawable <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		maxHeight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">,</span> drawable<span class="token punctuation">.</span><span class="token function">getMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		maxWidth <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">,</span> drawable<span class="token punctuation">.</span><span class="token function">getMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span><span class="token function">resolveSizeAndState</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">,</span> childState<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token function">resolveSizeAndState</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">,</span>
					childState <span class="token operator">&lt;&lt;</span> MEASURED_HEIGHT_STATE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	count <span class="token operator">=</span> mMatchParentChildren<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> mMatchParentChildren<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">final</span> <span class="token class-name">MarginLayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MarginLayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> childWidthMeasureSpec<span class="token punctuation">;</span>
			<span class="token keyword">int</span> childHeightMeasureSpec<span class="token punctuation">;</span>
			
			<span class="token keyword">if</span> <span class="token punctuation">(</span>lp<span class="token punctuation">.</span>width <span class="token operator">==</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				childWidthMeasureSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
						<span class="token function">getPaddingLeftWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingRightWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
						lp<span class="token punctuation">.</span>leftMargin <span class="token operator">-</span> lp<span class="token punctuation">.</span>rightMargin<span class="token punctuation">,</span>
						<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				childWidthMeasureSpec <span class="token operator">=</span> <span class="token function">getChildMeasureSpec</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span>
						<span class="token function">getPaddingLeftWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingRightWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
						lp<span class="token punctuation">.</span>leftMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>rightMargin<span class="token punctuation">,</span>
						lp<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			
			<span class="token keyword">if</span> <span class="token punctuation">(</span>lp<span class="token punctuation">.</span>height <span class="token operator">==</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				childHeightMeasureSpec <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
						<span class="token function">getPaddingTopWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getPaddingBottomWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span>
						lp<span class="token punctuation">.</span>topMargin <span class="token operator">-</span> lp<span class="token punctuation">.</span>bottomMargin<span class="token punctuation">,</span>
						<span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				childHeightMeasureSpec <span class="token operator">=</span> <span class="token function">getChildMeasureSpec</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">,</span>
						<span class="token function">getPaddingTopWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getPaddingBottomWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
						lp<span class="token punctuation">.</span>topMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>bottomMargin<span class="token punctuation">,</span>
						lp<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			child<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>childWidthMeasureSpec<span class="token punctuation">,</span> childHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u5230\u5185\u90E8\u4F1A\u8C03\u7528<code>measureChildWithMargins()</code>\u65B9\u6CD5,\u8BE5\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Ask one of the children of this view to measure itself, taking into
 * account both the MeasureSpec requirements for this view and its padding
 * and margins. The child must have MarginLayoutParams The heavy lifting is
 * done in getChildMeasureSpec.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">child</span> The child to measure
 * <span class="token keyword">@param</span> <span class="token parameter">parentWidthMeasureSpec</span> The width requirements for this view
 * <span class="token keyword">@param</span> <span class="token parameter">widthUsed</span> Extra space that has been used up by the parent
 *        horizontally (possibly by other children of the parent)
 * <span class="token keyword">@param</span> <span class="token parameter">parentHeightMeasureSpec</span> The height requirements for this view
 * <span class="token keyword">@param</span> <span class="token parameter">heightUsed</span> Extra space that has been used up by the parent
 *        vertically (possibly by other children of the parent)
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">measureChildWithMargins</span><span class="token punctuation">(</span><span class="token class-name">View</span> child<span class="token punctuation">,</span>
		<span class="token keyword">int</span> parentWidthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> widthUsed<span class="token punctuation">,</span>
		<span class="token keyword">int</span> parentHeightMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightUsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token class-name">MarginLayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MarginLayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> childWidthMeasureSpec <span class="token operator">=</span> <span class="token function">getChildMeasureSpec</span><span class="token punctuation">(</span>parentWidthMeasureSpec<span class="token punctuation">,</span>
			mPaddingLeft <span class="token operator">+</span> mPaddingRight <span class="token operator">+</span> lp<span class="token punctuation">.</span>leftMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>rightMargin
					<span class="token operator">+</span> widthUsed<span class="token punctuation">,</span> lp<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> childHeightMeasureSpec <span class="token operator">=</span> <span class="token function">getChildMeasureSpec</span><span class="token punctuation">(</span>parentHeightMeasureSpec<span class="token punctuation">,</span>
			mPaddingTop <span class="token operator">+</span> mPaddingBottom <span class="token operator">+</span> lp<span class="token punctuation">.</span>topMargin <span class="token operator">+</span> lp<span class="token punctuation">.</span>bottomMargin
					<span class="token operator">+</span> heightUsed<span class="token punctuation">,</span> lp<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>

	child<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>childWidthMeasureSpec<span class="token punctuation">,</span> childHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CC\u9762\u5C31\u662F\u5BF9\u8BE5\u5B50<code>View</code>\u8C03\u7528\u4E86<code>measure</code>\u65B9\u6CD5\uFF0C\u6211\u4EEC\u5047\u8BBE\u8FD9\u4E2A<code>View</code>\u5DF2\u7ECF\u4E0D\u662F<code>ViewGroup</code>\u4E86\uFF0C\u5C31\u4F1A\u53C8\u548C\u4E0A\u9762\u4E00\u6837\uFF0C\u53C8\u8C03\u7528<code>onMeasure</code>\u65B9\u6CD5\uFF0C \u4E0B\u9762\u6211\u4EEC\u76F4\u63A5\u770B\u4E00\u4E0B<code>View.onMeasure()</code>\u65B9\u6CD5\uFF1A <code>View.onMeasure()</code>\u65B9\u6CD5\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * Measure the view and its content to determine the measured width and the
 * measured height. This method is invoked by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> and
 * should be overriden by subclasses to provide accurate and efficient
 * measurement of their contents.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>CONTRACT:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> When overriding this method, you
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>must<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> call <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> to store the
 * measured width and height of this view. Failure to do so will trigger an
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">IllegalStateException</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>, thrown by
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>. Calling the superclass&#39;
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> is a valid use.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * The base class implementation of measure defaults to the background size,
 * unless a larger size is allowed by the MeasureSpec. Subclasses should
 * override <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> to provide better measurements of
 * their content.
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * If this method is overridden, it is the subclass&#39;s responsibility to make
 * sure the measured height and width are at least the view&#39;s minimum height
 * and width (<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getSuggestedMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getSuggestedMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>).
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@param</span> <span class="token parameter">widthMeasureSpec</span> horizontal space requirements as imposed by the parent.
 *                         The requirements are encoded with
 *                         <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token class-name">MeasureSpec</span></span><span class="token punctuation">}</span>.
 * <span class="token keyword">@param</span> <span class="token parameter">heightMeasureSpec</span> vertical space requirements as imposed by the parent.
 *                         The requirements are encoded with
 *                         <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token class-name">MeasureSpec</span></span><span class="token punctuation">}</span>.
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getSuggestedMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getSuggestedMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token class-name">MeasureSpec</span><span class="token punctuation">#</span><span class="token function">getMode</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span><span class="token class-name">View</span><span class="token punctuation">.</span><span class="token class-name">MeasureSpec</span><span class="token punctuation">#</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span></span>
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5982\u679C\u4E0D\u91CD\u5199onMeasure\u65B9\u6CD5\uFF0C\u9ED8\u8BA4\u4F1A\u8C03\u7528getDefaultSize\u83B7\u53D6\u5927\u5C0F\uFF0C\u4E0B\u9762\u4F1A\u8BF4getDefaultSize\u8FD9\u4E2A\u65B9\u6CD5\u3002</span>
	<span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span><span class="token function">getDefaultSize</span><span class="token punctuation">(</span><span class="token function">getSuggestedMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token function">getDefaultSize</span><span class="token punctuation">(</span><span class="token function">getSuggestedMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setMeasuredDimension()</code>\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This method must be called by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> to store the
 * measured width and measured height. Failing to do so will trigger an
 * exception at measurement time.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@param</span> <span class="token parameter">measuredWidth</span> The measured width of this view.  May be a complex
 * bit mask as defined by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_SIZE_MASK</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_STATE_TOO_SMALL</span></span><span class="token punctuation">}</span>.
 * <span class="token keyword">@param</span> <span class="token parameter">measuredHeight</span> The measured height of this view.  May be a complex
 * bit mask as defined by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_SIZE_MASK</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_STATE_TOO_SMALL</span></span><span class="token punctuation">}</span>.
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span><span class="token keyword">int</span> measuredWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> measuredHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">boolean</span> optical <span class="token operator">=</span> <span class="token function">isLayoutModeOptical</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>optical <span class="token operator">!=</span> <span class="token function">isLayoutModeOptical</span><span class="token punctuation">(</span>mParent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Insets</span> insets <span class="token operator">=</span> <span class="token function">getOpticalInsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> opticalWidth  <span class="token operator">=</span> insets<span class="token punctuation">.</span>left <span class="token operator">+</span> insets<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
		<span class="token keyword">int</span> opticalHeight <span class="token operator">=</span> insets<span class="token punctuation">.</span>top  <span class="token operator">+</span> insets<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>

		measuredWidth  <span class="token operator">+=</span> optical <span class="token operator">?</span> opticalWidth  <span class="token operator">:</span> <span class="token operator">-</span>opticalWidth<span class="token punctuation">;</span>
		measuredHeight <span class="token operator">+=</span> optical <span class="token operator">?</span> opticalHeight <span class="token operator">:</span> <span class="token operator">-</span>opticalHeight<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">setMeasuredDimensionRaw</span><span class="token punctuation">(</span>measuredWidth<span class="token punctuation">,</span> measuredHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setMeasuredDimensionRaw()</code>\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Sets the measured dimension without extra processing for things like optical bounds.
 * Useful for reapplying consistent values that have already been cooked with adjustments
 * for optical bounds, etc. such as those from the measurement cache.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">measuredWidth</span> The measured width of this view.  May be a complex
 * bit mask as defined by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_SIZE_MASK</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_STATE_TOO_SMALL</span></span><span class="token punctuation">}</span>.
 * <span class="token keyword">@param</span> <span class="token parameter">measuredHeight</span> The measured height of this view.  May be a complex
 * bit mask as defined by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_SIZE_MASK</span></span><span class="token punctuation">}</span> and
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">MEASURED_STATE_TOO_SMALL</span></span><span class="token punctuation">}</span>.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setMeasuredDimensionRaw</span><span class="token punctuation">(</span><span class="token keyword">int</span> measuredWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> measuredHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u8D4B\u503C\u7ED9mMeasuredWidth\uFF0CgetMeasuredWidth\u5C31\u4F1A\u8C03\u7528\u8BE5\u503C\u3002</span>
	mMeasuredWidth <span class="token operator">=</span> measuredWidth<span class="token punctuation">;</span>
	mMeasuredHeight <span class="token operator">=</span> measuredHeight<span class="token punctuation">;</span>

	<span class="token comment">// \u8FD9\u5C31\u662F\u91CD\u5199onMeasure\u65B9\u6CD5\u65F6\u5982\u679C\u4E0D\u8C03\u7528setMeasuredDimension\u65B9\u6CD5\u65F6\u4E3A\u4EC0\u4E48\u4F1A\u62A5\u9519\u7684\u539F\u56E0\u3002</span>
	mPrivateFlags <span class="token operator">|=</span> PFLAG_MEASURED_DIMENSION_SET<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u63A5\u7740\u770B\u4E00\u4E0B\u4E0A\u9762\u7528\u5230\u7684<code>getDefaultSize()</code>\u65B9\u6CD5\uFF0C\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Utility to return a default size. Uses the supplied size if the
 * MeasureSpec imposed no constraints. Will get larger if allowed
 * by the MeasureSpec.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">size</span> Default size for this view
 * <span class="token keyword">@param</span> <span class="token parameter">measureSpec</span> Constraints imposed by the parent
 * <span class="token keyword">@return</span> The size this view should be.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getDefaultSize</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">,</span> <span class="token keyword">int</span> measureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> size<span class="token punctuation">;</span>
	<span class="token comment">// measureSpec\u503C\u7528\u4E8E\u83B7\u53D6\u5BBD\u5EA6(\u9AD8\u5EA6)\u7684\u89C4\u683C\u548C\u5927\u5C0F\uFF0C\u89E3\u6790\u51FA\u5BF9\u5E94\u7684size\u548Cmode</span>
	<span class="token keyword">int</span> specMode <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>measureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> specSize <span class="token operator">=</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>measureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">switch</span> <span class="token punctuation">(</span>specMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>UNSPECIFIED<span class="token operator">:</span>
		result <span class="token operator">=</span> size<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>AT_MOST<span class="token operator">:</span>
	<span class="token keyword">case</span> <span class="token class-name">MeasureSpec</span><span class="token punctuation">.</span>EXACTLY<span class="token operator">:</span>
		result <span class="token operator">=</span> specSize<span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getDefaultSize</code>\u65B9\u6CD5\u53C8\u4F1A\u4F7F\u7528\u5230<code>MeasureSpec</code>\u7C7B\uFF0C\u6587\u6863\u4E2D\u5BF9<code>MeasureSpec</code>\u662F\u8FD9\u6837\u4ECB\u7ECD\u7684<code>A MeasureSpec is comprised of a size and a mode. There are three possible modes:</code></p><ul><li>MeasureSpec.EXACTLY The parent has determined an exact size for the child. The child is going to be given those bounds regardless of how big it wants to be. \u7406\u89E3\u6210MATCH_PARENT\u6216\u8005\u5728\u5E03\u5C40\u4E2D\u6307\u5B9A\u4E86\u5BBD\u9AD8\u503C\uFF0C\u5982layout:width=&#39;50dp&#39;</li><li>MeasureSpec.AT_MOST The child can be as large as it wants up to the specified size.\u7406\u89E3\u6210WRAP_CONTENT,\u8FD9\u662F\u7684\u503C\u662F\u7236View\u53EF\u4EE5\u5141\u8BB8\u7684\u6700\u5927\u7684\u503C\uFF0C\u53EA\u8981\u4E0D\u8D85\u8FC7\u8FD9\u4E2A\u503C\u90FD\u53EF\u4EE5\u3002</li><li>MeasureSpec.UNSPECIFIED The parent has not imposed any constraint on the child. It can be whatever size it wants. \u8FD9\u79CD\u60C5\u51B5\u6BD4\u8F83\u5C11\uFF0C\u4E00\u822C\u7528\u4E0D\u5230\u3002</li></ul><p>\u8FD9\u91CC\u7B80\u5355\u603B\u7ED3\u4E00\u4E0B\u4E0A\u9762\u7684\u8FC7\u7A0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">performMeasure</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">-</span> <span class="token number">1.</span>\u8C03\u7528<span class="token class-name">View</span><span class="token punctuation">.</span>measure\u65B9\u6CD5
	mView<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>
		<span class="token operator">-</span> <span class="token number">2.</span>measure\u5185\u90E8\u4F1A\u8C03\u7528onMeasure\u65B9\u6CD5<span class="token punctuation">,</span>\u4F46\u662F\u56E0\u4E3A\u8FD9\u91CCmView\u662F<span class="token class-name">DecorView</span>\uFF0C\u6240\u4EE5\u4F1A\u8C03\u7528<span class="token class-name">FrameLayout</span>\u7684onMeasure\u65B9\u6CD5\u3002
	        <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token class-name">FrameLayout</span><span class="token punctuation">)</span>
			<span class="token operator">-</span> <span class="token number">3.</span> \u5185\u90E8\u8BBE\u7F6E<span class="token class-name">ViewGroup</span>\u7684\u5BBD\u9AD8
				setMeasuredDimension
				\u5E76\u4E14\u5BF9\u6BCF\u4E2A\u5B50<span class="token class-name">View</span>\u8FDB\u884C\u904D\u5386\u6D4B\u91CF
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token operator">-</span> <span class="token number">4.</span> \u5BF9\u6BCF\u4E2A\u5B50<span class="token class-name">View</span>\u8C03\u7528measureChildWithMargins\u65B9\u6CD5
					<span class="token function">measureChildWithMargins</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
					    <span class="token operator">-</span><span class="token number">5.</span> measureChildWithMargins\u5185\u90E8\u8C03\u7528\u5B50<span class="token class-name">View</span>\u7684measure\u65B9\u6CD5
					        meausre
							<span class="token operator">-</span> <span class="token number">6.</span> measure\u65B9\u6CD5\u5185\u90E8\u53C8\u8C03\u7528onMeasure\u65B9\u6CD5
					            <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token class-name">View</span><span class="token punctuation">)</span>
					            <span class="token operator">-</span> <span class="token number">7.</span> onMeasure\u65B9\u6CD5\u5185\u90E8\u8C03\u7528setMeasuredDimension
									setMeasuredDimension
									<span class="token operator">-</span> <span class="token number">8.</span> setMeasuredDimension\u5185\u90E8\u8C03\u7528setMeasuredDimensionRaw
									    setMeasuredDimensionRaw
				<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u4E2D\u80FD\u770B\u5230<code>measure</code>\u662F<code>final</code>\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u91CD\u5199<code>onMeasure</code>\u6765\u5B9E\u73B0<code>measure</code>\u8FC7\u7A0B\u3002 \u5230\u8FD9\u91CC\u57FA\u672C\u90FD\u8BB2\u5B8C\u4E86\uFF0C\u6211\u4EEC\u5728\u5F00\u53D1\u4E2D\u4F1A\u6309\u7167\u9700\u8981\u91CD\u5199<code>onMeasure</code>\u65B9\u6CD5\uFF0C\u7136\u540E\u8C03\u7528<code>setMeasuredDimension</code>\u65B9\u6CD5\u8BBE\u7F6E\u5927\u5C0F\uFF0C ps:\u8B6C\u5982\u6211\u4EEC\u8BBE\u7F6E\u4E86<code>setMeasuredDimension(10, 10)</code>,\u90A3\u4E48\u4E0D\u7BA1\u5E03\u5C40\u4E2D\u600E\u4E48\u8BBE\u7F6E\u8FD9\u4E2A<code>View</code>\u7684\u5927\u5C0F \u90FD\u662F\u6CA1\u7528\u7684\uFF0C\u6700\u540E\u663E\u793A\u51FA\u6765\u5927\u5C0F\u90FD\u662F10*10\u3002</p><h1 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> <code>Layout</code></h1><p><code>performLayout</code>\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performLayout</span><span class="token punctuation">(</span><span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> lp<span class="token punctuation">,</span> <span class="token keyword">int</span> desiredWindowWidth<span class="token punctuation">,</span>
		<span class="token keyword">int</span> desiredWindowHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mLayoutRequested <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	mScrollMayChange <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	mInLayout <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token class-name">View</span> host <span class="token operator">=</span> mView<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_ORIENTATION <span class="token operator">||</span> DEBUG_LAYOUT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Laying out &quot;</span> <span class="token operator">+</span> host <span class="token operator">+</span> <span class="token string">&quot; to (&quot;</span> <span class="token operator">+</span>
				host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token string">&quot;layout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u628A\u521A\u624D\u6D4B\u91CF\u7684\u5BBD\u9AD8\u8BBE\u7F6E\u8FDB\u6765</span>
		host<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		mInLayout <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> numViewsRequestingLayout <span class="token operator">=</span> mLayoutRequesters<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>numViewsRequestingLayout <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// requestLayout() was called during layout.</span>
			<span class="token comment">// If no layout-request flags are set on the requesting views, there is no problem.</span>
			<span class="token comment">// If some requests are still pending, then we need to clear those flags and do</span>
			<span class="token comment">// a full request/measure/layout pass to handle this situation.</span>
			<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> validLayoutRequesters <span class="token operator">=</span> <span class="token function">getValidLayoutRequesters</span><span class="token punctuation">(</span>mLayoutRequesters<span class="token punctuation">,</span>
					<span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>validLayoutRequesters <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Set this flag to indicate that any further requests are happening during</span>
				<span class="token comment">// the second pass, which may result in posting those requests to the next</span>
				<span class="token comment">// frame instead</span>
				mHandlingLayoutInLayoutRequest <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

				<span class="token comment">// Process fresh layout requests, then measure and layout</span>
				<span class="token keyword">int</span> numValidRequests <span class="token operator">=</span> validLayoutRequesters<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numValidRequests<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> view <span class="token operator">=</span> validLayoutRequesters<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot;View&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;requestLayout() improperly called by &quot;</span> <span class="token operator">+</span> view <span class="token operator">+</span>
							<span class="token string">&quot; during layout: running second layout pass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					view<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token function">measureHierarchy</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> lp<span class="token punctuation">,</span> mView<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
						desiredWindowWidth<span class="token punctuation">,</span> desiredWindowHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
				mInLayout <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				host<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				mHandlingLayoutInLayoutRequest <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

				<span class="token comment">// Check the valid requests again, this time without checking/clearing the</span>
				<span class="token comment">// layout flags, since requests happening during the second pass get noop&#39;d</span>
				validLayoutRequesters <span class="token operator">=</span> <span class="token function">getValidLayoutRequesters</span><span class="token punctuation">(</span>mLayoutRequesters<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>validLayoutRequesters <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> finalRequesters <span class="token operator">=</span> validLayoutRequesters<span class="token punctuation">;</span>
					<span class="token comment">// Post second-pass requests to the next frame</span>
					<span class="token function">getRunQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token annotation punctuation">@Override</span>
						<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">int</span> numValidRequests <span class="token operator">=</span> finalRequesters<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numValidRequests<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
								<span class="token keyword">final</span> <span class="token class-name">View</span> view <span class="token operator">=</span> finalRequesters<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot;View&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;requestLayout() improperly called by &quot;</span> <span class="token operator">+</span> view <span class="token operator">+</span>
										<span class="token string">&quot; during second layout pass: posting in next frame&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								view<span class="token punctuation">.</span><span class="token function">requestLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	mInLayout <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u4F1A\u8C03\u7528<code>layout()</code>\u65B9\u6CD5\uFF0C\u56E0\u4E3A<code>host</code>\u662F<code>mView</code>\uFF0C<code>ViewGroup</code>\u4E2D\u91CD\u5199\u4E86<code>layout</code>\u65B9\u6CD5\uFF0C\u5E76\u8C03\u7528\u4E86<code>super.layout</code>. \u6240\u4EE5\u6211\u4EEC\u76F4\u63A5\u770B<code>View.layout()</code>\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Assign a size and position to a view and all of its
 * descendants
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This is the second phase of the layout mechanism.
 * (The first is measuring). In this phase, each parent calls
 * layout on all of its children to position them.
 * This is typically done using the child measurements
 * that were stored in the measure pass().<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Derived classes should not override this method.
 * Derived classes with children should override
 * onLayout. In that method, they should
 * call layout on each of their children.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *
 * <span class="token keyword">@param</span> <span class="token parameter">l</span> Left position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">t</span> Top position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">r</span> Right position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">b</span> Bottom position, relative to parent
 */</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">layout</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags3 <span class="token operator">&amp;</span> PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">onMeasure</span><span class="token punctuation">(</span>mOldWidthMeasureSpec<span class="token punctuation">,</span> mOldHeightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mPrivateFlags3 <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> oldL <span class="token operator">=</span> mLeft<span class="token punctuation">;</span>
	<span class="token keyword">int</span> oldT <span class="token operator">=</span> mTop<span class="token punctuation">;</span>
	<span class="token keyword">int</span> oldB <span class="token operator">=</span> mBottom<span class="token punctuation">;</span>
	<span class="token keyword">int</span> oldR <span class="token operator">=</span> mRight<span class="token punctuation">;</span>

	<span class="token comment">// \u8FD9\u90E8\u5206\u662F\u5224\u65AD\u8FD9\u4E2AView\u7684\u5927\u5C0F\u662F\u5426\u5DF2\u7ECF\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u6765\u5224\u65AD\u662F\u5426\u9700\u8981\u91CD\u7ED8\u3002</span>
	<span class="token keyword">boolean</span> changed <span class="token operator">=</span> <span class="token function">isLayoutModeOptical</span><span class="token punctuation">(</span>mParent<span class="token punctuation">)</span> <span class="token operator">?</span>
			<span class="token function">setOpticalFrame</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">setFrame</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>changed <span class="token operator">||</span> <span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_LAYOUT_REQUIRED<span class="token punctuation">)</span> <span class="token operator">==</span> PFLAG_LAYOUT_REQUIRED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5185\u90E8\u8C03\u7528onLayout\u65B9\u6CD5</span>
		<span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token punctuation">,</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mPrivateFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG_LAYOUT_REQUIRED<span class="token punctuation">;</span>

		<span class="token class-name">ListenerInfo</span> li <span class="token operator">=</span> mListenerInfo<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>li <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> li<span class="token punctuation">.</span>mOnLayoutChangeListeners <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OnLayoutChangeListener</span><span class="token punctuation">&gt;</span></span> listenersCopy <span class="token operator">=</span>
					<span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OnLayoutChangeListener</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>li<span class="token punctuation">.</span>mOnLayoutChangeListeners<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> numListeners <span class="token operator">=</span> listenersCopy<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numListeners<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				listenersCopy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onLayoutChange</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">,</span> oldL<span class="token punctuation">,</span> oldT<span class="token punctuation">,</span> oldR<span class="token punctuation">,</span> oldB<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	mPrivateFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG_FORCE_LAYOUT<span class="token punctuation">;</span>
	mPrivateFlags3 <span class="token operator">|=</span> PFLAG3_IS_LAID_OUT<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F1A\u8C03\u7528<code>onLayout</code>\u65B9\u6CD5\uFF0C\u540C\u6837\u56E0\u4E3A<code>mView</code>\u662F<code>FrameLayout</code>\u7684\u5B50\u7C7B\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u770B<code>FrameLayout</code>\u7684<code>onLayout</code>\u65B9\u6CD5\uFF0C \u8FD9\u91CC\u6211\u4EEC\u5148\u770B\u4E00\u4E0B<code>ViewGroup.onLayout</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> changed<span class="token punctuation">,</span>
		<span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u6240\u4EE5<code>ViewGroup</code>\u7684\u5B50\u7C7B\u90FD\u9700\u8981\u5B9E\u73B0\u8BE5\u65B9\u6CD5\u3002 \u6211\u4EEC\u770B\u4E00\u4E0B<code>FrameLayout.onLayout</code>\u65B9\u6CD5,\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> changed<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">layoutChildren</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* no force left gravity */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">layoutChildren</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span> bottom<span class="token punctuation">,</span>
							  <span class="token keyword">boolean</span> forceLeftGravity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> parentLeft <span class="token operator">=</span> <span class="token function">getPaddingLeftWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> parentRight <span class="token operator">=</span> right <span class="token operator">-</span> left <span class="token operator">-</span> <span class="token function">getPaddingRightWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">int</span> parentTop <span class="token operator">=</span> <span class="token function">getPaddingTopWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> parentBottom <span class="token operator">=</span> bottom <span class="token operator">-</span> top <span class="token operator">-</span> <span class="token function">getPaddingBottomWithForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	mForegroundBoundsChanged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> GONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">LayoutParams</span> lp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutParams</span><span class="token punctuation">)</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">final</span> <span class="token keyword">int</span> width <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> height <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">int</span> childLeft<span class="token punctuation">;</span>
			<span class="token keyword">int</span> childTop<span class="token punctuation">;</span>

			<span class="token keyword">int</span> gravity <span class="token operator">=</span> lp<span class="token punctuation">.</span>gravity<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>gravity <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				gravity <span class="token operator">=</span> DEFAULT_CHILD_GRAVITY<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">final</span> <span class="token keyword">int</span> layoutDirection <span class="token operator">=</span> <span class="token function">getLayoutDirection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> absoluteGravity <span class="token operator">=</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span><span class="token function">getAbsoluteGravity</span><span class="token punctuation">(</span>gravity<span class="token punctuation">,</span> layoutDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> verticalGravity <span class="token operator">=</span> gravity <span class="token operator">&amp;</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>VERTICAL_GRAVITY_MASK<span class="token punctuation">;</span>

			<span class="token keyword">switch</span> <span class="token punctuation">(</span>absoluteGravity <span class="token operator">&amp;</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>HORIZONTAL_GRAVITY_MASK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>CENTER_HORIZONTAL<span class="token operator">:</span>
					childLeft <span class="token operator">=</span> parentLeft <span class="token operator">+</span> <span class="token punctuation">(</span>parentRight <span class="token operator">-</span> parentLeft <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span>
					lp<span class="token punctuation">.</span>leftMargin <span class="token operator">-</span> lp<span class="token punctuation">.</span>rightMargin<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>RIGHT<span class="token operator">:</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>forceLeftGravity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						childLeft <span class="token operator">=</span> parentRight <span class="token operator">-</span> width <span class="token operator">-</span> lp<span class="token punctuation">.</span>rightMargin<span class="token punctuation">;</span>
						<span class="token keyword">break</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>LEFT<span class="token operator">:</span>
				<span class="token keyword">default</span><span class="token operator">:</span>
					childLeft <span class="token operator">=</span> parentLeft <span class="token operator">+</span> lp<span class="token punctuation">.</span>leftMargin<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">switch</span> <span class="token punctuation">(</span>verticalGravity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>TOP<span class="token operator">:</span>
					childTop <span class="token operator">=</span> parentTop <span class="token operator">+</span> lp<span class="token punctuation">.</span>topMargin<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>CENTER_VERTICAL<span class="token operator">:</span>
					childTop <span class="token operator">=</span> parentTop <span class="token operator">+</span> <span class="token punctuation">(</span>parentBottom <span class="token operator">-</span> parentTop <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span>
					lp<span class="token punctuation">.</span>topMargin <span class="token operator">-</span> lp<span class="token punctuation">.</span>bottomMargin<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token keyword">case</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span>BOTTOM<span class="token operator">:</span>
					childTop <span class="token operator">=</span> parentBottom <span class="token operator">-</span> height <span class="token operator">-</span> lp<span class="token punctuation">.</span>bottomMargin<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token keyword">default</span><span class="token operator">:</span>
					childTop <span class="token operator">=</span> parentTop <span class="token operator">+</span> lp<span class="token punctuation">.</span>topMargin<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">//\u8C03\u7528\u5B50View\u7684layout\u65B9\u6CD5</span>
			child<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>childLeft<span class="token punctuation">,</span> childTop<span class="token punctuation">,</span> childLeft <span class="token operator">+</span> width<span class="token punctuation">,</span> childTop <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C<code>View.layout</code>\u65B9\u6CD5\uFF0C\u53C8\u4F1A\u8C03\u7528\u5230<code>View.onLayout</code>\u65B9\u6CD5\uFF0C\u6211\u4EEC\u5047\u8BBE\u8FD9\u4E2A\u5B50<code>View</code>\u4E0D\u662F<code>ViewGroup</code>. \u770B\u4E00\u4E0B<code>View.onLayout</code>\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Called from layout when this view should
 * assign a size and position to each of its children.
 *
 * Derived classes with children should override
 * this method and call layout on each of
 * their children.
 * <span class="token keyword">@param</span> <span class="token parameter">changed</span> This is a new size or position for this view
 * <span class="token keyword">@param</span> <span class="token parameter">left</span> Left position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">top</span> Top position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">right</span> Right position, relative to parent
 * <span class="token keyword">@param</span> <span class="token parameter">bottom</span> Bottom position, relative to parent
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> changed<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> top<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u4E00\u4E2A\u7A7A\u65B9\u6CD5\uFF0C\u8FD9\u662F\u56E0\u4E3A<code>Layout</code>\u9700\u8981<code>ViewGroup</code>\u6765\u63A7\u5236\u8FDB\u884C\u3002</p><p>\u8FD9\u91CC\u4E5F\u603B\u7ED3\u4E00\u4E0B<code>layout</code>\u7684\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performLayout</span><span class="token punctuation">(</span><span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> lp<span class="token punctuation">,</span> <span class="token keyword">int</span> desiredWindowWidth<span class="token punctuation">,</span>
		<span class="token keyword">int</span> desiredWindowHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">-</span> <span class="token number">1.</span> host<span class="token punctuation">.</span>layout
	host<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> host<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token operator">-</span><span class="token number">2.</span> layout\u65B9\u6CD5\u4F1A\u5206\u522B\u8C03\u7528<span class="token function">setFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u548C<span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u65B9\u6CD5
			<span class="token function">setFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token function">onLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token operator">-</span><span class="token number">3.</span> \u56E0\u4E3Ahost\u662FmView\u4E5F\u5C31\u662F<span class="token class-name">DecorView</span>\u4E5F\u5C31\u662F<span class="token class-name">FrameLayout</span>\u7684\u5B50\u7C7B\u3002<span class="token class-name">FrameLayout</span>\u7684onLayout\u65B9\u6CD5\u5982\u4E0B
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> GONE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					    <span class="token operator">-</span><span class="token number">4.</span> \u904D\u5386\u6BCF\u4E2A\u5B50<span class="token class-name">View</span>\uFF0C\u5E76\u5206\u522B\u8C03\u7528layout\u65B9\u6CD5\u3002
						child<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>childLeft<span class="token punctuation">,</span> childTop<span class="token punctuation">,</span> childLeft <span class="token operator">+</span> width<span class="token punctuation">,</span> childTop <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="draw" tabindex="-1"><a class="header-anchor" href="#draw" aria-hidden="true">#</a> <code>Draw</code></h1><p>\u7ED8\u5236\u9636\u6BB5\u662F\u4ECE<code>ViewRootImpl</code>\u4E2D\u7684<code>performDraw</code>\u65B9\u6CD5\u5F00\u59CB\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mDisplayState <span class="token operator">==</span> <span class="token class-name">Display</span><span class="token punctuation">.</span>STATE_OFF <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mReportNextDraw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> fullRedrawNeeded <span class="token operator">=</span> mFullRedrawNeeded<span class="token punctuation">;</span>
	mFullRedrawNeeded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	mIsDrawing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">,</span> <span class="token string">&quot;draw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5F00\u59CBdraw\u4E86</span>
		<span class="token function">draw</span><span class="token punctuation">(</span>fullRedrawNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		mIsDrawing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span>TRACE_TAG_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// For whatever reason we didn&#39;t create a HardwareRenderer, end any</span>
	<span class="token comment">// hardware animations that are now dangling</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mPendingAnimatingRenderNodes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> mAttachInfo<span class="token punctuation">.</span>mPendingAnimatingRenderNodes<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mAttachInfo<span class="token punctuation">.</span>mPendingAnimatingRenderNodes<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endAllAnimators</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		mAttachInfo<span class="token punctuation">.</span>mPendingAnimatingRenderNodes<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mReportNextDraw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mReportNextDraw <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">fence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>LOCAL_LOGV<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;FINISHED DRAWING: &quot;</span> <span class="token operator">+</span> mWindowAttributes<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mSurfaceHolder <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mSurface<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mSurfaceHolderCallback<span class="token punctuation">.</span><span class="token function">surfaceRedrawNeeded</span><span class="token punctuation">(</span>mSurfaceHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span> callbacks<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> mSurfaceHolder<span class="token punctuation">.</span><span class="token function">getCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>callbacks <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback</span> c <span class="token operator">:</span> callbacks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token keyword">instanceof</span> <span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SurfaceHolder<span class="token punctuation">.</span>Callback2</span><span class="token punctuation">)</span>c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">surfaceRedrawNeeded</span><span class="token punctuation">(</span>
								mSurfaceHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			mWindowSession<span class="token punctuation">.</span><span class="token function">finishDrawing</span><span class="token punctuation">(</span>mWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u4F1A\u8C03\u7528<code>draw</code>\u65B9\u6CD5\uFF0C<code>draw</code>\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fullRedrawNeeded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Surface</span> surface <span class="token operator">=</span> mSurface<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>surface<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_FPS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">trackFPS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sFirstDrawComplete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">synchronized</span> <span class="token punctuation">(</span>sFirstDrawHandlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			sFirstDrawComplete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> count <span class="token operator">=</span> sFirstDrawHandlers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>sFirstDrawHandlers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token function">scrollToRectOrFocus</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mViewScrollChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mAttachInfo<span class="token punctuation">.</span>mViewScrollChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		mAttachInfo<span class="token punctuation">.</span>mTreeObserver<span class="token punctuation">.</span><span class="token function">dispatchOnScrollChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">boolean</span> animating <span class="token operator">=</span> mScroller <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mScroller<span class="token punctuation">.</span><span class="token function">computeScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> curScrollY<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>animating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		curScrollY <span class="token operator">=</span> mScroller<span class="token punctuation">.</span><span class="token function">getCurrY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		curScrollY <span class="token operator">=</span> mScrollY<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mCurScrollY <span class="token operator">!=</span> curScrollY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mCurScrollY <span class="token operator">=</span> curScrollY<span class="token punctuation">;</span>
		fullRedrawNeeded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">float</span> appScale <span class="token operator">=</span> mAttachInfo<span class="token punctuation">.</span>mApplicationScale<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> scalingRequired <span class="token operator">=</span> mAttachInfo<span class="token punctuation">.</span>mScalingRequired<span class="token punctuation">;</span>

	<span class="token keyword">int</span> resizeAlpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mResizeBuffer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> deltaTime <span class="token operator">=</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mResizeBufferStartTime<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>deltaTime <span class="token operator">&lt;</span> mResizeBufferDuration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">float</span> amt <span class="token operator">=</span> deltaTime<span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> mResizeBufferDuration<span class="token punctuation">;</span>
			amt <span class="token operator">=</span> mResizeInterpolator<span class="token punctuation">.</span><span class="token function">getInterpolation</span><span class="token punctuation">(</span>amt<span class="token punctuation">)</span><span class="token punctuation">;</span>
			animating <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			resizeAlpha <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>amt<span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">disposeResizeBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token class-name">Rect</span> dirty <span class="token operator">=</span> mDirty<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mSurfaceHolder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// The app owns the surface, we won&#39;t draw.</span>
		dirty<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>animating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mScroller <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mScroller<span class="token punctuation">.</span><span class="token function">abortAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token function">disposeResizeBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>fullRedrawNeeded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mAttachInfo<span class="token punctuation">.</span>mIgnoreDirtyState <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		dirty<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>mWidth <span class="token operator">*</span> appScale <span class="token operator">+</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>mHeight <span class="token operator">*</span> appScale <span class="token operator">+</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_ORIENTATION <span class="token operator">||</span> DEBUG_DRAW<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Draw &quot;</span> <span class="token operator">+</span> mView <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span>
				<span class="token operator">+</span> mWindowAttributes<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token operator">+</span> <span class="token string">&quot;: dirty={&quot;</span> <span class="token operator">+</span> dirty<span class="token punctuation">.</span>left <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> dirty<span class="token punctuation">.</span>top
				<span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> dirty<span class="token punctuation">.</span>right <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> dirty<span class="token punctuation">.</span>bottom <span class="token operator">+</span> <span class="token string">&quot;} surface=&quot;</span>
				<span class="token operator">+</span> surface <span class="token operator">+</span> <span class="token string">&quot; surface.isValid()=&quot;</span> <span class="token operator">+</span> surface<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, appScale:&quot;</span> <span class="token operator">+</span>
				appScale <span class="token operator">+</span> <span class="token string">&quot;, width=&quot;</span> <span class="token operator">+</span> mWidth <span class="token operator">+</span> <span class="token string">&quot;, height=&quot;</span> <span class="token operator">+</span> mHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	mAttachInfo<span class="token punctuation">.</span>mTreeObserver<span class="token punctuation">.</span><span class="token function">dispatchOnDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> xOffset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> yOffset <span class="token operator">=</span> curScrollY<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> params <span class="token operator">=</span> mWindowAttributes<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">Rect</span> surfaceInsets <span class="token operator">=</span> params <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> params<span class="token punctuation">.</span>surfaceInsets <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>surfaceInsets <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		xOffset <span class="token operator">-=</span> surfaceInsets<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
		yOffset <span class="token operator">-=</span> surfaceInsets<span class="token punctuation">.</span>top<span class="token punctuation">;</span>

		<span class="token comment">// Offset dirty rect for surface insets.</span>
		dirty<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>surfaceInsets<span class="token punctuation">.</span>left<span class="token punctuation">,</span> surfaceInsets<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dirty<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> mIsAnimating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Draw with hardware renderer.</span>
			mIsAnimating <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">boolean</span> invalidateRoot <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mHardwareYOffset <span class="token operator">!=</span> yOffset <span class="token operator">||</span> mHardwareXOffset <span class="token operator">!=</span> xOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mHardwareYOffset <span class="token operator">=</span> yOffset<span class="token punctuation">;</span>
				mHardwareXOffset <span class="token operator">=</span> xOffset<span class="token punctuation">;</span>
				mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">invalidateRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			mResizeAlpha <span class="token operator">=</span> resizeAlpha<span class="token punctuation">;</span>

			dirty<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			mBlockResizeBuffer <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>mView<span class="token punctuation">,</span> mAttachInfo<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// If we get here with a disabled &amp; requested hardware renderer, something went</span>
			<span class="token comment">// wrong (an invalidate posted right before we destroyed the hardware surface</span>
			<span class="token comment">// for instance) so we should just bail out. Locking the surface with software</span>
			<span class="token comment">// rendering at this point would lock it forever and prevent hardware renderer</span>
			<span class="token comment">// from doing its job when it comes back.</span>
			<span class="token comment">// Before we request a new frame we must however attempt to reinitiliaze the</span>
			<span class="token comment">// hardware renderer if it&#39;s in requested state. This would happen after an</span>
			<span class="token comment">// eglTerminate() for instance.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
					<span class="token operator">!</span>mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
					mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">isRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					mAttachInfo<span class="token punctuation">.</span>mHardwareRenderer<span class="token punctuation">.</span><span class="token function">initializeIfNeeded</span><span class="token punctuation">(</span>
							mWidth<span class="token punctuation">,</span> mHeight<span class="token punctuation">,</span> mSurface<span class="token punctuation">,</span> surfaceInsets<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">OutOfResourcesException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">handleOutOfResourcesException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">return</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				mFullRedrawNeeded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				<span class="token function">scheduleTraversals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			
			<span class="token comment">// draw\u7684\u90E8\u5206\u5728\u8FD9\u91CC\u3002\u3002\u3002\u5185\u90E8\u4F1A\u7528canvas\u53BB\u753B</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">drawSoftware</span><span class="token punctuation">(</span>surface<span class="token punctuation">,</span> mAttachInfo<span class="token punctuation">,</span> xOffset<span class="token punctuation">,</span> yOffset<span class="token punctuation">,</span> scalingRequired<span class="token punctuation">,</span> dirty<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>animating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mFullRedrawNeeded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token function">scheduleTraversals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u4E00\u4E0B<code>drawSoftware</code>\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> true if drawing was successful, false if an error occurred
 */</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">drawSoftware</span><span class="token punctuation">(</span><span class="token class-name">Surface</span> surface<span class="token punctuation">,</span> <span class="token class-name">AttachInfo</span> attachInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> xoff<span class="token punctuation">,</span> <span class="token keyword">int</span> yoff<span class="token punctuation">,</span>
		<span class="token keyword">boolean</span> scalingRequired<span class="token punctuation">,</span> <span class="token class-name">Rect</span> dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">// Draw with software renderer.</span>
	<span class="token keyword">final</span> <span class="token class-name">Canvas</span> canvas<span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> left <span class="token operator">=</span> dirty<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> top <span class="token operator">=</span> dirty<span class="token punctuation">.</span>top<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> right <span class="token operator">=</span> dirty<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> bottom <span class="token operator">=</span> dirty<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>

		canvas <span class="token operator">=</span> mSurface<span class="token punctuation">.</span><span class="token function">lockCanvas</span><span class="token punctuation">(</span>dirty<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// The dirty rectangle can be modified by Surface.lockCanvas()</span>
		<span class="token comment">//noinspection ConstantConditions</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">!=</span> dirty<span class="token punctuation">.</span>left <span class="token operator">||</span> top <span class="token operator">!=</span> dirty<span class="token punctuation">.</span>top <span class="token operator">||</span> right <span class="token operator">!=</span> dirty<span class="token punctuation">.</span>right
				<span class="token operator">||</span> bottom <span class="token operator">!=</span> dirty<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			attachInfo<span class="token punctuation">.</span>mIgnoreDirtyState <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// TODO: Do this in native</span>
		canvas<span class="token punctuation">.</span><span class="token function">setDensity</span><span class="token punctuation">(</span>mDensity<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Surface<span class="token punctuation">.</span>OutOfResourcesException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">handleOutOfResourcesException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Could not lock surface&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// Don&#39;t assume this is due to out of memory, it could be</span>
		<span class="token comment">// something else, and if it is something else then we could</span>
		<span class="token comment">// kill stuff (or ourself) for no reason.</span>
		mLayoutRequested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">// ask wm for a new surface next time.</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_ORIENTATION <span class="token operator">||</span> DEBUG_DRAW<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Surface &quot;</span> <span class="token operator">+</span> surface <span class="token operator">+</span> <span class="token string">&quot; drawing to bitmap w=&quot;</span>
					<span class="token operator">+</span> canvas<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, h=&quot;</span> <span class="token operator">+</span> canvas<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//canvas.drawARGB(255, 255, 0, 0);</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// If this bitmap&#39;s format includes an alpha channel, we</span>
		<span class="token comment">// need to clear it before drawing so that the child will</span>
		<span class="token comment">// properly re-composite its drawing on a transparent</span>
		<span class="token comment">// background. This automatically respects the clip/dirty region</span>
		<span class="token comment">// or</span>
		<span class="token comment">// If we are applying an offset, we need to clear the area</span>
		<span class="token comment">// where the offset doesn&#39;t appear to avoid having garbage</span>
		<span class="token comment">// left in the blank areas.</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>canvas<span class="token punctuation">.</span><span class="token function">isOpaque</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> yoff <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> xoff <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">PorterDuff<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span>CLEAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		dirty<span class="token punctuation">.</span><span class="token function">setEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mIsAnimating <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		attachInfo<span class="token punctuation">.</span>mDrawingTime <span class="token operator">=</span> <span class="token class-name">SystemClock</span><span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		mView<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">|=</span> <span class="token class-name">View</span><span class="token punctuation">.</span>PFLAG_DRAWN<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_DRAW<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Context</span> cxt <span class="token operator">=</span> mView<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Drawing: package:&quot;</span> <span class="token operator">+</span> cxt<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
					<span class="token string">&quot;, metrics=&quot;</span> <span class="token operator">+</span> cxt<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
					<span class="token string">&quot;, compatibilityInfo=&quot;</span> <span class="token operator">+</span> cxt<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCompatibilityInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span>xoff<span class="token punctuation">,</span> <span class="token operator">-</span>yoff<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mTranslator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				mTranslator<span class="token punctuation">.</span><span class="token function">translateCanvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			canvas<span class="token punctuation">.</span><span class="token function">setScreenDensity</span><span class="token punctuation">(</span>scalingRequired <span class="token operator">?</span> mNoncompatDensity <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			attachInfo<span class="token punctuation">.</span>mSetIgnoreDirtyState <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			
			<span class="token comment">// \u5185\u90E8\u4F1A\u53BB\u8C03\u7528View.draw()\uFF1B</span>
			mView<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>attachInfo<span class="token punctuation">.</span>mSetIgnoreDirtyState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Only clear the flag if it was not set during the mView.draw() call</span>
				attachInfo<span class="token punctuation">.</span>mIgnoreDirtyState <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			surface<span class="token punctuation">.</span><span class="token function">unlockCanvasAndPost</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Could not unlock surface&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
			mLayoutRequested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">// ask wm for a new surface next time.</span>
			<span class="token comment">//noinspection ReturnInsideFinallyBlock</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>LOCAL_LOGV<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;Surface &quot;</span> <span class="token operator">+</span> surface <span class="token operator">+</span> <span class="token string">&quot; unlockCanvasAndPost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u4E2D\u8C03\u7528\u4E86<code>mView.draw()</code>\u65B9\u6CD5\uFF0C\u6240\u4EE5\u6211\u4EEC\u770B\u4E00\u4E0B<code>FrameLayout.draw()</code>\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mForeground <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">Drawable</span> foreground <span class="token operator">=</span> mForeground<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mForegroundBoundsChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mForegroundBoundsChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token class-name">Rect</span> selfBounds <span class="token operator">=</span> mSelfBounds<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token class-name">Rect</span> overlayBounds <span class="token operator">=</span> mOverlayBounds<span class="token punctuation">;</span>

			<span class="token keyword">final</span> <span class="token keyword">int</span> w <span class="token operator">=</span> mRight<span class="token operator">-</span>mLeft<span class="token punctuation">;</span>
			<span class="token keyword">final</span> <span class="token keyword">int</span> h <span class="token operator">=</span> mBottom<span class="token operator">-</span>mTop<span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>mForegroundInPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				selfBounds<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				selfBounds<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>mPaddingLeft<span class="token punctuation">,</span> mPaddingTop<span class="token punctuation">,</span> w <span class="token operator">-</span> mPaddingRight<span class="token punctuation">,</span> h <span class="token operator">-</span> mPaddingBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">final</span> <span class="token keyword">int</span> layoutDirection <span class="token operator">=</span> <span class="token function">getLayoutDirection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Gravity</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>mForegroundGravity<span class="token punctuation">,</span> foreground<span class="token punctuation">.</span><span class="token function">getIntrinsicWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					foreground<span class="token punctuation">.</span><span class="token function">getIntrinsicHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selfBounds<span class="token punctuation">,</span> overlayBounds<span class="token punctuation">,</span>
					layoutDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>
			foreground<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>overlayBounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		foreground<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u8C03\u7528\u4E86<code>super.draw()</code>\uFF0C\u800C<code>ViewGroup</code>\u6CA1\u6709\u91CD\u5199\u8BE5\u65B9\u6CD5\uFF0C\u6240\u4EE5\u76F4\u63A5\u770B<code>View</code>\u7684<code>draw()</code>\u65B9\u6CD5. <code>View.draw()</code>\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Manually render this view (and all of its children) to the given Canvas.
 * The view must have already done a full layout before this function is
 * called.  When implementing a view, implement
 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">onDraw</span><span class="token punctuation">(</span><span class="token namespace">android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span></span><span class="token class-name">Canvas</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> instead of overriding this method.
 * If you do need to override this method, call the superclass version.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">canvas</span> The Canvas to which the View is rendered.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> privateFlags <span class="token operator">=</span> mPrivateFlags<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> dirtyOpaque <span class="token operator">=</span> <span class="token punctuation">(</span>privateFlags <span class="token operator">&amp;</span> PFLAG_DIRTY_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> PFLAG_DIRTY_OPAQUE <span class="token operator">&amp;&amp;</span>
			<span class="token punctuation">(</span>mAttachInfo <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mAttachInfo<span class="token punctuation">.</span>mIgnoreDirtyState<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mPrivateFlags <span class="token operator">=</span> <span class="token punctuation">(</span>privateFlags <span class="token operator">&amp;</span> <span class="token operator">~</span>PFLAG_DIRTY_MASK<span class="token punctuation">)</span> <span class="token operator">|</span> PFLAG_DRAWN<span class="token punctuation">;</span>

	<span class="token comment">// \u8FD9\u91CC\u6CE8\u91CA\u8BF4\u7684\u5F88\u660E\u767D\u4E86\uFF0Cdraw\u76846\u4E2A\u6B65\u9AA4\u3002</span>
	<span class="token comment">/*
	 * Draw traversal performs several drawing steps which must be executed
	 * in the appropriate order:
	 *
	 *      1. Draw the background
	 *      2. If necessary, save the canvas&#39; layers to prepare for fading
	 *      3. Draw view&#39;s content, \u8C03\u7528onDraw\u65B9\u6CD5\u7ED8\u5236\u81EA\u8EAB
	 *      4. Draw children, \u8C03\u7528dispatchDraw\u65B9\u6CD5\u7ED8\u5236\u5B50View
	 *      5. If necessary, draw the fading edges and restore layers
	 *      6. Draw decorations (scrollbars for instance)
	 */</span>

	<span class="token comment">// Step 1, draw the background, if needed</span>
	<span class="token keyword">int</span> saveCount<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dirtyOpaque<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">drawBackground</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// skip step 2 &amp; 5 if possible (common case)</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> viewFlags <span class="token operator">=</span> mViewFlags<span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> horizontalEdges <span class="token operator">=</span> <span class="token punctuation">(</span>viewFlags <span class="token operator">&amp;</span> FADING_EDGE_HORIZONTAL<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> verticalEdges <span class="token operator">=</span> <span class="token punctuation">(</span>viewFlags <span class="token operator">&amp;</span> FADING_EDGE_VERTICAL<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>verticalEdges <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>horizontalEdges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Step 3, draw the content</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dirtyOpaque<span class="token punctuation">)</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Step 4, draw the children</span>
		<span class="token function">dispatchDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Step 6, draw decorations (scrollbars)</span>
		<span class="token function">onDrawScrollBars</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mOverlay <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mOverlay<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mOverlay<span class="token punctuation">.</span><span class="token function">getOverlayView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispatchDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// we&#39;re done...</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*
	 * Here we do the full fledged routine...
	 * (this is an uncommon case where speed matters less,
	 * this is why we repeat some of the tests that have been
	 * done above)
	 */</span>

	<span class="token keyword">boolean</span> drawTop <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> drawBottom <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> drawLeft <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> drawRight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	<span class="token keyword">float</span> topFadeStrength <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span>
	<span class="token keyword">float</span> bottomFadeStrength <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span>
	<span class="token keyword">float</span> leftFadeStrength <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span>
	<span class="token keyword">float</span> rightFadeStrength <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span>

	<span class="token comment">// Step 2, save the canvas&#39; layers</span>
	<span class="token keyword">int</span> paddingLeft <span class="token operator">=</span> mPaddingLeft<span class="token punctuation">;</span>

	<span class="token keyword">final</span> <span class="token keyword">boolean</span> offsetRequired <span class="token operator">=</span> <span class="token function">isPaddingOffsetRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>offsetRequired<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		paddingLeft <span class="token operator">+=</span> <span class="token function">getLeftPaddingOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> left <span class="token operator">=</span> mScrollX <span class="token operator">+</span> paddingLeft<span class="token punctuation">;</span>
	<span class="token keyword">int</span> right <span class="token operator">=</span> left <span class="token operator">+</span> mRight <span class="token operator">-</span> mLeft <span class="token operator">-</span> mPaddingRight <span class="token operator">-</span> paddingLeft<span class="token punctuation">;</span>
	<span class="token keyword">int</span> top <span class="token operator">=</span> mScrollY <span class="token operator">+</span> <span class="token function">getFadeTop</span><span class="token punctuation">(</span>offsetRequired<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> bottom <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token function">getFadeHeight</span><span class="token punctuation">(</span>offsetRequired<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>offsetRequired<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		right <span class="token operator">+=</span> <span class="token function">getRightPaddingOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bottom <span class="token operator">+=</span> <span class="token function">getBottomPaddingOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token class-name">ScrollabilityCache</span> scrollabilityCache <span class="token operator">=</span> mScrollCache<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">float</span> fadeHeight <span class="token operator">=</span> scrollabilityCache<span class="token punctuation">.</span>fadingEdgeLength<span class="token punctuation">;</span>
	<span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> fadeHeight<span class="token punctuation">;</span>

	<span class="token comment">// clip the fade length if top and bottom fades overlap</span>
	<span class="token comment">// overlapping fades produce odd-looking artifacts</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>verticalEdges <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>top <span class="token operator">+</span> length <span class="token operator">&gt;</span> bottom <span class="token operator">-</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		length <span class="token operator">=</span> <span class="token punctuation">(</span>bottom <span class="token operator">-</span> top<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// also clip horizontal fades if necessary</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>horizontalEdges <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> length <span class="token operator">&gt;</span> right <span class="token operator">-</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		length <span class="token operator">=</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>verticalEdges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		topFadeStrength <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0.0f</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token function">getTopFadingEdgeStrength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		drawTop <span class="token operator">=</span> topFadeStrength <span class="token operator">*</span> fadeHeight <span class="token operator">&gt;</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>
		bottomFadeStrength <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0.0f</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token function">getBottomFadingEdgeStrength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		drawBottom <span class="token operator">=</span> bottomFadeStrength <span class="token operator">*</span> fadeHeight <span class="token operator">&gt;</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>horizontalEdges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		leftFadeStrength <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0.0f</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token function">getLeftFadingEdgeStrength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		drawLeft <span class="token operator">=</span> leftFadeStrength <span class="token operator">*</span> fadeHeight <span class="token operator">&gt;</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>
		rightFadeStrength <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0.0f</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">,</span> <span class="token function">getRightFadingEdgeStrength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		drawRight <span class="token operator">=</span> rightFadeStrength <span class="token operator">*</span> fadeHeight <span class="token operator">&gt;</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	saveCount <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getSaveCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">int</span> solidColor <span class="token operator">=</span> <span class="token function">getSolidColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>solidColor <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> flags <span class="token operator">=</span> <span class="token class-name">Canvas</span><span class="token punctuation">.</span>HAS_ALPHA_LAYER_SAVE_FLAG<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>drawTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top <span class="token operator">+</span> length<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>drawBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> bottom <span class="token operator">-</span> length<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>drawLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left <span class="token operator">+</span> length<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>drawRight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>right <span class="token operator">-</span> length<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		scrollabilityCache<span class="token punctuation">.</span><span class="token function">setFadeColor</span><span class="token punctuation">(</span>solidColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Step 3, draw the content</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dirtyOpaque<span class="token punctuation">)</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Step 4, draw the children</span>
	<span class="token function">dispatchDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Step 5, draw the fade effect and restore layers</span>
	<span class="token keyword">final</span> <span class="token class-name">Paint</span> p <span class="token operator">=</span> scrollabilityCache<span class="token punctuation">.</span>paint<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">Matrix</span> matrix <span class="token operator">=</span> scrollabilityCache<span class="token punctuation">.</span>matrix<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">Shader</span> fade <span class="token operator">=</span> scrollabilityCache<span class="token punctuation">.</span>shader<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>drawTop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fadeHeight <span class="token operator">*</span> topFadeStrength<span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fade<span class="token punctuation">.</span><span class="token function">setLocalMatrix</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>fade<span class="token punctuation">)</span><span class="token punctuation">;</span>
		canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top <span class="token operator">+</span> length<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>drawBottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fadeHeight <span class="token operator">*</span> bottomFadeStrength<span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postRotate</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fade<span class="token punctuation">.</span><span class="token function">setLocalMatrix</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>fade<span class="token punctuation">)</span><span class="token punctuation">;</span>
		canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> bottom <span class="token operator">-</span> length<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>drawLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fadeHeight <span class="token operator">*</span> leftFadeStrength<span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postRotate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fade<span class="token punctuation">.</span><span class="token function">setLocalMatrix</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>fade<span class="token punctuation">)</span><span class="token punctuation">;</span>
		canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left <span class="token operator">+</span> length<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>drawRight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> fadeHeight <span class="token operator">*</span> rightFadeStrength<span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postRotate</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span>right<span class="token punctuation">,</span> top<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fade<span class="token punctuation">.</span><span class="token function">setLocalMatrix</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>fade<span class="token punctuation">)</span><span class="token punctuation">;</span>
		canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>right <span class="token operator">-</span> length<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>saveCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Step 6, draw decorations (scrollbars)</span>
	<span class="token function">onDrawScrollBars</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>mOverlay <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mOverlay<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mOverlay<span class="token punctuation">.</span><span class="token function">getOverlayView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispatchDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F1A\u8C03\u7528<code>onDraw</code>\u548C<code>dispatchDraw</code>\u65B9\u6CD5\u3002 \u6211\u4EEC\u5148\u770B\u4E00\u4E0B<code>View.onDraw</code>\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Implement this to do your drawing.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">canvas</span> the canvas on which the background will be drawn
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u662F\u7A7A\u65B9\u6CD5\uFF0C\u8FD9\u662F\u4E5F\u5F88\u597D\u7406\u89E3\uFF0C\u56E0\u4E3A\u6BCF\u4E2A<code>View</code>\u7684\u5C55\u73B0\u90FD\u4E0D\u4E00\u6837\uFF0C\u4F8B\u5982<code>TextView</code>\u3001<code>ProgressBar</code>\u7B49\uFF0C \u6240\u4EE5<code>View</code>\u4E0D\u4F1A\u53BB\u5B9E\u73B0<code>onDraw</code>\u65B9\u6CD5\uFF0C\u5177\u4F53\u662F\u8981\u5B50\u7C7B\u53BB\u6839\u636E\u81EA\u5DF1\u7684\u663E\u793A\u8981\u6C42\u5B9E\u73B0\u8BE5\u65B9\u6CD5\u3002</p><p>\u518D\u770B\u4E00\u4E0B<code>dispatchDraw</code>\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u662F\u7528\u6765\u7ED8\u5236\u5B50<code>View</code>\u7684\uFF0C\u6240\u4EE5\u8981\u770B<code>ViewGroup.dispatchDraw</code>\u65B9\u6CD5\uFF0C<code>View.dispatchDraw</code>\u662F\u7A7A\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">dispatchDraw</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">boolean</span> usingRenderNodeProperties <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">isRecordingFor</span><span class="token punctuation">(</span>mRenderNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">int</span> childrenCount <span class="token operator">=</span> mChildrenCount<span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token class-name">View</span><span class="token punctuation">[</span><span class="token punctuation">]</span> children <span class="token operator">=</span> mChildren<span class="token punctuation">;</span>
	<span class="token keyword">int</span> flags <span class="token operator">=</span> mGroupFlags<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FLAG_RUN_ANIMATION<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">canAnimate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token keyword">boolean</span> cache <span class="token operator">=</span> <span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> FLAG_ANIMATION_CACHE<span class="token punctuation">)</span> <span class="token operator">==</span> FLAG_ANIMATION_CACHE<span class="token punctuation">;</span>

		<span class="token keyword">final</span> <span class="token keyword">boolean</span> buildCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isHardwareAccelerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childrenCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>mViewFlags <span class="token operator">&amp;</span> VISIBILITY_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> VISIBLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">final</span> <span class="token class-name">LayoutParams</span> params <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">attachLayoutAnimationParameters</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> params<span class="token punctuation">,</span> i<span class="token punctuation">,</span> childrenCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">bindLayoutAnimation</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					child<span class="token punctuation">.</span><span class="token function">setDrawingCacheEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>buildCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						child<span class="token punctuation">.</span><span class="token function">buildDrawingCache</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">final</span> <span class="token class-name">LayoutAnimationController</span> controller <span class="token operator">=</span> mLayoutAnimationController<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>controller<span class="token punctuation">.</span><span class="token function">willOverlap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mGroupFlags <span class="token operator">|=</span> FLAG_OPTIMIZE_INVALIDATE<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		controller<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		mGroupFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>FLAG_RUN_ANIMATION<span class="token punctuation">;</span>
		mGroupFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>FLAG_ANIMATION_DONE<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mGroupFlags <span class="token operator">|=</span> FLAG_CHILDREN_DRAWN_WITH_CACHE<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>mAnimationListener <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			mAnimationListener<span class="token punctuation">.</span><span class="token function">onAnimationStart</span><span class="token punctuation">(</span>controller<span class="token punctuation">.</span><span class="token function">getAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> clipSaveCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> clipToPadding <span class="token operator">=</span> <span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> CLIP_TO_PADDING_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> CLIP_TO_PADDING_MASK<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>clipToPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		clipSaveCount <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		canvas<span class="token punctuation">.</span><span class="token function">clipRect</span><span class="token punctuation">(</span>mScrollX <span class="token operator">+</span> mPaddingLeft<span class="token punctuation">,</span> mScrollY <span class="token operator">+</span> mPaddingTop<span class="token punctuation">,</span>
				mScrollX <span class="token operator">+</span> mRight <span class="token operator">-</span> mLeft <span class="token operator">-</span> mPaddingRight<span class="token punctuation">,</span>
				mScrollY <span class="token operator">+</span> mBottom <span class="token operator">-</span> mTop <span class="token operator">-</span> mPaddingBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// We will draw our child&#39;s animation, let&#39;s reset the flag</span>
	mPrivateFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG_DRAW_ANIMATION<span class="token punctuation">;</span>
	mGroupFlags <span class="token operator">&amp;=</span> <span class="token operator">~</span>FLAG_INVALIDATE_REQUIRED<span class="token punctuation">;</span>

	<span class="token keyword">boolean</span> more <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">long</span> drawingTime <span class="token operator">=</span> <span class="token function">getDrawingTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>usingRenderNodeProperties<span class="token punctuation">)</span> canvas<span class="token punctuation">.</span><span class="token function">insertReorderBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Only use the preordered list if not HW accelerated, since the HW pipeline will do the</span>
	<span class="token comment">// draw reordering internally</span>
	<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> preorderedList <span class="token operator">=</span> usingRenderNodeProperties
			<span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">buildOrderedChildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">final</span> <span class="token keyword">boolean</span> customOrder <span class="token operator">=</span> preorderedList <span class="token operator">==</span> <span class="token keyword">null</span>
			<span class="token operator">&amp;&amp;</span> <span class="token function">isChildrenDrawingOrderEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childrenCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> childIndex <span class="token operator">=</span> customOrder <span class="token operator">?</span> <span class="token function">getChildDrawingOrder</span><span class="token punctuation">(</span>childrenCount<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">:</span> i<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token punctuation">(</span>preorderedList <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
				<span class="token operator">?</span> children<span class="token punctuation">[</span>childIndex<span class="token punctuation">]</span> <span class="token operator">:</span> preorderedList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>childIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>mViewFlags <span class="token operator">&amp;</span> VISIBILITY_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> VISIBLE <span class="token operator">||</span> child<span class="token punctuation">.</span><span class="token function">getAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u8C03\u7528drawChild\u65B9\u6CD5</span>
			more <span class="token operator">|=</span> <span class="token function">drawChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> child<span class="token punctuation">,</span> drawingTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>preorderedList <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> preorderedList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Draw any disappearing views that have animations</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mDisappearingChildren <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">final</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">&gt;</span></span> disappearingChildren <span class="token operator">=</span> mDisappearingChildren<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token keyword">int</span> disappearingCount <span class="token operator">=</span> disappearingChildren<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token comment">// Go backwards -- we may delete as animations finish</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> disappearingCount<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> disappearingChildren<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			more <span class="token operator">|=</span> <span class="token function">drawChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> child<span class="token punctuation">,</span> drawingTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>usingRenderNodeProperties<span class="token punctuation">)</span> canvas<span class="token punctuation">.</span><span class="token function">insertInorderBarrier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">debugDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">onDebugDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>clipToPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>clipSaveCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// mGroupFlags might have been updated by drawChild()</span>
	flags <span class="token operator">=</span> mGroupFlags<span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FLAG_INVALIDATE_REQUIRED<span class="token punctuation">)</span> <span class="token operator">==</span> FLAG_INVALIDATE_REQUIRED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FLAG_ANIMATION_DONE<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FLAG_NOTIFY_ANIMATION_LISTENER<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
			mLayoutAnimationController<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// We want to erase the drawing cache and notify the listener after the</span>
		<span class="token comment">// next frame is drawn because one extra invalidate() is caused by</span>
		<span class="token comment">// drawChild() after the animation is over</span>
		mGroupFlags <span class="token operator">|=</span> FLAG_NOTIFY_ANIMATION_LISTENER<span class="token punctuation">;</span>
		<span class="token keyword">final</span> <span class="token class-name">Runnable</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			   <span class="token function">notifyAnimationListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		   <span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token function">post</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4E0A\u9762\u7684\u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528<code>drawChild</code>\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Draw one child of this View Group. This method is responsible for getting
 * the canvas in the right state. This includes clipping, translating so
 * that the child&#39;s scrolled origin is at 0, 0, and applying any animation
 * transformations.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">canvas</span> The canvas on which to draw the child
 * <span class="token keyword">@param</span> <span class="token parameter">child</span> Who to draw
 * <span class="token keyword">@param</span> <span class="token parameter">drawingTime</span> The time at which draw is occurring
 * <span class="token keyword">@return</span> True if an invalidate() was issued
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">drawChild</span><span class="token punctuation">(</span><span class="token class-name">Canvas</span> canvas<span class="token punctuation">,</span> <span class="token class-name">View</span> child<span class="token punctuation">,</span> <span class="token keyword">long</span> drawingTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> child<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> drawingTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4E5F\u7B80\u5355\u603B\u7ED3\u4E00\u4E0B<code>draw</code>\u7684\u8FC7\u7A0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. ViewRootImpl.performDraw()</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 2. ViewRootImpl.draw()</span>
	<span class="token function">draw</span><span class="token punctuation">(</span>fullRedrawNeeded<span class="token punctuation">)</span><span class="token punctuation">;</span>	
		<span class="token comment">// 3. ViewRootImpl.drawSoftware</span>
		drawSoftware
			<span class="token comment">// 4. \u5185\u90E8\u8C03\u7528mView.draw,\u4E5F\u5C31\u662FFrameLayout.draw(). </span>
			mView<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">FrameLayout</span><span class="token punctuation">)</span>
				<span class="token comment">// 5. FrameLayout.draw\u65B9\u6CD5\u5185\u90E8\u4F1A\u8C03\u7528super.draw\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662FView.draw\u65B9\u6CD5.</span>
				<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">// 6. View.draw\u65B9\u6CD5\u5185\u90E8\u4F1A\u5206\u522B\u8C03\u7528onDraw\u7ED8\u5236\u81EA\u5DF1\u4EE5\u53CAdispatchDraw\u7ED8\u5236\u5B50View.</span>
					onDraw
					<span class="token comment">// \u7ED8\u5236\u5B50View</span>
					dispatchDraw
						<span class="token comment">// 7. dispatchDraw\u65B9\u6CD5\u5185\u90E8\u4F1A\u904D\u5386\u6240\u6709\u5B50View.</span>
						<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childrenCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token comment">// 8. \u5BF9\u6BCF\u4E2A\u5B50View\u5206\u522B\u8C03\u7528drawChild\u65B9\u6CD5</span>
							<span class="token function">drawChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
								<span class="token comment">// 9. drawChild\u65B9\u6CD5\u5185\u90E8\u4F1A\u5BF9\u8BE5\u5B50View\u8C03\u7528draw\u65B9\u6CD5\uFF0C\u8FDB\u884C\u7ED8\u5236\u3002\u7136\u540Edraw\u53C8\u4F1A\u8C03\u7528onDraw\u7B49\uFF0C\u5FAA\u73AF\u5C31\u5F00\u59CB\u4E86\u3002 </span>
									child<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
						<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u8865\u5145\u4E00\u4E2A\u5C0F\u95EE\u9898\uFF1A <code>getWidth()</code>\u4E0E<code>getMeasuredWidth()</code>\u6709\u4EC0\u4E48\u533A\u522B\u5462\uFF1F<br> \u4E00\u822C\u60C5\u51B5\u4E0B\u8FD9\u4E24\u4E2A\u7684\u503C\u662F\u76F8\u540C\u7684\uFF0C<code>getMeasureWidth()</code>\u65B9\u6CD5\u5728<code>measure()</code>\u8FC7\u7A0B\u7ED3\u675F\u540E\u5C31\u53EF\u4EE5\u83B7\u53D6\u5230\u4E86\uFF0C\u800C<code>getWidth()</code>\u65B9\u6CD5\u8981\u5728<code>layout()</code>\u8FC7\u7A0B\u7ED3\u675F\u540E\u624D\u80FD\u83B7\u53D6\u5230\u3002 \u800C\u4E14<code>getMeasureWidth()</code>\u7684\u503C\u662F\u901A\u8FC7<code>setMeasuredDimension()</code>\u8BBE\u7F6E\u7684\uFF0C\u4F46\u662F<code>getWidth()</code>\u7684\u503C\u662F\u901A\u8FC7\u89C6\u56FE\u53F3\u8FB9\u7684\u5750\u6807\u51CF\u53BB\u5DE6\u8FB9\u7684\u5750\u6807\u8BA1\u7B97\u51FA\u6765\u7684\u3002\u5982\u679C\u6211\u4EEC\u5728<code>layout</code>\u7684\u65F6\u5019\u5C06\u5BBD\u9AD8 \u4E0D\u4F20<code>getMeasureWidth</code>\u7684\u503C\uFF0C\u90A3\u4E48\u8FD9\u65F6\u5019<code>getWidth()</code>\u4E0E<code>getMeasuredWidth</code>\u7684\u503C\u5C31\u4E0D\u4F1A\u518D\u76F8\u540C\u4E86\uFF0C\u5F53\u7136\u4E00\u822C\u4E5F\u4E0D\u4F1A\u8FD9\u4E48\u5E72...</p><hr><ul><li>\u90AE\u7BB1 \uFF1Acharon.chui@gmail.com</li><li>Good Luck!</li></ul>`,67),o=[e];function c(i,l){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","View\u7ED8\u5236\u8FC7\u7A0B\u8BE6\u89E3.html.vue"]]);export{k as default};
